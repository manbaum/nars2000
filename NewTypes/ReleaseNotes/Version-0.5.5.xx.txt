Version 0.5.5.xx consists of the following Builds:


Build #1811 -- Version 0.5.5.xx
--------------------------------

* Fix Bug In Complex Named Operator Operands

Directory branches/bsmith/NewTypes:

EXECDFN.C:
MACROS.H:
PO_CMIDDOT.C:
PO_COMB.C:
PO_DICIRCLE.C:
PO_DIDTACK.C:
PO_DIERESIS.C:
PO_DIJOT.C:
PO_DITILDE.C:
PO_DOT.C:
PO_JOT.C:
PO_JOTDOT.C:
PO_MULTISET.C:
PO_QUADJOT.C:
PO_SLASH.C:
PO_SLOPE.C:
PO_VARIANT.C:
  Allow macros to retrieve ptrs to left and right operands as NULLs,
    and ensure it doesn't happen.
  Fix bug in retrieving the left operand from a complex dyadic operator.

PARSELINE.C:
  In <ConvertNamedFopToUnnamed>, remove Assert stmt for FCNARRAY_HEADERs
    as the SynObj can sometimes be SPM.

PL_PARSE.H:
  Define additional field to hold the offset to the previous operator which
    we need in otder to handle complex named operator operands.

PRIMFNS.C:
  Define <IsTknAxis> needed in <YYCopyFcnStr>.
  Handle Direct Functions in <GetTknOpType>.
  Define <IsTknFopDir> to detect direct functions/operators.

PRIMSPEC.C:
  In <PrimFnDydSimpSimp_EM>, fix bug trying to free non-existent vars.

STARTADDR.H:
  Include more entries.

STRAND.C:
  Pass additional parameter to <YYCopyFcnStr> so as to keep track of the
    location of the root operator.

YYFNS.C:
  Pass additional parameter to <YYCopyFcnStr> so as to keep track of the
    location of the root operator.
  Keep track of the location of the root operator and pass it back to the
    caller except for the right operand.


Build #1810 -- Version 0.5.5.xx
--------------------------------

* Implement Lexicographic And Gray Code Combinatorial Results

Directory branches/bsmith/NewTypes:

EXTERNS.H:
  Define struct for Special Combinatorial Function
  Define new elements of CombArgs struct.

PO_COMB.C:
  Improve comments.
  Implement Lexicographic and Gray Code combinatorial results.


Build #1809 -- Version 0.5.5.xx
--------------------------------

* Change URL For "Browse Code"
* Fix Typo In Comments

Directory branches/bsmith/NewTypes:

PF_STAR.MAC:
  Fix typo in comments in macros for Exponentiation.


Directory branches/bsmith/NewTypes/htdocs:

CONTRIBUTORS-MENU.HTML:
INDEX-MENU.HTML:
LICENSE-MENU.HTML:
  Change URL for "Browse Code".

Directory branches/bsmith/NewTypes/htdocs/download:

DOWNLOAD-MENU.HTML:
  Change URL for "Browse Code".


Build #1808 -- Version 0.5.5.xx
--------------------------------

* Fix Bug In Monadic/Dyadic Operator Operand Macros

Directory branches/bsmith/NewTypes:

MACROS.H:
  Fix bug in macros for Monadic/Dyadic Operator operand specifications.

PO_SLASH.C:
  Test for NULL from <GetMonLftOper> and handle the error message caret appropriately.

PO_VARIANT.C:
  Fix compiler bug that didn't catch '.' vs. '->'.


Build #1807 -- Version 0.5.5.xx
--------------------------------

* Fix Bug In Previous Build On Infinity & NaN

Directory branches/bsmith/NewTypes:

MPFNS.C:
  Fix bug in <mpfr_copy> and <mpfr_init_copy> not handling Infs & NaNs.


Build #1806 -- Version 0.5.5.xx
--------------------------------

* Fix Bug In Parsing F {DOP} A A

Directory branches/bsmith/NewTypes:

PARSELINE.H:
  Set the binding strength of "} A" and "} SA" to the same as "A A" so as to defer parsing until we know whether or not the object inside braces is a DOP.


Build #1805 -- Version 0.5.5.xx
--------------------------------

* Fix Bug In 3 []DR Where We Don't Trundle Through A Hetero Array To Find Lowest Precision

Directory branches/bsmith/NewTypes:

QF_DR.C:
  In <SysFnDR_GetPrec_EM_YY>, handle HETERO arrays element-by-element to find the lowest precision.


Build #1804 -- Version 0.5.5.xx
--------------------------------

* Fix Bug When Copying 1v64 In A Strand As We Lose Its Precision

Directory branches/bsmith/NewTypes:

MPFNS.C:
  Revert to <mpfr_copy> and <mpfr_init_copy> to preserve the source precision in the target.

STRAND.C:
  In <MakeGlbEntry_EM>, use <mpfr_init_copy> instead of <mpfr_init_set> so we preserve the source precision in the target.


Build #1803 -- Version 0.5.5.xx
--------------------------------

* Fix Bug When Comparing NaN FLT With Finite FLT

Directory branches/bsmith/NewTypes:

CONVERT.C:
  In <hcXY_cmp> when comparing FLTs, ensure that both are finite (not INF nor NaN).

NARS2000.TXT:
  Include file in version control.


Build #1802 -- Version 0.5.5.xx
--------------------------------

* Fix Omissions In The Language Bar

Directory branches/bsmith/NewTypes:

REBAR.C:
  Fix omissions in the Language Bar.


Build #1801 -- Version 0.5.5.xx
--------------------------------

* Fix Bugs In 12{circle}{켲nfinity}J{켲nfinity}
* Fix Bug in 12{circle}'a'

Directory branches/bsmith/NewTypes:

PF_CIRCLE.C:
  In <PrimSpecCircleStorageTypeDyd>, handle <ARRAY_ERROR> in the switch stmt.

PF_CSTAR.C:
  Fix bug in both fixed- and multiple-precision handling of 12{circle}{켲nfinity}J{켲nfinity}.


Build #1800 -- Version 0.5.5.xx
--------------------------------

* Fix Bug In 12{circle}0J{infinity}

Directory branches/bsmith/NewTypes:

PF_CSTAR.C:
  Fix bug in both fixed- and multiple-precision handling of 12{circle}0J{infinity}.


Build #1799 -- Version 0.5.5.xx
--------------------------------

* Handle Factorial Of Quaternions

Directory branches/bsmith/NewTypes:

PF_QDOT.C:
  Call Magic Function for Quaternion Factorials.
  Use common tables and macros to expand Complex & Quaternion numbers
    into their matrix representations.

PO_QUADJOT.C:
  Allow nested arrays into the Diagonal function.
  Move Matrix Representation typedefs into <po_quadjot.h>.

PO_QUADJOT.H:
  Move Matrix Representation typedefs into <po_quadjot.h>.


Build #1798 -- Version 0.5.5.xx
--------------------------------

* Handle More Infinity and NaN Special cases

Directory branches/bsmith/NewTypes:

PF_BAR.C:
  Remove special casing in favor of handling in common functions.

PF_CIRCLE.C:
PF_CIRCLE.MAC:
  Handle -4{circle} specially for infinities as the Standard
    expression doesn't work.

PF_COLONBAR.C:
  Handle special cases in Reciprocal and Divide.

PF_EQUAL.C:
  Use incoming <fQuadCT> instead of global []CT.
  Define <EqualHCxy> to handle Equal comparisons with NaNs.

PF_IOTA.C:
  Use <EqualHCxy> to handle Equal comparisons with NaNs.

PF_PLUS.C:
  Remove special casing in favor of handling in common functions.

PF_ROOT.C:
  Handle special cases in Root function.

PF_STAR.C:
  Handle special case of 0*0J1 and the like.

PF_STILE.C:
  Change back to handling Residue on MP INTs/RATs as exact.

PF_TIMES.C:
  Remove special casing in favor of handling in common functions.

PRIMSPEC.C:
  Handle comparison functions with NaNs specially in <PrimFnDydXxxxYyyy> functions.


Build #1797 -- Version 0.5.5.xx
--------------------------------

* Allow Magic Functions In Scalar Functions.

Directory branches/bsmith/NewTypes:

ENUMS.H:
  Define new exception code.

EXCEPT.C:
  Define associated entries for new exception code.

MF_SHRIEK.H:
  Include []ERROR call if the Eigenvalues are not distinct.

PF_QDOT.C:
  In <FactHCxF> use new exception code if the call to the Magic Function
    fails.  With this new code, the proper response is to use the existing
    error message in lpMemPTD->lpwszErrorMessage and the caret is set to the
    function.

PRIMSPEC.C:
  Handle new exception code as described above.


Build #1796 -- Version 0.5.5.xx
--------------------------------

* Fix Bugs When Inverting FLT and MP Non-commutative Matrices.

Directory branches/bsmith/NewTypes:

MAKEFILE.INC:
  Include file omitted from the last build.

PF_DOMINO.C:
  Fix bug not allowing Quaternion and Octonion Matrix Inverse on FLTs.

PF_DOMINO.MAC:
  Fix bug in macro used for inverting Multiple-Precision matrices in the
    non-commutative cases.

PO_VARIANT.C:
  Allow a Variant operator short form for []DQ applied to Matrix Inverse/Divide.


Build #1795 -- Version 0.5.5.xx
--------------------------------

* Define And Display A Menu For the DEBUG Window
* Show The GSL Version # In The About Box
* Define A Handler For GSL Errors
* Rename The GSL Include And Library Directories And Libraries

Directory branches/bsmith/NewTypes:

DEBUG.C:
  Handle responses for the DEBUG window menu.

MAIN.C:
  Use <PostMessage> instead of <PostThreadMessage> as the two windows have the same parent.
  Define a separate DEBUG window menu.
  Define and place into service a handler for GSL errors.

MAIN.RC:
  Show the GSL version # in the About box display.

NARS2000.VCXPROJ:
  Rename the GSL include and library directories and the libraries.

RESOURCE.H:
  Define the resource for the DEBUG window menu.

VER.C:
  Show the GSL version # in the About box display.


Build #1794 -- Version 0.5.5.xx
--------------------------------

* Implement Permanent Of A Matrix As Special Case Of Determinant Operator

Directory branches/bsmith/NewTypes:

EXECMFN.C:
EXECMFN.H:
  Include entries for a new Magic Function.

MF_DOT.H:
  Define the new Magic Function.

PO_DOT.C:
  Recognize +.x and call the new Magic Function.


Build #1793 -- Version 0.5.5.xx
--------------------------------

* Signal DOMAIN ERROR on Non-numeric Args
* Change Error Message For Non-distinct Eigenvalues

Directory branches/bsmith/NewTypes:

MF_QUADJOT.H:
  Change error message for QuadJot operator when the eigenvalues are not distinct.

PO_QUADJOT.C:
  Check for DOMAIN ERROR earlier than before.
  Fix bug of mistakenly calling a RANK ERROR a DOMAIN ERROR.


Build #1792 -- Version 0.5.5.xx
--------------------------------

* Finish Drag & Move/Copy

Directory branches/bsmith/NewTypes:

EDITCTRL.C:
  In <EDIT_WM_LButtonUp>, if the cursor is inside the Selection Region,
    release the selection and set the caret position back to the start
    of the selection.


Build #1791 -- Version 0.5.5.xx
--------------------------------

* Implement Matrix Operator
* Obtain Schur Vectors and QR Matrices From Variant Operator On Domino

Directory branches/bsmith/NewTypes:

COMPRO.H:
  Include prototype file in header.

CUSTOMIZE.C:
  Include new symbol in Keyboard Customize preferences.
  Use local function <MySetFocus> instead of <SetFocus> API so we can check the return code more easily.
  In IF/WHILE stmts always compare ptr against NULL and value against 0.

EXECFNS.C:
  Handle QuadJot as a Monadic Operator.

EXECMFN.C:
EXECMFN.H:
  Convert calls to static messages to Unicode.
  Include Magic Operator for Matrix Operator in Magic Function/Operator tables.

INITDATA.C:
  Change documentation for QuadJot from Alt-D to Alt-F.
  Define entry in <InitPrimProtoFns> for QuadJot.
  Define entry in <InitPrimFlags> for QuadJot.

KEYBOARDS_BI.H:
  Note that Alt-F is no longer an available keystroke.
  Define QuadJot for the built-in for both Alt- and Ctrl- keyboard tables .

MAKEFILE.INC:
MAKEFILE.SRC:
  Alphabetize the file names.
  Include the file name for QuadJot.
  Note that <defines.h> depends upon <WineHQ\WineCom.h>.

MF_QUADJOT.H:
  Define Magic Operator to handle Matrix Operator.

MF_VARIANT.H:
  Document a Magic Function.

NARS2000.VCXPROJ:
NARS2000.VCXPROJ.FILTERS:
  Document new source file <po_quadjot.c>.

PF_DOMINO.C:
  Consolidate code into subroutines so they may be called multiple times.
  Attempt to demote HCxF matrices to HC1F so we can use GSL Real code instead of GSL Complex.
  Attempt to demote HC2F matrix using GSL Complex instead of Gauss-Jordan on RATs.
  If Gauss-Jordan on HC4F/HC8F fails, attempt to demote to HC2F so we can use GSL Complex.

PO_QUADJOT.C:
PO_QUADJOT.H:
  Implement Matrix Operator.

PO_VARIANT.C:
  Extend Variant operator on QuadJot operator to be sensitive to []DQ.
  Extend Variant operator on Domino function to return Schur vectors and QR matrices.
  If the left operand is the Domino function, allow the right operand to be a function.
  If the left operand is the Domino function and the right operand is a function, call a Magic Operator to execute it.
  If the right arg is not a simple integer or float, see if it can be demoted to that type.

PRIMFNS.C:
  Define function to returns attributes of either a SYMENTRY or HGLOBAL.

PRIMSPEC.C:
  Fix typo in comment.

REBAR.C:
  Document the QuadJot operator on the Language Bar.

TOKENIZE.C:
  Include QuadJot as a monadic operator in various tables.

TYPEMOTE.C:
  Improve comments.
  Define routines to demote data as appropriate.

UNICODE.H:
  Define Unicode value for QuadJot symbol.
  Improve comments.


Build #1790 -- Version 0.5.5.xx
--------------------------------

* Miscellaneous Minor Changes, Part II

Directory branches/bsmith/NewTypes/WineHQ:

WINECOM.H:
  File omitted from a previous build.


Build #1789 -- Version 0.5.5.xx
--------------------------------

* Miscellaneous Minor Changes

Directory branches/bsmith/NewTypes:

DATATYPE.H:
  Fix bug in comment about offset of the data in APAs.

PF_EPSUND.C:
  Use <GetNextBoolean> macro from <macros.h> instead of local <GetNextBool>.

PO_CMIDDOT.C:
  Fix incorrect names in comments.

PRIMSPEC.C:
  Fix typo in comment.

QF_DR.C:
  Return # bits in a character for character arguments.

SYSVARS.H:
  Change minimum/maximum values for []FPC to the corresponding equates from MPFR.


Build #1788 -- Version 0.5.5.xx
--------------------------------

* Fix Bug In Multiple Indexing Of A Function

Directory branches/bsmith/NewTypes:

NARS2000.VCXPROJ:
  Note GSL dependency of <main.c>.  This file was omitted from the previous build.

PARSELINE.C:
  In <plRedF_IDX>, handle multiple indices as in F[A][A][A] A by collapsing the IDX chain.

PARSELINE.H:
  In order to allow the above code to work, we need to increase the binding of IDX v. IDX.


Build #1787 -- Version 0.5.5.xx
--------------------------------

* Debug Non-blinking Text Caret

Directory branches/bsmith/NewTypes:

DEBUG.C:
  Delete call to <AttachThreadInput> which links the message queues of the Debug and Main windows as they no longer are shared.
  Format the code better.

DEFINES.H:
  Define common macro for displaying a File, Line #, and Function name.
  Include common file of equates for WineHQ and the main code.

EDITFCN.C:
  Convert calls to static messages to Unicode.
  Use local function <MySetFocus> instead of <SetFocus> API so we can check the return code more easily.
  Omit <SetCaret> from <MdiActivate> as it should be done by the routine that handles <WM_SETFOCUS>.
  Include Text Caret DEBUG code in <FEWndProc> and <LclEditCtrlWndProc>.

MACROS.H:
  Define macro for <ExecAssert> which executes the expression and validates the result.
  Define various Boolean macros to aid in dealing with them.

MAIN.C:
  Declare <cdbThread> an extern so we can reference it.
  Use <PostThreadMessageW< instead of <SendMessageW> when setting the font for the DEBUG window.
  Delete call to <DestroyCaret> from <MFWndProc/WM_NOTIFY/TCN_SELCHANGING> as it should be called from <WM_KILLFOCUS/WM_SETFOCUS> only.
  Handle message <WM_SETFOCUS> in <MFWndProc>.

SAVEFCN.C:
  Use local function <MySetFocus> instead of <SetFocus> API so we can check the return code more easily.

SESSMAN.C:
  Include Text Caret DEBUG code in <FEWndProc> and <LclEditCtrlWndProc>.
  Use local function <MySetFocus> instead of <SetFocus> API so we can check the return code more easily.

TABCTRL.C:
  Use local function <MySetFocus> instead of <SetFocus> API so we can check the return code more easily.


Directory branches/bsmith/NewTypes/WineHQ:

EDITCTRL.C:
  Include Text Caret DEBUG code in <FEWndProc> and <LclEditCtrlWndProc>.
  Use local function <MySetFocus> instead of <SetFocus> API so we can check the return code more easily.

LOCAL.H:
  Include <WineHQ\WineCom.h> which contains common equates.
  Define prototypes for various external functions.

WINECOM.H:
  Define common equate for checking Text Carets.


Build #1786 -- Version 0.5.5.xx
--------------------------------

* Move GSL Call To Global Location

Directory branches/bsmith/NewTypes:

MAIN.C:
PF_DOMINO.C:
PO_DOT.C:
  Move call to <gsl_set_error_handler_off> to <WinMain> as we need to call it only once.


Build #1785 -- Version 0.5.5.xx
--------------------------------

* Implement Octonion Digraph Notation

Directory branches/bsmith/NewTypes:

CUSTOMIZE.C:
  Define checkbox for Octonion Digraph display choice.

DEFINES.H:
  Define Default and Digraph Octonion separators.
  Define default setting for Octonion Digraph display.

DISPLAY.C:
  Display Octonions with Digraphs is the user asks to.
  Fix bug in display of Quaternion floats ignoring Postfix notation.
  Save, set to a common state, and restore HC states over )LOAD.

EXTERNS.H:
  Define Option Flags for Octonion Digraph display.

HC_PROC.H:
  Define macro to choose the Octonion number display.
  Define alternate Octonion number separators.

INIFILE.C:
  Define inifile keynames when saving Octonion Digraph state choice.
  Read in saved Octonion Digraph state choice.
  Write out any changes to the Octonion Digraph state choice.

MAIN.RC:
  Define checkbox for Octonion Digraph state choice.

PN_PARSE.Y:
  Parse Octonion Digraph separators for both Infix and Postfix notation.

PN_PROC.C:
  Fix typo in comment.

RESOURCE.H:
  define Control ID for Octonion Digraph state checkbox.

SC_COPY.C:
  Save, set to a common state, and restore HC states over )COPY.

SC_LOAD.C:
  Save, set to a common state, and restore HC states over )LOAD.

SC_SAVE.C:
  Save, set to a common state, and restore HC states over )SAVE.

TOKENIZE.C:
  Set the Syntax Color for Octonion Digraph separators.


Build #1784 -- Version 0.5.5.xx
--------------------------------

* Implement Factorial On Fixed-Precision Quaternion Numbers

Directory branches/bsmith/NewTypes:

EXECMFN.C:
EXECMFN.H:
  Include Magic Function for Shriek function in Magic Function/Operator tables.

MF_SHRIEK.H:
  Define Magic Function to finish Monadic Shriek on Quaternions.

PF_QDOT.C:
  Delete entries for Monadic and Dyadic Shriek functions for Octonions as they are not defined on that datatype.
  Define routine to return the factorial of a Quaternion Floating Point number.
  Include Magic Function file to finish the calculation of Factorial on Quaternions.


Build #1783 -- Version 0.5.5.xx
--------------------------------

* Extend The Variant Operator To Domino To Calculate Eigenvalues And Eigenvectors

Directory branches/bsmith/NewTypes:

NARS2000.VCXPROJ:
  Change the #includes for the Variant operator source file.

PO_VARIANT.C:
  Extend the Variant operator to the Domino function to calculate Eigenvalues and Eigenvectors.
  Rename <PrimOpVariantValKeyGlb_EM> to remove the trailing _EM as it no longers sets an error message.


Build #1782 -- Version 0.5.5.xx
--------------------------------

* Fix Bug In Inner Product With Empty Hypercomplex Arrays

Directory branches/bsmith/NewTypes:

PO_DOT.C:
  Fix bug in <PrimOpDydDotCommon_EM_YY>, where Hypercomplex numbers are not handled in all cases.


Build #1781 -- Version 0.5.5.xx
--------------------------------

* Fix Bug In Indexed Assignment Of Hypercomplex Numbers

Directory branches/bsmith/NewTypes:

PF_RSHOE.C:
  In <PrimFnDydRightShoeGlbGlb_EM_YY>, when assigning a Hypercomplex number
    into an array, assign all parts, not just the Real part.


Build #1780 -- Version 0.5.5.xx
--------------------------------

* Fix Bug In Member Of With Nested Hypercomplex Numbers

Directory branches/bsmith/NewTypes:

PF_EPSILON.C:
  In <PrimFnDydEpsilonOther_EM>, handle more cases.


Build #1779 -- Version 0.5.5.xx
--------------------------------

* Define Separate Syntax Color For Output Debugging

Directory branches/bsmith/NewTypes:

EXTERNS.H:
INIFILE.C:
MAIN.RC:
RESOURCE.H:
SYNTAXCOLORS.H:
TOKENIZE.C:
  Define separate syntax color for Output Debugging.


Build #1778 -- Version 0.5.5.xx
--------------------------------

* Use A Single Debug Window Instead Of One per Tab

Directory branches/bsmith/NewTypes:

DEBUG.C:
  Create the Debugger Window as a separate window in a separate thread, not a child MDI window.

DEFINES.H:
  Delete DB-specific window message as it is no longer used.

DISPDBG.C:
PERTAB.H:
  Remove PTD-specific DEBUG info as it is not tab-specific anymore.

EXTERNS.H:
  Define global DEBUG window handle as it is not tab-specific anymore.

MAIN.C:
  Remove PTD-specific DEBUG info as it is not tab-specific anymore.
  Move code to create the Debugger Window from the Tab Ctrl to the Master Frame Window.

SESSMAN.C:
  Remove PTD-specific DEBUG info as it is not tab-specific anymore.
  Remove F9 DEBUG window positioning.

TABCTRL.C:
  Move code to create the Debugger Window from the Tab Ctrl to the Master Frame Window.
  Delete code to destroy the Debugger Window from the Tab Ctrl as it is no longer created there.

THREADS.H:
  Define parameters passed to the Debugger Window thread.

Directory branches/bsmith/NewTypes/htdocs/download:

DOWNLOAD-BODY.PHP:
  Exclude VC redistribution files from the list of files in the Downloads Section.


Build #1777 -- Version 0.5.5.xx
--------------------------------

* Fix Bug In Build #1773 With Uninitialized Var

Directory branches/bsmith/NewTypes:

SC_LOAD.C:
  In <LoadWorkspace_EM>, initialize the var <bDeleted> to FALSE.


Build #1776 -- Version 0.5.5.xx
--------------------------------

* Implement Drag/Copy Of A Selection In Any Edit Ctrl

Directory branches/bsmith/NewTypes:

EXTERNS.H:
  Define new cursor handle.

MAIN.C:
  Load new cursor handle.

MAIN.RC:
  Define new cursor resource.

MAKEFILE.INC:
  Define new cursor dependency.

RESOURCE.H:
  Define new cursor ID.


Directory branches/bsmith/NewTypes/Images:

DRAG_COPY.CUR:
  Include cursor file.


Directory branches/bsmith/NewTypes/WineHQ:

EDITCTRL.C:
  Implement drag/copy of a selection in any edit ctrl including the function and session editors.

LOCAL.H:
  Define extern for the Drag/Copy cursor.


Build #1775 -- Version 0.5.5.xx
--------------------------------

* Change Variant Operator Operand Names For Times To Interior And Exterior

Directory branches/bsmith/NewTypes:

ENUMS.H:
PF_TIMES.C:
PO_VARIANT.C:
  Change the names for Variant Operator operand for the Times function to Interior and Exterior.


Directory branches/bsmith/NewTypes/MediaWiki/extensions:

APL.CSS:
  Document the destination directory for this file.
  Include a font-face to define and load the Fallback00-1F.ttf font.


Build #1774 -- Version 0.5.5.xx
--------------------------------

* Fix Bug When Selecting Both "Keyboards" And "User Preferences" In Customize Dialog

Directory branches/bsmith/NewTypes:

CUSTOMIZE.C:
  Use separate save areas for the subclassed WNDPROC for "Keyboards" and "User Preferences" edit ctrls.
  After calls to DestroyWindow () always return a result as that function doesn't, by itself, end the window.
  When subclassing the edit ctrl for "User Preferences", use a different WNDPROC from when subclassing the edit ctrl for "Keyboards".
  After calls to EndDialog, always return a result as that function doesn't, by itself, end the dialog.


Build #1773 -- Version 0.5.5.xx
--------------------------------

* Fix Bug When A Var In A Saved Workspace Is Referenced But Not Defined

Directory branches/bsmith/NewTypes:

SC_COPY.C:
  Define new return parameter to <ParseSavedWsVar_EM> to indicate that the var was deleted.

SC_LOAD.C:
  Handle the unusual case where a var in a saved workspace is referenced but not defined by deleting the var and notifying the user.


Build #1772 -- Version 0.5.5.xx
--------------------------------

* Fix Bug When Saving Update Check Date

Directory branches/bsmith/NewTypes:

INIFILE.C:
  In <ReadIniFileGlb>, change the local var <hkl> to <langId> to better reflect its usage.
  In <ReadIniFileWnd>, fix bug when saving the Update Check date by use parens to limit the scope of the cast.


Build #1771 -- Version 0.5.5.xx
--------------------------------

* Fix Bug When Saving A Maximized Program

Directory branches/bsmith/NewTypes:

DEFINES.H:
  Define a new user local Window message.

MAIN.C:
  Rename <nMinState> to <nWinState> to better reflect its meaning.
  In <MFWndProc> define and save the initial alue of <MFState> from
    the .ini fileto test later on as the latter value can change
    before we need the original value.
  If the original value of <MFState> says to maximize the initial
    window, do so after the <WM_CREATE> message.


Build #1770 -- Version 0.5.5.xx
--------------------------------

* Fix Bug When Attempting To Save A Suspended Function

Directory branches/bsmith/NewTypes:

SAVEFCN.C:
  Fix bug when attempting to save a suspended function (introduced In Build #1670).


Build #1769 -- Version 0.5.5.xx
--------------------------------

* Implement []SI

Directory branches/bsmith/NewTypes:

COMPRO.H:
MAKEFILE.INC:
MAKEFILE.SRC:
NARS2000.VCXPROJ:
NARS2000.VCXPROJ.FILTERS:
SYSVARS.C:
  Include definition for []SI.

QF_SI.C:
  Implement []SI.


Build #1768 -- Version 0.5.5.xx
--------------------------------

* Change Semantics Of Set Function Timestamp

Directory branches/bsmith/NewTypes:

QF_FX.C:
  Change the semantics of the Set Function Timestamp function as per the wiki.


Build #1767 -- Version 0.5.5.xx
--------------------------------

* Define And Implement Set Function Properties For Dyadic []FX

Directory branches/bsmith/NewTypes:

EXTERNS.H:
MAIN.RC:
QF_AT.C:
QF_NFNS.C:
SC_COMMON.C:
SC_LOAD.C:
  Change GMT to UTC.

QF_FX.C:
  Define and implement Set Function Properties for dyadic []FX.


Build #1766 -- Version 0.5.5.xx
--------------------------------

* Support New Syntax Such As (MOPN MOPN)  And Related
* When Converting A Hybrid Symbol, Handle More Cases
* Define New Tokens For Unnamed UDFOs
* Allow Tokenize To Be Re-entrant
* Fix Bug When Displaying Trains
* Handle Global Function Entries In Saved Workspaces

Directory branches/bsmith/NewTypes:

ASSIGN.C:
  Handle new TKT_xxxDFN tokens.
  When assigning a Fcn Array into a name, calculate the token type from the source.
  Fix typos in comments.

DISPDBG.C:
  Define three new tokens for unnamed UDFOs (TKT_FCNDFN, TKT_OP1DFN, and TKT_OP2DFN).
  Re-order the existing tokens to group related objects.
  In <DisplayFcnGlb>, fix bug of displaying the right most function in a Train separately to the left of the start of the Train.
  In <DisplayFcnSub>, use <FillDfnName> to fill in the UDFO name so as to handle <:g> entries in a loaded workspace.
  Handle new TKT_xxxDFN tokens.

EXECDFN.C:
EXECFNS.C:
FREE.C:
GETFNS.C:
PRIMFNS.C:
STRAND.C:
  Handle new TKT_xxxDFN tokens.

EXTERNS.H:
MAIN.C:
  Allow <Tokenize_EM> to be re-entrant.

PARSELINE.C:
  Define reduction actions for new syntax of (MOPN MOPN) and related.
  In <ConvertHY2PFO>, handle more source tokens, and define a new argument for Fcn Array items.
  Improve some comments.
  Always set the token count in a PL_YYSTYPE.
  In <pl_yylexCOM>, consolidate blocks of similar code into a function.
  Handle new TKT_xxxDFN tokens.

PARSELINE.H:
  Define new syntax such as (MOPN MOPN) and related.
  Fix bug in syntax of nested Trains by making Trans and MOPs at the same level.

QF_AT.C:
  In <AttributeFixTime> separate Fcn Arrays from UDFOs solely as a DEBUG aid.

REFCNT.C:
  In <ChangeRefCntFcnArray>, remove <DbgStop> for nested Trains as that expression triggers this case.
  Handle new TKT_xxxDFN tokens.

TOKENIZE.C:
  Allow <Tokenize_EM> to be re-entrant.
  In <IsLocalname>, handle trailing comments on Line Continuations.
  Delete <DbgMsgW> stmts no longer needed.
  Delete stmts to get <lpMemPTD> that are no longer needed.
  In IF/WHILE stmts always compare ptr against NULL and value against 0.
  In <CheckConstantCopyLoad>, fill in Fcn Array case even though I'm not sure how it can occur.
  Handle new TKT_xxxDFN tokens.

TOKENS.H:
  Define three new tokens for unnamed UDFOs (TKT_FCNDFN, TKT_OP1DFN, and TKT_OP2DFN).
  Re-order the existing tokens to group related objects.
  Fix mistakes in comments.

TOKENSO.H:
  Number the entries in <tokenSo> for DEBUGging purposes.
  Define three new tokens for unnamed UDFOs (TKT_FCNDFN, TKT_OP1DFN, and TKT_OP2DFN).
  Re-order the existing tokens to group related objects.

TRANSLATE.C:
  Define new routine to translate an <SO_ENUM> type to a named token type.

YYFNS.C:
  In <YYAlloc>, initialize the token count in the result.
  In <YYCopyFcnTrn>, split cases based upon the token type.


Build #1765 -- Version 0.5.5.xx
--------------------------------

* Remove Window Handle From Call To MessageBox

Directory branches/bsmith/NewTypes:

EDITFCN.C:
  In <QueryClose>, remove the window handle from the call to <MessageBox> in case that's what is hanging the system when DEBUGging.


Build #1764 -- Version 0.5.5.xx
--------------------------------

* Document Permanence Of NAMETYPE_xxx
* Fix Typos In Comments

Directory branches/bsmith/NewTypes:

AFOFNS.C:
CONVERT.C:
SYMTAB.H:
  Fix typos in comments.

SYMTAB.H:
  Document the permanence of NAMETYPE_xxx as it's saved in workspaces.


Build #1763 -- Version 0.5.5.xx
--------------------------------

* Fix Memory Leak In Demotion To Real Code

Directory branches/bsmith/NewTypes:

PRIMSPEC.C:
  Improve comments.
  In <PrimFnDydNestSiSc_EM> and <PrimFnDydSiScNest_EM>, move code that frees <hGlbLft2> and <hGlbRht2> out of <ERROR_EXIT:> into <NORMAL_EXIT:> as it needs to be freed on all exits not just errors.


Build #1762 -- Version 0.5.5.xx
--------------------------------

* Document Poorly Designed Calculation

Directory branches/bsmith/NewTypes:

SC_LOAD.C:
SC_SAVE.C:
  In IF/WHILE stmts always compare ptr against NULL and value against 0.
  Document poorly designed calculation.


Build #1761 -- Version 0.5.5.xx
--------------------------------

* Fix Memory Leak In Outer Product With Scalars

Directory branches/bsmith/NewTypes:

PO_JOTDOT.C:
  Switch IF stmts for left and right <FreeResultTkn> calls to avoid memory leak with scalar left or right args.


Build #1760 -- Version 0.5.5.xx
--------------------------------

* Upon MDI Window Activation, Ensure The Caret Is Showing

Directory branches/bsmith/NewTypes:

EDITFCN.C:
  In <MdiActivate>, ensure that the caret is showing.


Build #1759 -- Version 0.5.5.xx
--------------------------------

* Fix Bug In Certain Control Structures

Directory branches/bsmith/NewTypes:

CS_PARSE.Y:
  Include missing ending assignment for _IF _FOR _FORLCL _REPEAT _SELECT _WHILE.


Build #1758 -- Version 0.5.5.xx
--------------------------------

* Include Description Of DoubleShriek Operands In Language Bar

Directory branches/bsmith/NewTypes:

EXECMFN.C:
  Define additional shorthands for Unicode symbols.

NARS2000.VCXPROJ:
  Ignore linker errors 4204 (no debugging info).  This also requires a patch to the linker to zap the entry for 4204 = 16b106C.

REBAR.C:
  Include a description of each of the operands to the DoubleShriek operator in the Language Bar.


Build #1757 -- Version 0.5.5.xx
--------------------------------

* Recognize The Syntax (? MOP MOP)

Directory branches/bsmith/NewTypes:

PARSELINE.C:
PARSELINE.H:
  Recognize the syntax (? MOP MOP) as a MOP where ? can be one of {jot}, A, or F.

VER.RC:
  Increment version # to 0.5.5.xx.
