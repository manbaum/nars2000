Version 0.4.9.xx consists of the following Builds:


Build #1305 -- Version 0.4.9.xx
-------------------------------

* Catch More Unset Syntax Objects

Directory trunk:

STRAND.C:
  In <StripStrand>, allow endpoint in Assert stmt.
  In <MakeVarStrand_EM_YY>, set the Syntax Object type.
  In <MakeFcnStrand_EM_YY>, set the Syntax Object type.
  In <MakeFcnStrand_EM_YY>, simplify the code after <bSaveTxtLine>.

TRANSLATE.C:
  In <TranslateSOTypeToNameType>, include more Syntax Object types.
  Define <TranslateNameTypeToSOType> needed in <MakeFcnStrand_EM_YY>.


Build #1304 -- Version 0.4.9.xx
-------------------------------

* Fix Bug In DEBUG Display of Temporary Function Lines

Directory trunk:

DISPDBG.C:
  Fix display of function display with axis operators.


Build #1303 -- Version 0.4.9.xx
-------------------------------

* Fix Bug When Displaying )LIB Names

Directory trunk:

SC_LIB.C:
  In <DisplayLibNames>, avoid writing WC_EOS past the end of the line.


Build #1302 -- Version 0.4.9.xx
-------------------------------

* When Converting A String To A Rational Number, Allow Decimal Point Input

Directory trunk:

MPIFNS.C:
  In <mpiq_set_str>, handle decimal point input such as "1.3" -> 13r10.


Build #1301 -- Version 0.4.9.xx
-------------------------------

* Fix Bug When Passing A System Function To A User-Defined Operator

Directory trunk:

EXECDFN.C:
  In <InitFcnSTEs>, check for named internal functions as an operand.


Build #1300 -- Version 0.4.9.xx
-------------------------------

* Fix Bug When An AFO Passes A Special STE In A Global Or A Result

Directory trunk:

GETFNS.C:
IDENTFNS.C:
PERTAB.H:
PF_UARROW.C:
PO_SLASH.C:
PRIMFNS.C:
SESSMAN.C:
SYMTAB.C:
  When referencing special STEs (i.e., Zero, One, Blank), always use the global symentry
    in case an AFO passes one such value outside the AFO.  If we use the local STE, the
    matching HTS is gone after the AFO terminates.


Build #1299 -- Version 0.4.9.xx
-------------------------------

* Fix Bug With Copy From DEBUG Window

Directory trunk:

DEBUG.C:
  An earlier build mistakenly replaced a code sequence with a macro, but shouldn't have done so in this case.


Build #1298 -- Version 0.4.9.xx
-------------------------------

* Fix Bug With AFO NoDisplay Flag

Directory trunk:

AFOFNS.C:
  In <AfoDisplay_EM>, fix bug when setting the AFO's NoDisplay flag.
  Include comment about <AssignName_EM> setting NoDisplay flag in source.


Build #1297 -- Version 0.4.9.xx
-------------------------------

* Catch Unset Syntax Objects

Directory trunk:

ASSIGN.C:
  Include comment about <AssignName_EM> setting NoDisplay flag in source.

PARSELINE.C:
  Define macro to check for valid Syntax Objects.
  Use macro whenever checking for valid Syntax Objects.
  In <plRedLBC_RBC> include comment indicating how the resulting Syntax Object is set.
  Include comment about <AssignName_EM> setting NoDisplay flag in source.

PARSELINE.H:
  Define initial <soUNK> Syntax Object to catch unset values.

PF_INDEX.C:
  Include comment about <AssignName_EM> setting NoDisplay flag in source.

PL_PROC.C:
  Include comment better explaining the difference between the two <CopyPL_YYSTYPE_xxx>s.

STRAND.C:
  Include comment better explaining the difference between the two <CopyPL_YYSTYPE_xxx>s.
  In <MakeFcnStrand_EM_YY>, simplify some of the coding.
  Delete commented out functions.

SYNOBJ.H:
  Define initial <soUNK> Syntax Object to catch unset values.

YYFNS.C:
  In <YYAlloc>, initialize the Syntax Object in the result with an unknown value
    so as to catch unset values.
  Include comment better explaining the difference between the two <CopyPL_YYSTYPE_xxx>s.


Build #1296 -- Version 0.4.9.xx
-------------------------------

* Change The Units Of []T To Seconds

Directory trunk:

EXTERNS.H:
  Define constant for # CPU ticks per second.  This value doesn't change during a Windows session so it can be cached here.

INITDATA.C:
  Update copyright year.
  Initialize constant <liTicksPerSec>.

PERFMON.C:
  Update copyright year.
  Use cached value of <liTicksPerSec> instead of re-reading it each time.

QF_MF.C:
  Use cached value of <liTicksPerSec> instead of re-reading it each time.

QF_T.C
  Use cached value of <liTicksPerSec> instead of re-reading it each time.
  Change the units of []T to seconds since the CPU was started.

STATUSBAR.C:
  Change name of []T to High Resolution Time.
  Use cached value of <liTicksPerSec> instead of re-reading it each time.

SYSVARS.C:
  Change name of []T to High Resolution Time.


Build #1295 -- Version 0.4.9.xx
-------------------------------

* Implement []T To Return Tick Count

Directory trunk:

COMPRO.H:
  Include <qf_t.pro> in the list of prototype files.

MAKEFILE.INC:
MAKEFILE.SRC:
NARS2000.32.VCPROJ:
NARS2000.64.VCPROJ:
  Include <qf_t.c> in the list of source files.

QF_T.C
  Implement []T.

SYSVARS.C:
  Include []T in the list of niladic system functions.


Build #1294 -- Version 0.4.9.xx
-------------------------------

* Fix Bug With Trains

Directory trunk:

PARSELINE.C:
  In <plRedCom_RP>, if incoming fcn is in the process of being stranded, convert it into a function strand before passing it on to the caller.

STRAND.C:
  In <PushFcnStrand>, ensure incoming fcn not already being stranded.


Build #1293 -- Version 0.4.9.xx
-------------------------------

* Implement Debugging Aid To Catch Unset Syntax Objects

Directory trunk:

PARSELINE.C:
  Delete unused and commented out var.
  If the return current object is a function, set the ExitType to NOVALUE.
  At the end of <pl_yylexCOM>, check for valid Syntax Object.

PRIMFNS.C:
  In <MakeNoValue>, initialize the Syntax Object to a known value.

SYNOBJ.H:
  Define a new Syntax Object for use with NoValue.

YYFNS.C:
  In <YYAlloc>, initialize the Syntax Object to a known value.


Build #1292 -- Version 0.4.9.xx
-------------------------------

* Improve DEBUG Display of An APL Var

Directory trunk:

PF_INDEX.C:
  Improve comments.
  Handle indexing of simple and non-simple scalars.

PF_RSHOE.C:
  Improve comments.


Directory trunk\htdocs:

INDEX-BODY.AHTML:
  Include additional identities for Reach and Scatter indexing.


Build #1291 -- Version 0.4.9.xx
-------------------------------

* Improve DEBUG Display of An APL Var

Directory trunk:

DISPDBG.C:
  Improve <DisplayGlbVar> which is a preliminary version of a function to display the contents of an APL var.

MACROS.H:
  Define DEBUG and non-DEBUG version of <DisplayGlbVar>.


Build #1290 -- Version 0.4.9.xx
-------------------------------

* Fix ParseLine Bugs Of Freeing Temps Already Freed

Directory trunk:

PARSELINE.C:
  In <plRedMF_ARBK>, don't free temps that have already been freed.
  In <ParseLine/PARSELINE_MP_DONE>, if there's been an error, check for Stop Execution of the line which is not an error.
  In <ExecuteCS0/TKT_CS_RETURN>, don't free temps that have already been freed.

QF_EX.C:
  In <IzitSusPendent>, handle more <DFNTYPE_xxx>s (should have been in Build #1282).


Build #1289 -- Version 0.4.9.xx
-------------------------------

* Fix Bug Of Closing Thread Prematurely

Directory trunk:

SESSMAN.C:
  In <SMWndProc/WM_DESTROY>, don't quit the thread here as that's the responsibility of <LclTabCtrlWndProc/TCM_DELETEITEM>.


Build #1288 -- Version 0.4.9.xx
-------------------------------

* Fix Bug When Closing Tab With Open Function Editing Windows

Directory trunk:

EDITFCN.C:
  Include more DEBUGging code in <CloseFunction>.

TABCTRL.C:
  In <LclTabCtrlWndProc/TCM_DELETEITEM>, attempt to close any open FEwindows before closing the tab,


Build #1287 -- Version 0.4.9.xx
-------------------------------

* Include DEBUG Stmts For Thread Waits

Directory trunk:

RESDEBUG.C:
RESDEBUG.H:
  Define <MyWaitForThread> to handle waiting for a thread.

STARTADDR.H:
  Delete <DisplayYYRes> as it is unused (should have been in Build #1284).

THREADS.H:
  Remove flag to IE_THREAD struc that's always FALSE (should have been in Build #1286).

UPDATES.C:
  Use <MyWaitForThread> instead of <WaitForSingleObject>.
  Improve comments.


Build #1286 -- Version 0.4.9.xx
-------------------------------

* Remove Flag That's Always FALSE

Directory trunk:

IMMEXEC.C:
  Remove flag to <ImmExecStmt> that's always FALSE.
  In <ImmExecStmt> and <ImmExecStmtInThread>, remove code that is used only if the flag that's always FALSE is TRUE.
  In <ImmExecStmtInThread>, remove commented out code.

SESSMAN.C:
  Remove flag to <ImmExecStmt> that's always FALSE.


Build #1285 -- Version 0.4.9.xx
-------------------------------

* Fix Memory Leak As In (a b c){is]...

Directory trunk:

ASSIGN.C:
  Fix memory leak when assigning to a list of named vars.


Build #1284 -- Version 0.4.9.xx
-------------------------------

* Implement DEBUG Display of An APL Var

Directory trunk:

DISPDBG.C:
  Implement <DisplayGlbVar> which is a preliminary version of a function to display the contents of an APL var.
  Delete <DisplayYYRes> as it is unused.


Build #1283 -- Version 0.4.9.xx
-------------------------------

* Fix Bugs When Indexing Scalars

Directory trunk:

PF_INDEX.C:
  In <ArrayIndexRefNamImmed_EM_YY>, handle a vector list of vectors of zildes.
  In the call to <ArrayIndexValidZilde_EM>, change the # items to check to the index of the single item to check.
  In <ArrayIndexValidZilde_EM>, check a single list item for all zildes.
  In <ArrayIndexSet_EM>, handle all scalars (not just immediates) when calling <ArrayIndexSetNamImmed_EM>.
  Use a more consistent coding style.

PF_RSHOE.C:
  In <PrimFnDydRightShoeImm_EM_YY>, allow the left arg to be a scalar or vector, not just a vector.

PF_SQUAD.C:
  In the call to <ArrayIndexValidZilde_EM>, change the # items to check to the index of the single item to check.


Build #1282 -- Version 0.4.9.xx
-------------------------------

* Disallow Assignment To A Suspended Or Pendent Function

Directory trunk:

ASSIGN.C:
  Disallow assignment to a suspended or pendent function.

PARSELINE.C:
  In <plRedNAM_SPCom>, handle error in return from <AssignName_EM>.


Build #1281 -- Version 0.4.9.xx
-------------------------------

* Fix Bug In Handling Trains and Niladic Functions

Directory trunk:

PARSELINE.C:
  Delete code which treats niladic function specially as that breaks Trains.
  In <pl_yylexCOM>, simplify SWITCH code by merging empty stmts.

STRAND.C:
  In <MakeFcnStrand_EM_YY>, treat <fnNameType> train as no change to its RefCnt.


Build #1280 -- Version 0.4.9.xx
-------------------------------

* Display More Information In ParseLine DEBUG Stmts

Directory trunk:

PARSELINE.C:
STRAND.C:
  Display filename and line # for <DbgMake,,,> and <DbgPush...> stmts.


Build #1279 -- Version 0.4.9.xx
-------------------------------

* Fix Bug In Indexed Assignment When Assigning The Entire Array

Directory trunk:

PF_INDEX.C:
  In <ArrayIndexSetSingLst_EM>, if the index is {enclose}{zilde} meaning assign the entire array, also free the items of the already <CopyArray>ed global memory handle.


Build #1278 -- Version 0.4.9.xx
-------------------------------

* Implement Reduction Of Singletons

Directory trunk:

ENUMS.H:
  Remove references to []SGL as we no longer need it.
  Include comment from <externs.h> omitted when <FLT_DISP_FMT> enum moved over.

EXECDFN.C:
SYSVARS.C:
SYSVARS.H:
  Remove references to []SGL as we no longer need it.

EXECMFN.C:
FH_PARSE.H:
  Define entries for RoS magic functions.

EXECMFN.H:
  Define entries for RoS magic functions.
  Remove references to []SGL as we no longer need it.

EXTERNS.H:
  Include comment from <externs.h> omitted when <FLT_DISP_FMT> enums moved over.

MACROS.H:
  Refine macro for <IsSymNoValue> to handle NULL argument.

MF_ROS.H:
  Define RoS magic functions.

PO_DOT.C:
PO_SLASH.C:
PO_SLOPE.C:
  Implement Reduction Of Singletons.

RESDEBUG.C:
  Fix typo.

SAVEFCN.C:
  Clear type bits before comparing global memory handles.
  Remove references to []SGL as we no longer need it.

SESSMAN.C:
  Improve comment.

STARTADDR.H:
  Implement Reduction Of Singletons.
  Include references to new function names.


Build #1277 -- Version 0.4.9.xx
-------------------------------

* Disallow Attempt To Close Executing Tab

Directory trunk:

TABCTRL.C:
  Disallow attempt to close an executing tab with a message box.
  Move Reset Thread creation code to separate function to parallel other such thread handling.

THREADS.H:
  Fix typo in comment.


Build #1276 -- Version 0.4.9.xx
-------------------------------

* Use Leading Underscore In Name For Macro Expansions Only

Directory trunk:

CONVERT.C:
  Move <FloatToAplInt_CT> to a macro calling <_FloatToAplInt_CT>.
  Move <CompareCT> to a macro calling <_CompareCT>.

DEBUG.C:
EXECDFN.C:
MPIFNS.C:
  Remove underscore from function header reference block so as to find it more easily.

EXECMFN.C:
  Rename <_AssignDefaultSysVars> to <AssignDefaultHTSSysVars> as leading underscore in the name is reserved for macros.

MACROS.H:
  Rename <iadd64>,  <isub64>  and <imul64>  as <iadd64_RE>, <isub64_RE>, and <imul64_RE>.
  Rename <_iadd64>, <_isub64> and <_imul64> as <iadd64>,    <isub64>,    and <imul64>.
  Move <FloatToAplInt_CT> to a macro calling <_FloatToAplInt_CT>.
  Move <CompareCT> to a macro calling <_CompareCT>.
  Move <mpq_get_sctsx> to a macro calling <_mpq_get_ctsx>.
  Move <mpq_get_ctsx> to a macro calling <_mpq_get_ctsx>.
  Move <mpfr_get_ctsx> to a macro calling <_mpfr_get_ctsx>.
  Move <mpfr_cmp_ct> to a macro calling <_mpfr_cmp_ct>.

MPFNS.C:
  Move <mpq_get_sctsx> to a macro calling <_mpq_get_ctsx>.
  Move <mpq_get_ctsx> to a macro calling <_mpq_get_ctsx>.
  Move <mpfr_get_ctsx> to a macro calling <_mpfr_get_ctsx>.
  Move <mpfr_cmp_ct> to a macro calling <_mpfr_cmp_ct>.

PARSELINE.C:
  If DEBUGging, define <PushVarStrand>, <MakeVarStrand>, <PushFcnStrand>, and <MakeFcnStrand>
    as <DbgXXX> versions.
  Remove underscore from function header reference block so as to find it more easily.

PF_BAR.C:
PF_CIRCLE.C:
PF_DARROW.C:
PF_IOTA.C:
PF_IOTAUND.C:
PF_PLUS.C:
PF_QDOT.C:
PF_RHO.C:
PF_STAR.C:
PF_TIMES.C:
PF_UTACK.C:
PN_PROC.C:
PO_DOT.C:
PO_JOTDOT.C:
PO_SLASH.C:
PO_SLOPE.C:
PRIMFNS.C:
QF_DR.C:
  Rename <iadd64>,  <isub64>  and <imul64>  as <iadd64_RE>, <isub64_RE>, and <imul64_RE>.
  Rename <_iadd64>, <_isub64> and <_imul64> as <iadd64>,    <isub64>,    and <imul64>.

REFCNT.C:
RESDEBUG.C:
STRAND.C:
YYFNS.C:
  Remove underscore from function header reference block so as to find it more easily.

SAVEFCN.C:
  Rename <_AssignDefaultSysVars> to <AssignDefaultHTSSysVars> as a leading underscore in the name is reserved for macros.

STARTADDR.H:
  Rename <_pl_yylex> to <pl_yylexCOM> as a leading underscore in the name is reserved for macros
  Rename <iadd64>,  <isub64>  and <imul64>  as <iadd64_RE>, <isub64_RE>, and <imul64_RE>.
  Rename <_AssignDefaultSysVars> to <AssignDefaultHTSSysVars> as a leading underscore in the name is reserved for macros.

SYMTAB.C:
  Rename <_SymTabXxx> to <SymTabHTSXxx> as a leading underscore in the name is reserved for macros.

SYSVARS.C:
  Rename <_SymTabXxx> to <SymTabHTSXxx> as a leading underscore in the name is reserved for macros.
  Rename <_AssignDefaultSysVars> to <AssignDefaultHTSSysVars> as a leading underscore in the name is reserved for macros.

TOKENIZE.C:
  Rename <_SymTabXxx> to <SymTabHTSXxx> as a leading underscore in the name is reserved for macros.


Build #1275 -- Version 0.4.9.xx
-------------------------------

* Fix Bug In Exittype When Resetting One Level

Directory trunk:

PARSELINE.C:
  Fix bug in exittype when resetting one level.


Build #1274 -- Version 0.4.9.xx
-------------------------------

* Include DEBUG Stmts For Semaphore Waits

Directory trunk:

EXECDFN.C:
PL_PROC.C:
QF_DL.C:
TABCTRL.C
  Use <MyWaitforSemaphore> instead of <WaitForSingleObject> when waiting for a semaphore
    as it incorporates DEBUG stmts in it.

RESDEBUG.C:
RESDEBUG.H:
  Define <MyWaitForSemaphore> to handle waiting for a semaphore.


Build #1273 -- Version 0.4.9.xx
-------------------------------

* Fix Bug When Closing Tab With Non-empty SI

Directory trunk:

TABCTRL.C:
  Define new temp struc for Reset thread.
  In <FreeGlobalStorage>, use separate thread to run )RESET.

THREADS.H:
  Update copyright year.
  Define new temp struc for Reset thread.


Build #1272 -- Version 0.4.9.xx
-------------------------------

* Fix Bug Of Displaying Error Message After )RESET
* Fix Bug Of Displaying Magic Function Line In Error Message
* Remove References To LookAhead/Behind/Stop As They Are No Longer Used

Directory trunk:

ERRMSG.C:
  In <AppendFcnNameLineNum>, include bit flag argument for whether or not a caller is []EC.
  Rename struc member <ItsEC> to <bItsEC> to reflect its Boolean nature.
  In <AppendFcnNameLineNum>, fix bug where we incorrectly returned a
    (locked) global memory ptr (never to unlock it) instead of an HGLOBAL.
  In <AppendFcnNameLineNum>, if we're in an MFO wind back the stack to the UDFO
    and return that functionname[line #].
  In <AppendFcnNameLineNum>, if the function name is valid andwe're not under control of []EC, suspend execution at this level.
  In <ErrorMessageDirect>, handle return of immediate execution line instead of global memory handle.

EXECDFN.C:
  Rename struct member <PermFn> to <bMFO> to parallel <bAFO>.
  In <ExecuteFunction_EM_YY>, return NoValue token if EXITTYPE_RESET_ALL so we don't display an error message.
  Improve comments.
  Rename struc member <ItsEC> to <bItsEC> to reflect its Boolean nature.

EXECMFN.C:
FH_PARSE.H:
  Rename struct member <PermFn> to <bMFO> to parallel <bAFO>.

GOTO.C:
  Rename struc member <ItsEC> to <bItsEC> to reflect its Boolean nature.

IMMEXEC.C:
  Make test in <if> statement explicit.

PARSELINE.C:
  In <plRedMF_A>, save the current function caret position for later use.
  Remove references to LookAhead/Behind/Stop as they are no longer used.
  In <ParseLine>, save a ptr to the local vars in the SIS header.
  Rename struct member <PermFn> to <bMFO> to parallel <bAFO>.
  Rename struc member <ItsEC> to <bItsEC> to reflect its Boolean nature.
  If we suspend in an MFO, reset the error codes so we don't execute []ELX at this level.
  Make test in <if> statement explicit.

PL_PARSE.H:
  Remove references to LookAhead/Behind/Stop as they are no longer used.

PRIMFNS.C:
  In <FillSISNxt>, include references to all <SIS_HEADER> members even if commented out.
  Rename struct member <PermFn> to <bMFO> to parallel <bAFO>.

QF_EA.C:
QF_EC.C:
  Rename struc member <ItsEC> to <bItsEC> to reflect its Boolean nature.

SC_LOAD.C:
  Rename struct member <PermFn> to <bMFO> to parallel <bAFO>.

SC_SI.C:
  Update copyright year.
  Rename struct member <PermFn> to <bMFO> to parallel <bAFO>.

SIS.H:
  Update copyright year.
  Rename struct member <PermFn> to <bMFO> to parallel <bAFO>.
  Include struct member of current function caret position.
  Include struct member of ptr to this level's ParselLine Local Vars.

TOKENS.H:
  Remove references to LookAhead/Behind/Stop as they are no longer used.


Build #1271 -- Version 0.4.9.xx
-------------------------------

* Fix Bug When Calling []ID Label

Directory trunk:

EXECDFN.C:
  In <ExecDfnGlbIdent_EM_YY>, we mistakenly pass a left argument when calling the user-defined function/operator at []ID.


Build #1270 -- Version 0.4.9.xx
-------------------------------

* Fix Timing Bug When Destroying Main Window

Directory trunk:

EDITFCN.C:
MAIN.C:
  Define and use bit flag to indicate that we're in the midst of destroying the main window.
    Sometimes, we get to a point where not all window handles are usable and we need a way to avoid locking up upon exit.


Build #1269 -- Version 0.4.9.xx
-------------------------------

* Fix Bug In Displayability Of Assignment Of Name

Directory trunk:

ASSIGN.C:
  In <AssignName_EM>, mark the source as non-displayable, not the name.


Build #1268 -- Version 0.4.9.xx
-------------------------------

* Fix Bug In Syntax Coloring Of Line Labels With Spaces

Directory trunk:

TOKENIZE.C:
  In <scClnDone>, handle spaces between the line label and the separating colon.


Build #1267 -- Version 0.4.9.xx
-------------------------------

* Fix Bugs In Syntax Analyzer

Directory trunk:

PARSELINE.C:
  In variout <plRedXX_XX> functions, also change immediate type and Syntax Object of current symbol.
  Omit spurious comment.
  Fix bug if freeing function on the stack in the process of stranding.
  Fix bug when )RESETting.

STARTADDR.H:
  Delete unused functions.

STRAND.C:
  In <MakeFcnStrand_EM_YY>, test for Stranding flag and clear it.
  Delete unused functions.

YYFNS.C:
  Make test in DEBUG statement explicit.
  Delete unused functions.


Build #1266 -- Version 0.4.9.xx
-------------------------------

* Fix Bug When Comparing Storage Types To Detect Blow Up

Directory trunk:

GETFNS.C:
  Improve comments.

PF_INDEX.C:
PO_JOTDOT.C:
PO_SLASH.C:
PO_SLOPE.C:
  When comparing APL storage types to detect blow up, use <aTypePromote> as indexed by the storage types.


Build #1265 -- Version 0.4.9.xx
-------------------------------

* Fix Bugs In Syntax Analyzer

Directory trunk:

PARSELINE.C:
  In <plRedF_HY>, <plRedA_HY>, <plRedDOP_HY>, <plRedJ_HY>, and <plRedF_HY>, also change immediate type and Syntax Object of Hybrid symbol.
  Re-order code for easier debugging.
  In <_pl_yylex>, delete unnecessary comment.
  Set Syntax Object for named vars as they aren't set elsewhere.


Build #1264 -- Version 0.4.9.xx
-------------------------------

* Miscellaneous DEBUG Changes

Directory trunk:

COMMON.C:
  Update copyright year.
  Use simpler code instead of the conditional syntax (a?b:c).

DISPDBG.C:
  In <DisplayTokens>, also display the Syntax Object.


Build #1263 -- Version 0.4.9.xx
-------------------------------

* Fix Bug In Treatment of Name In For Statement

Directory trunk:

PARSELINE.C:
  Fix comment about reloading <lstSynObj>.
  In <_pl_yylex>, don't substitute content for named var if it's in a For Stmt.
  In <_pl_yylex>, use consistent code and comments when testing for a For Stmt.


Build #1262 -- Version 0.4.9.xx
-------------------------------

* Fix Bug Accounting For Trains

Directory trunk:

PRIMFNS.C:
  In <IsFcnStrDirect>, if the argument is a function array and a Train,
    return TRUE so it is handled correctly by <MakeFcnStrand>.

YYFNS.C:
  In <YYAlloc>, include comments on how to debug <YYResIsEmpty> memory leaks.
  In <YYCountFcnStr>, if the item is a Train count it as a single element as
    that's the way it is treated in <YYCountFcnGlb>.


Build #1261 -- Version 0.4.9.xx
-------------------------------

* Omit DEBUG Flag No Longer Needed

Directory trunk:

PARSELINE.C:
PL_PARSE.H:
STRAND.C:
YYFNS.C:
  Omit <YYFlag> as it's no longer needed.
  Omit separate indexing of <YYAlloc>s in <pl_yylex> as it's no longer needed.


Build #1260 -- Version 0.4.9.xx
-------------------------------

* Fix Bugs Found By Dr Memory

Directory trunk:

AXISFNS.C:
CRASH.C:
DEBUG.C:
  Use macro for common unlock and free template.
  Use more consistent naming convention for globals and their ptrs.

EDITFCN.C:
  Omit unnecessary cleanup of Window properties.
  Use macro for common unlock and free template.

EXECDFN.C:
EXECMFN.C:
IMMEXEC.C:
PF_COMMA.C:
PF_CSLOPE.C:
PF_CSTILE.C:
PF_DARROW.C:
PF_DELTASTILE.C:
PF_DOMINO.C:
PF_DTACKJOT.C:
PF_EPSUND.C:
PF_INDEX.C:
PF_IOTA.C:
PF_IOTAUND.C:
PF_LSHOE.C:
PF_RSHOE.C:
PF_SLASH.C:
PF_SLOPE.C:
PF_SQUAD.C:
PF_UARROW.C:
PF_UTACKJOT.C:
PO_DIERESIS.C:
PRIMFNS.C:
PRIMSPEC.C:
QF_NFNS.C:
SAVEFCN.C:
SC_SAVE.C:
TABCTRL.C:
  Use macro for common unlock and free template.

FREE.C:
  Use ptr to xxGlbData so it can be written to consistently.
  Use macro for common unlock and free template.

GETFNS.C:
  Define function to return ptr to xxGlbData.

INIFILE.C:
  Define function to delete global vars created by <ReadIniFileGlb>.

MACROS.H:
  Define a macro to free a global name.
  Define a macro to unlock and free a global name.

MAIN.C:
  When selecting an object into a DC, save the old value and restore it
    before releasing the DC.
  Omit unnecessary cleanup of Window properties.
  In <ParseCommandLine> test for empty command line using <lstrlen> so the
    fake fault that Dr Memory finds is in the kernel and thus ignored.
  Delete globals created by <ReadIniFileGlb>.
  Delete permanent vars created by <MakePermVars>.

PARSELINE.C:
  Ensure <lstSynObj> is initialized at the start of the 2by2 code as there's
    a path through the code that references it before it's set.

SESSMAN.C:
  Omit unnecessary cleanup of Window properties.

STATUSBAR.C:
  When selecting an object into a DC, save the old value and restore it
    before releasing the DC.
  Initialize a var that's set by an EM_GETSEL message, but Dr Memory doesn't parse that.

SYMTAB.C:
  In <FreeHshSymTabs>, also free the global storage for the names of objects.

SYSVARS.C:
  Define function to delete global vars created by <MakePermVars>.


Build #1259 -- Version 0.4.9.xx
-------------------------------

* Fix Bug When Loading A Workspace With a VFP Number Not At Default Precision

Directory trunk:

SC_LOAD.C:
  In <LoadWorkspaceGlobal_EM>, initialize the VFP number after the default precision is set or it won't be effective.


Build #1258 -- Version 0.4.9.xx
-------------------------------

* Use More Consistent Function Names

Directory trunk:

CUSTOMIZE.C:
DISPDBG.C:
DISPLAY.C:
INIFILE.C:
PF_DTACKJOT.C:
QF_FMT.C:
QF_TF.C:
SC_SAVE.C:
STARTADDR.H:
  Use <FormatAplFlt> and <FormatAplInt> for <FormatFloat> and <FormatAplint>
   as more consistent names with other such functions.


Build #1257 -- Version 0.4.9.xx
-------------------------------

* Fix Bug In Syntax Analyzer

Directory trunk:

PARSELINE.C:
  In <plRedIO_SPA>, set the syntax object for the result.


Build #1256 -- Version 0.4.9.xx
-------------------------------

* Fix Bug In Session Manager

Directory trunk:

SESSMAN.C:
  In <SMWndProc>/MYWM_KEYDOWN/VK_RETURN, sometimes the CR is handled before the current line has been saved.


Build #1255 -- Version 0.4.9.xx
-------------------------------

* Implement 2by2 Syntax Analyzer

Directory trunk:

AFOFNS.C:
ASSIGN.C:
COMPRO.H:
CONVERT.C:
CS_PARSE.H:
CS_PROC.C:
DATATYPE.H:
DEFINES.H:
DISPDBG.C:
EDITFCN.C:
ENUMS.H:
EXECDFN.C:
EXECFNS.C:
EXECMFN.C:
EXTERNS.H:
FH_PARSE.H:
FH_PARSE.Y:
FREE.C:
GETFNS.C:
GOTO.C:
HEADERS.H:
IMMEXEC.C:
MACROS.H:
MAKEFILE.INC:
MAKEFILE.SRC:
NARS2000.32.VCPROJ:
NARS2000.64.VCPROJ:
PARSELINE.C:
PARSELINE.H:
PERTAB.H:
PF_INDEX.C:
PF_UTACKJOT.C:
PL_PARSE.H:
PL_PARSE.Y:
PL_PROC.C:
PO_CMIDDOT.C:
PO_DICIRCLE.C:
PO_DIDTACK.C:
PO_DIERESIS.C:
PO_DIJOT.C:
PO_DITILDE.C:
PO_DOT.C:
PO_JOT.C:
PO_JOTDOT.C:
PO_MULTISET.C:
PO_SLASH.C:
PO_SLOPE.C:
PO_VARIANT.C:
PRIMFNS.C:
REFCNT.C:
SC_IN.C:
SC_LOAD.C:
SESSMAN.C:
STARTADDR.H:
STRAND.C:
SYMTRANS.C:
SYNOBJ.H:
SYSCMDS.C:
TOKENIZE.C:
TOKENS.H:
TOKENSO.H:
TRANSLATE.C:
UNICODE.H:
YYFNS.C:
  Implement 2by2 syntax analyzer


Build #1254 -- Version 0.4.9.xx
-------------------------------

* Fix Bug In Build #1249

Directory trunk:

PO_SLASH.C:
  In <PrimOpMonSlashCommon_EM_YY>, handle the APA case when initializing GlbNum temps.


Build #1253 -- Version 0.4.9.xx
-------------------------------

* Switch To Simpler Macro

Directory trunk:

ASSIGN.C:
AXISFNS.C:
CUSTOMIZE.C:
DISPDBG.C:
FREE.C:
GETFNS.C:
INIFILE.C:
MACROS.H:
PF_BAR.C:
PF_CSLOPE.C:
PF_DTACK.C:
PF_EPSILON.C:
PF_PLUS.C:
PF_TIMES.C:
PF_UARROW.C:
PF_UTACKJOT.C:
PO_DIJOT.C:
PO_JOTDOT.C:
PO_MULTISET.C:
PO_SLOPE.C:
PRIMFNS.C:
QF_AV.C:
QF_DR.C:
QF_EA.C:
QF_EC.C:
QF_ERROR.C:
QF_EX.C:
QF_FX.C:
QF_LC.C:
QF_NC.C:
QF_SYSID.C:
QF_SYSVER.C:
QF_TC.C:
QF_TS.C:
SAVEFCN.C:
SC_COMMON.C:
SC_SAVE.C:
SC_WSID.C:
SESSMAN.C:
STRAND.C:
TABCTRL.C:
  Switch macro <VarArrayBaseToData> to <VarArrayDataFmBase> as it's simpler.


Build #1252 -- Version 0.4.9.xx
-------------------------------

* Fix Bug In []EC

Directory trunk:

QF_EC.C:
  In <SysFnMonEC_EM_YY>, save the <resetFlag> over the call to <UnlocalizeSTEs>.

QF_EX.C:
  Improve comments.


Build #1251 -- Version 0.4.9.xx
-------------------------------

* Enable Debugging Of Semaphores

Directory trunk:

RESDEBUG.C:
RESDEBUG.H:
  Display a debugging message when creating, closing, or releasing a semaphore.


Build #1250 -- Version 0.4.9.xx
-------------------------------

* Use A More Consistent Coding Style

Directory trunk:

AXISFNS.C
CUSTOMIZE.C
DICTIONARY.C
DISPDBG.C
EDITFCN.C
ERRMSG.C
EXCEPT.C
EXECDFN.C
EXECFNS.C
EXECMFN.C
FMTSPEC.C
GETFNS.C
IDENTFNS.C
IMMEXEC.C
INIFILE.C
INIPARSER.C
MAIN.C
PF_COMMA.C
PF_CSLOPE.C
PF_CSTILE.C
PF_DARROW.C
PF_DELTASTILE.C
PF_DOMINO.C
PF_DOTDOT.C
PF_DSHOE.C
PF_DTACK.C
PF_DTACKJOT.C
PF_EPSILON.C
PF_EPSUND.C
PF_IOTA.C
PF_IOTAUND.C
PF_LSHOE.C
PF_PI.C
PF_QUERY.C
PF_RHO.C
PF_SLASH.C
PF_SLOPE.C
PF_UARROW.C
PF_UTACK.C
PF_UTACKJOT.C
PN_PARSE.Y
PN_PROC.C
PO_CMIDDOT.C
PO_DICIRCLE.C
PO_DIERESIS.C
PO_DITILDE.C
PO_DOT.C
PO_JOT.C
PO_JOTDOT.C
PO_MULTISET.C
PO_SLASH.C
PO_SLOPE.C
PO_VARIANT.C
PRIMSPEC.C
PROGBAR.C
QF_AT.C
QF_AV.C
QF_DR.C
QF_EC.C
QF_ET.C
QF_EX.C
QF_FMT.C
QF_FX.C
QF_LC.C
QF_MF.C
QF_NC.C
QF_NFNS.C
QF_NL.C
QF_SYSID.C
QF_SYSVER.C
QF_TC.C
QF_TF.C
QF_TS.C
QF_UCS.C
RESDEBUG.C
SAVEFCN.C
SC_COMMON.C
SC_COPY.C
SC_IN.C
SC_LOAD.C
SC_WSID.C
SESSMAN.C
SYMTAB.C
SYSVARS.C
TABCTRL.C
TOKENIZE.C
TYPEMOTE.C
UPDATES.C
YYFNS.C
  Use a more consistent coding style.

DATATYPE.H
  Omit PTR_REUSED and use PTR_SUCCESS in instances that previously overlapped.

FREE.C
  Omit PTR_REUSED and use PTR_SUCCESS in instances that previously overlapped.
  Use a more consistent coding style.

MACROS.H
  Rename <NullPtrXXX> to <IsNullPtrXXX> to be more consistent.
  Omit PTR_REUSED and use PTR_SUCCESS in instances that previously overlapped.

PF_INDEX.C
  Use a more consistent coding style.
  Omit PTR_REUSED and use PTR_SUCCESS in instances that previously overlapped.

PF_RSHOE.C
PF_SQUAD.C
PRIMFNS.C
QF_CR.C
SC_SAVE.C
STRAND.C
  Use a more consistent coding style.
  Omit PTR_REUSED and use PTR_SUCCESS in instances that previously overlapped.


Build #1249 -- Version 0.4.9.xx
-------------------------------

* Fix Bugs When Type Promoting Reduce And Scan Operator Results

Directory trunk:

DISPLAY.C:
  In <FormatAplRatFC> and <FormatAplVfpFC> assert that the incoming value is valid.

PO_SLASH.C:
  In <PrimOpMonSlashCommon_EM_YY>, also initialize GlbNum temp if right arg and result are different types.
  Remove PTR_REUSED code as that's handled by <FreeResultGlobalIncompleteVar>.

PO_SLOPE.C:
  In <PrimOpMonSlopeCommon_EM_YY>, release unused values after type promotion.

PRIMSPEC.C:
  In <PrimFnDydSiScSiScSub_EM>, return newly allocated global memory handle if requested.
  In <PrimFnDydSiScSiScSub_EM>, release unused values after type promotion.


Build #1248 -- Version 0.4.9.xx
-------------------------------

* More DEBUG Support

Directory trunk:

CUSTOMIZE.C:
DEBUG.C:
EDITFCN.C:
ENUMS.H:
EXECDFN.C:
EXECMFN.C:
IMMEXEC.C:
INIFILE.C:
MACROS.H:
MAIN.C:
PF_DOMINO.C:
PF_DTACKJOT.C:
PF_EPSILON.C:
PF_EPSUND.C:
PF_INDEX.C:
PF_IOTA.C:
PF_IOTAUND.C:
PF_LSHOE.C:
PF_PI.C:
PF_UTACKJOT.C:
PN_PROC.C:
PO_DOT.C:
PO_JOTDOT.C:
PO_SLASH.C:
PRIMSPEC.C:
QF_AV.C:
QF_NFNS.C:
RESDEBUG.C:
SAVEFCN.C:
SC_LIB.C:
SC_LOAD.C:
SC_SAVE.C:
SESSMAN.C:
STARTADDR.H:
SYMTAB.C:
SYSVARS.C:
TABCTRL.C:
TOKENIZE.C:
UPDATES.C:
  Use DEBUG versions of <MyGlobalXXX> functions.

EXCEPT.C:
  Omit <EXCEPT_NAMES> in favor of <MyGetExceptionStr>.
  Pass argument to <MyGetExceptionStr>.
  Fill in more codes in <MyGetExceptionStr>.

HEADERS.H:
  Update copyright year.
  Include header missing from Build #1247.

MAKEFILE.INC:
NARS2000.32.VCPROJ:
NARS2000.64.VCPROJ:
  Include new library for string safe functions.

TYPEMOTE.C:
  Use DEBUG versions of <MyGlobalXXX> functions.
  Fix bug in <Assert> stmt.


Build #1247 -- Version 0.4.9.xx
-------------------------------

* String Safe Support #1

Directory trunk:

CS_PARSE.Y:
DEBUG.C:
FH_PARSE.Y:
PN_PARSE.Y:
  Use string safe functions instead of the unsafe ones.


Build #1246 -- Version 0.4.9.xx
-------------------------------

* Miscellaneous Fixes Omitted From Last Build

Directory trunk:

CUSTOMIZE.C
  Update copyright year.
  Update comment for "{div} 0"

EXTERNS.H:
  Update comment for "{div} 0"

VER.RC:
  Increment version # to 0.4.9.xx.
