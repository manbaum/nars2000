<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
         "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
  <title>NARS2000 Welcome Page</title>
  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
  <meta name="Braces2APL" content="font" />
  <link rel="stylesheet"
        href="http://www.sudleyplace.com/styles/common.css"
        type="text/css" />
  <link rel="stylesheet"
        href="http://www.nars2000.org/styles/common.css"
        type="text/css" />
</head>

<body><!--#config timefmt="%d %B %Y %H:%M:%S" -->

<div class="title">
<img src="/art/NARS-Title.jpg"
     alt="NARS2000: An Experimental APL Interpreter"
     title="Last Changed <!--#echo var='LAST_MODIFIED' -->" />
</div>

<div class="menu">&nbsp;&nbsp;
<a href="/">Home</a> |
<a href="/download/">Download</a> |
<a href="/GetInvolved.html">Get Involved</a> |
<a href="http://wiki.nars2000.org">Documentation</a> |
<a href="/Contributors.ahtml">Contributors</a> |
<a href="/LICENSE">License</a> |
<a href="/ContactUs.html">Contact Us</a> |
<a href="http://wiki.nars2000.org/index.php/NARS2000:About">About</a>
</div>

<table class="pagetable" summary="">
<tr>
  <td class="pagecolumn1">
    <h4>On this page:</h4>

    <ul class="bookmarks">
      <li><a href="#Introduction">Introduction</a></li>
      <li><a href="#Language_Features">Language Features</a></li>
      <li><a href="#Datatypes">Datatypes</a></li>
      <li><a href="#Miscellaneous">Miscellaneous Features</a></li>
      <li><a href="#Currently_Implemented">Currently Implemented Features</a></li>
      <li><a href="#Platforms">Platforms</a></li>
      <li><a href="#Documentation">Documentation</a></li>
      <li><a href="#What_It_Isnt">What It Isn't</a></li>
      <li><a href="#Get_The_Code">Get The Code</a></li>
      <li><a href="#If_You_Want_To_Help">If You Want To Help</a></li>
      <li><a href="#Discussion_Forums">Discussion Forums</a></li>
      <li><a href="#Author">Author</a></li>
    </ul>

    <br />
    <br />
    <br />

    <div style="margin-left:  1em;">
    <script type="text/javascript"
            src="http://www.qualitas.com/GoogleAds.js">
    </script>
    <script type="text/javascript"
            src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
    </script>
    </div>
  </td>

  <td class="pagecolumn2">
    <div class="section">
      <h2 id="Introduction">Introduction</h2>

      <p>The first NARS (Nested Arrays Research System) was designed and
        implemented around 1980 as a testbed for new ideas in APL,
        principally with nested arrays.  A quarter of a century later, it's time
        to try again.</p>

      <p>The goal of this effort, as with the last one, is to foster
        new ideas about the language and its implementation.</p>

      <p>Language ideas include new functions, operators, and
        datatypes.  To aid in getting your ideas into an implementation,
        there will be a mechanism for telling NARS that a user-defined
        APL function represents a new primitive function,
        operator, or datatype.  In order to experiment with your
        ideas for new extensions, all you need to know is how to write
        APL programs.</p>

      <p>Implementation ideas include algorithms to enhance
        code space (smaller executable), time space (faster execution
        times), or expressibility (clearer and more understandable code).
        A goal of the existing implementation is to be open
        and easy for others to change, so that new ideas may be inserted
        smoothly.</p>

      <p>Moreover, this project is made available as
        <a class="linkleft" href="http://www.gnu.org/philosophy/free-sw.html">Free Software</a> (as opposed to
        <a class="linkleft" href="http://www.gnu.org/philosophy/open-source-misses-the-point.html">Open Source</a>)
        so, among other things, any developer may pick it up and add new features, and any end user
        may use it free of charge.</p>
    </div>

    <div class="section">
      <h2 id="Language_Features">Language Features</h2>

      <h3>Current Language Features</h3>
      <ul>
        <li>ISO/IEC 13751 Extended APL Compliant (except for Rank Operator ({hoot}))</li>

        <li>Consistent Extensions to ISO/IEC 13751
          <ul>
            <li>Strand Assignment (e.g., <span class="APL">(A B){is}1 2</span> is the same as
              <span class="APL">A{is}1</span> and
              <span class="APL">B{is}2</span>)</li>
            <li>Modify Assignment (e.g.,
              <span class="APL">A+{is}1</span> is the same as <span class="APL">A{is}A+1</span>)</li>
            <li>Modify Strand Assignment (e.g.
              <span class="APL">(A B)+{is}1</span> is the same as
              <span class="APL">A{is}A+1</span> and
              <span class="APL">B{is}B+1</span>)</li>
            <li>Function/operator assignment (e.g.,
              <span class="APL">F{is}+.{times}</span> and
              <span class="APL">F{is}{dieresis}</span> and
              <span class="APL">F{is}{jot}</span>)</li>
            <li>Sink (monadic {is}<span class="APL">A</span>
              to suppress the display of <span class="APL">A</span>)</li>
            <li>Function editing via <span class="APL">{del}</span> or <span class="APL">)EDIT</span></li>
            <li>Unified index reference and assignment: <span class="APL">R[L]</span>
              and <span class="APL">R[L]{is}</span>
              allow both Reach and Scatter indexing &mdash; that is, if
              <span class="APL">L{pick}R</span> is valid, it is equivalent to
              <span class="APL">{disclose}R[{enclose}L]</span>, and if
              <span class="APL">L{squad}R</span> is valid, it is equivalent to
              <span class="APL">R[{disclose}{jot}.,/L]</span> &mdash; Reach
              and Scatter indexing may be mixed within a single instance of
              <span class="APL">R[L]</span> and <span class="APL">R[L]{is}</span></li>
            <li>Dyadic operator jot ({jot}) (composition) (e.g.,
              <span class="APL">f{is},{jot}{gradeup}{jot}{gradeup}{jot},</span>)</li>
            <li>Axis operator allowed with primitive scalar dyadic functions (e.g.,
              <span class="APL">1 2+[1] 2 3{rho}R</span>)</li>
            <li>Axis operator to primitive scalar dyadic functions may transpose coordinates (e.g.,
              <span class="APL">(2 3{rho}L)+[1 2] 2 3 4{rho}R</span> and
              <span class="APL">(3 2{rho}L)+[2 1] 2 3 4{rho}R</span> are both valid
              but, in general, have different values)</li>
            <li>Axis operator to Ravel may transpose coordinates (e.g.,
              <span class="APL">,[2 1] R</span> and <span class="APL">,[1 2] R</span>
              are both valid but, in general, have the same values in different order)</li>
            <li>Axis operator is allowed on the dyadic derived function from the Each operator (e.g.,
              <span class="APL">(2 3{rho}L){rho}{each}[1 2] 2 3 4{rho}R</span>)</li>
            <li>Axis operator is allowed on user-defined functions/operators (e.g.,
              <span class="APL">foo[2 3] R</span> by specifying it in the
              function header, as in <span class="APL">{del} Z{is}foo[X] R</span>)</li>
            <li>Strand left and right arguments and result to user-defined
              functions/operators along with optional left argument (e.g., <span class="APL">{del}
              Z{is}FOO (R1 R2 R3 R4)</span> or, more fully, <span class="APL">{del}
              (Z1 Z2){is}[L1 L2 L3] (LO OP2[X] RO) (R1 R2 R3 R4)</span>)</li>
            <li>Note that brackets are <b>required</b> to surround the left
              argument of an ambivalent function as in <span class="APL">{del} Z{is}[L] FOO R</span>
              &mdash; Is this an <b>inconsistent</b> extension?</li>
            <li>User-defined function/operator prototype entry point
              (<span class="APL">{quad}PROTOTYPE:</span>)</li>
            <li>Monadic operator null ({circlemiddledot}) to aid in
              resolving ambiguities with slash/slope as function/operator
              (e.g., use <span class="APL">/{circlemiddledot}/3 4</span>
              instead of <span class="APL">//3 4</span>)</li>
            <li>Dyadic iota ({iota}) extended to rank > 1 left arguments returns an array
              of vector indices to the left arg (via an internal magic function)</li>
            <li>± Infinity (e.g., <span class="APL">{underbar}</span> for infinity
              and <span class="APL">{overbar}{underbar}</span> for negative infinity)
              &mdash; considerable development work needs to be done to this
              feature to handle the many special cases</li>
            <li>Monadic and dyadic domino ({domino}) &mdash; matrix inverse/divide extended to
              use Moore-Penrose pseudo-inverse algorithm via Singular Value Decomposition</li>
            <li>Prototypes for all primitive functions and operators</li>
            <li>System functions:
              <ul>
                <li><span class="APL">1 {quad}CR R</span> and <span class="APL">2 {quad}CR R</span></li>
                <li><span class="APL">{quad}DM</span></li>
                <li><span class="APL">{quad}DR R</span></li>
                <li><span class="APL">L {quad}DR R</span></li>
                <li><span class="APL">{quad}ERROR R</span></li>
                <li><span class="APL">{quad}SIZE R</span></li>
                <li><span class="APL">{quad}SYSID</span></li>
                <li><span class="APL">{quad}SYSVER</span></li>
                <li><span class="APL">{quad}TC</span> and other related <span class="APL">{quad}TC</span>xxx</li>
                <li><span class="APL">{quad}TYPE R</span></li>
                <li><span class="APL">{quad}UCS R</span></li>
              </ul>
            </li>
            <li>System commands:
              <ul>
                <li><span class="APL">)CLOSE</span></li>
                <li><span class="APL">)EDIT</span></li>
                <li><span class="APL">)EXIT</span></li>
                <li><span class="APL">)NEWTAB</span></li>
                <li><span class="APL">)RESET</span></li>
              </ul>
            </li>
          </ul>
        </li>

        <li>Optional Facilities Included
          <ul>
            <li>Statement Separator ({diamond})</li>
          </ul>
        </li>

        <li>Optional Facilities Not Included (as yet)
          <ul>
            <li>Shared Variables</li>
            <li>Trace and Stop Control</li>
            <li>Complex Arithmetic</li>
          </ul>
        </li>

        <li>Facilities Purposely Omitted
         <ul>
           <li>Locked functions ({deltilde})</li>
         </ul>
        </li>
      </ul>

      <h3>Wish List of Language Features</h3>
      <ul>
        <li>User-defined function singleton entry point
          (<span class="APL">{quad}SINGLETON:</span>)</li>
        <li>User-defined function inverse entry point
          (<span class="APL">{quad}INVERSE:</span>)</li>
        <li>Dynamic functions (e.g.,
          <span class="APL">AVG{is}{leftbrace}(+/{omega}){divide}{rho}{omega}}</span>)</li>
        <li>Selective assignment (e.g.,
          <span class="APL">(1 1{transpose}A){is}1 2 3</span>)</li>
        <li>Primitive functions and operators user extensible via user-defined APL functions</li>
      </ul>
    </div>

    <div class="section">
      <h2 id="Datatypes">Datatypes</h2>

      <h3>Current Datatypes</h3>
      <ul>
        <li>1-bit Booleans</li>
        <li>2-byte Characters (Unicode, that is, UTF-16)</li>
        <li>64-bit Integers</li>
        <li>64-bit Floats</li>
        <li>Nested arrays</li>
        <li>APAs (Arithmetic Progression Arrays) (e.g.,
          <span class="APL">2 3 4{rho}{iota}24</span>)</li>
        <li>± Infinity (e.g., <span class="APL">{underbar}</span> for infinity
          and <span class="APL">{overbar}{underbar}</span> for negative infinity)
          &mdash; considerable development work needs to be done to this
          feature to handle the many special cases</li>
        </ul>

      <h3>Wish List of Datatypes</h3>
      <ul>
        <li>Complex numbers (e.g., <span class="APL">2j3.4</span>
          or <span class="APL">2i3.4</span>)</li>
        <li>Quaternions (e.g., <span class="APL">2i3j4k5</span>)</li>
        <li>Octonions (e.g., <span class="APL">2i3j4k5l6il7jl8kl9</span>)</li>
        <li>Rational numbers (e.g., <span class="APL">1r3</span>)</li>
        <li>Array predicates (a la Bernecky)</li>
        <li>Datatypes user extensible via user-defined APL functions</li>
      </ul>
    </div>

    <div class="section">
      <h2 id="Miscellaneous">Miscellaneous Features</h2>

      <h3>Current Miscellaneous Features</h3>
      <ul>
        <li>Multiple workspaces may be open at the same time
          and switched between via Tabs</li>
        <li>All variable names are two-byte characters
          (Unicode, that is, UTF-16)</li>
        <li>Array rank and dimension limit of 64 bits</li>
        <li>Multilevel Undo in function editing</li>
        <li>Undo buffer saved with function for reuse on next edit</li>
        <li>Prototypes for all primitive functions and operators</li>
        <li>Fast Boolean reduction ({lessthan}{notmore}{equal}{notless}{morethan}{notequal}{or}{nor}{and}{nand}{plus})
          and scan ({lessthan}{notmore}{equal}{notless}{morethan}{notequal}{or}{nor}{and}{nand})
          along contiguous bits</li>
        <li>Right double click on an editable name brings up the function editor on that name</li>
        <li>Control chars (<span class="APL">{quad}TCBEL</span>, <span class="APL">{quad}TCBS</span>,
          <span class="APL">{quad}TCDEL</span>, <span class="APL">{quad}TCESC</span>,
          <span class="APL">{quad}TCFF</span>, <span class="APL">{quad}TCHT</span>,
          <span class="APL">{quad}TCLF</span>, <span class="APL">{quad}TCNL</span>, and
          <span class="APL">{quad}TCNUL</span>) display correctly in simple and nested output
        <li>Out of range numeric assignments to
          <span class="APL">{quad}PP</span> and
          <span class="APL">{quad}PW</span> are set to the value in the allowable range
          nearer the ceiling of the given number.  For example, if
          <span class="APL">{quad}PP</span> is set to <span class="APL">23.7</span>,
          that value is rounded down to <span class="APL">17</span>, the largest value
          that system variable may assume.</li>
      </ul>

      <h3>Wish List of Miscellaneous Features</h3>
      <ul>
        <li>Line continuation marker for easier display of long lines
          which also allows comments within a line</li>
        <li>Control structures on one line or split across multiple lines</li>
        <li>Idiom recognition at tokenization time</li>
        <li>Beating and drag-along (a la P.S. Abrams
          <a class="linkleft" href="http://www.slac.stanford.edu/pubs/slacreports/slac-r-114.html">"An APL Machine"</a>),
          at least for Selective Assignment</li>
        <li>Workspaces saved as plain text ASCII files</li>
        <li>Syntax highlighting</li>
      </ul>
    </div>

    <div class="section">
      <h2 id="Currently_Implemented">Currently Implemented Features</h2>

      <h3>Primitive functions</h3>
      <ul>
        <li>Monadic (<b>ALL DONE</b>)
          <ul>
            <li>All monadic primitive scalar functions ({plus}{minus}{multiply}{divide}{circle}{circlestar}{star}{stile}{downstile}{upstile}{shreik}{query}{tilde})</li>
            <li>Monadic rho ({rho}) &mdash; shape</li>
            <li>Monadic left shoe ({enclose}) &mdash; enclose (with and without axis operator)</li>
            <li>Monadic iota ({iota}) &mdash; index generator</li>
            <li>Monadic epsilon ({epsilon}) &mdash; enlist</li>
            <li>Monadic comma ({comma} and {commabar}) &mdash; ravel (with and without axis operator), and table
               &mdash; Axis operator to Ravel may transpose coordinates</li>
            <li>Monadic equal-underbar ({equalunderbar}) &mdash; depth</li>
            <li>Monadic circle-slope ({circleslope}) &mdash; transpose</li>
            <li>Monadic circle-stile/circle-bar ({circlestile} and {circlebar}) &mdash; reverse (with and without axis operator)</li>
            <li>Monadic domino ({domino}) &mdash; matrix inverse
              using Moore-Penrose pseudo-inverse algorithm via Singular Value Decomposition</li>
            <li>Monadic downtack jot ({thorn}) &mdash; default format</li>
            <li>Monadic up arrow ({uparrow}) &mdash; first</li>
            <li>Monadic uptack jot ({uptackjot}) &mdash; execute</li>
            <li>Monadic right shoe ({disclose}) &mdash; disclose (with and without axis operator)</li>
            <li>Monadic delta stile ({gradeup}) &mdash; numeric grade up</li>
            <li>Monadic del stile ({gradedown}) &mdash; numeric grade down</li>
            <li>Monadic downshoe ({downshoe}) &mdash; unique (via an internal magic function)</li>
          </ul>
        </li>
        <li>Dyadic
          <ul>
            <li>All dyadic primitive scalar functions ({lessthan}{notmore}{equal}{notless}{morethan}{notequal}{or}{nor}{and}{nand}{plus}{minus}{multiply}{divide}{circle}{circlestar}{star}{stile}{downstile}{upstile}{shreik})
              (with and without axis operator)</li>
            <li>Dyadic up ({upcaret}) and down ({downcaret}) caret have been extended to
              Least Common Multiple (LCM) and Greatest Common Divisor (GCD),
              respectively</li>
            <li>Dyadic query ({query}) &mdash; deal</li>
            <li>Dyadic rho ({rho}) &mdash; reshape</li>
            <li>Dyadic slash ({/}) &mdash; replicate</li>
            <li>Dyadic slope ({\}) &mdash; expand</li>
            <li>Dyadic left tack ({lev}) &mdash; left</li>
            <li>Dyadic right tack ({dex}) &mdash; right</li>
            <li>Dyadic comma ({comma} and {commabar}) &mdash; catenate/laminate (with and without axis operator)</li>
            <li>Dyadic equal-underbar ({equalunderbar}) &mdash; match</li>
            <li>Dyadic circle-slope ({circleslope}) &mdash; transpose</li>
            <li>Dyadic circle-stile/circle-bar ({circlestile} and {circlebar}) &mdash; rotate (with and without axis operator)</li>
            <li>Dyadic domino ({domino}) &mdash; matrix divide
              using Moore-Penrose pseudo-inverse algorithm via Singular Value Decomposition</li>
            <li>Dyadic down arrow ({drop}) &mdash; drop (with and without axis operator)</li>
            <li>Dyadic up arrow ({take}) &mdash; take (with and without axis operator)</li>
            <li>Dyadic delta stile ({gradeup}) &mdash; character grade up</li>
            <li>Dyadic del stile ({gradedown}) &mdash; character grade down</li>
            <li>Dyadic right shoe ({pick}) &mdash; pick</li>
            <li>Dyadic down tack ({encode}) &mdash; encode/representation</li>
            <li>Dyadic up tack ({decode}) &mdash; decode/base value</li>
            <li>Dyadic squad ({squad}) &mdash; index (with and without axis operator)</li>
            <li>Dyadic epsilon ({epsilon}) &mdash; member of</li>
            <li>Dyadic iota ({iota}) &mdash; index of</li>
            <li>Dyadic iota ({iota}) extended to rank > 1 left arguments returns an array
              of vector indices to the left arg (via an internal magic function)</li>
            <li>Dyadic tilde ({tilde}) &mdash; without (via an internal magic function)</li>
            <li><b>TBD:</b>  Dyadic down tack jot (Format by Specification)</li>
          </ul>
        </li>
      </ul>

      <h3>Primitive operators</h3>
      <ul>
        <li>Monadic (<b>ALL DONE</b>)
          <ul>
            <li>Monadic operator each  ({each}) monadic and dyadic derived functions &mdash; each
              (with and without axis operator)</li>
            <li>Monadic operator frown ({frown}) monadic and dyadic derived functions &mdash; commute and duplicate</li>
            <li>Monadic operator jot-dot ({jot}{dot}) dyadic derived function &mdash; outer product</li>
            <li>Monadic operator slash ({/}) monadic and dyadic derived functions &mdash;
               reduce and N-wise reduce (with and without axis operator)</li>
            <li>Monadic operator slope ({\}) monadic derived function &mdash;
               scan (with and without axis operator)</li>
            <li>Monadic operator null ({circlemiddledot}) to aid in
              resolving ambiguities with slash/slope as function/operator
              (e.g., use <span class="APL">/{circlemiddledot}/3 4</span>
               instead of <span class="APL">//3 4</span>)</li>
          </ul>
        </li>
        <li>Dyadic
          <ul>
            <li>Dyadic operator jot ({jot}) monadic and dyadic derived functions &mdash; composition</li>
            <li><b>TBD:</b>  Inner Product</li>
          </ul>
        </li>
      </ul>

      <h3>Datatypes</h3>
      <ul>
          <li>1-bit Booleans</li>
          <li>2-byte Characters (Unicode, that is, UTF-16)</li>
          <li>64-bit Integers</li>
          <li>64-bit Floats</li>
          <li>Nested arrays</li>
          <li>APAs (Arithmetic Progression Arrays) (e.g.,
            <span class="APL">2 3 4{rho}{iota}24</span>)</li>
          <li>± Infinity (e.g., <span class="APL">{underbar}</span> for infinity
            and <span class="APL">{overbar}{underbar}</span> for negative infinity)
            &mdash; considerable development work needs to be done to this
            feature to handle the many special cases</li>
      </ul>

      <h3>Miscellaneous</h3>
      <ul>
        <li>Strands (e.g., <span class="APL">(1 2 3) 'abcd' ({iota}4)</span>)</li>
        <li>Strand Assignment (e.g., <span class="APL">(A B){is}1 2</span> is the same as
          <span class="APL">A{is}1</span> and
          <span class="APL">B{is}2</span>)</li>
        <li>Modify Assignment (e.g.,
          <span class="APL">A+{is}1</span> is the same as <span class="APL">A{is}A+1</span>)</li>
        <li>Modify Strand Assignment (e.g.
          <span class="APL">(A B)+{is}1</span> is the same as
          <span class="APL">A{is}A+1</span> and
          <span class="APL">B{is}B+1</span>)</li>
        <li>Function/operator assignment (e.g.,
          <span class="APL">F{is}+.{times}</span> and
          <span class="APL">F{is}{dieresis}</span> and
          <span class="APL">F{is}{jot}</span>)</li>
        <li>Function editing via <span class="APL">{del}</span> or <span class="APL">)EDIT</span></li>
        <li>Raw output</li>
        <li>Unified index reference and assignment: <span class="APL">R[L]</span>
          and <span class="APL">R[L]{is}</span>
          allow both Reach and Scatter indexing &mdash; that is, if
          <span class="APL">L{pick}R</span> is valid, it is equivalent to
          <span class="APL">{disclose}R[{enclose}L]</span>, and if
          <span class="APL">L{squad}R</span> is valid, it is equivalent to
          <span class="APL">R[{disclose}{jot}.,/L]</span> &mdash; Reach
          and Scatter indexing may be mixed within a single instance of
          <span class="APL">R[L]</span> and <span class="APL">R[L]{is}</span></li>
        <li>Quad and Quote-Quad output, e.g., (<span class="APL">{quad}{is}R {diamond} {quotequad}{is}R</span>)</li>
        <li>Prototypes for all primitive functions and operators</li>
        <li>Fast Boolean reduction ({lessthan}{notmore}{equal}{notless}{morethan}{notequal}{or}{nor}{and}{nand}{plus})
          and scan ({lessthan}{notmore}{equal}{notless}{morethan}{notequal}{or}{nor}{and}{nand})
          along contiguous bits</li>
        <li>Axis operator allowed with primitive scalar dyadic functions (e.g.,
          <span class="APL">1 2+[1] 2 3{rho}R</span>)</li>
        <li>Axis operator to primitive scalar dyadic functions may transpose coordinates (e.g.,
          <span class="APL">(2 3{rho}L)+[1 2] 2 3 4{rho}R</span> and
          <span class="APL">(3 2{rho}L)+[2 1] 2 3 4{rho}R</span> are both valid
          but, in general, have different values)</li>
        <li>Axis operator to Ravel may transpose coordinates (e.g.,
          <span class="APL">,[2 1] R</span> and <span class="APL">,[1 2] R</span>
          are both valid but, in general, have the same values in different order)</li>
        <li>Axis operator is allowed on the dyadic derived function from the Each operator (e.g.,
          <span class="APL">(2 3{rho}L){rho}{each}[1 2] 2 3 4{rho}R</span>)</li>
        <li>User-defined operators (e.g., <span class="APL">{del}
         Z{is}L (LO OP1[X]) R</span> or
         <span class="APL">{del}
         Z{is}L (LO OP2[X] RO) R</span>)</li>
        <li>Strand left and right arguments and result to user-defined
          functions/operators along with optional left argument (e.g., <span class="APL">{del}
         (Z1 Z2){is}[L1 L2 L3] (LO OP2[X] RO) (R1 R2 R3 R4)</span>)</li>
        <li>Function Execution along with Goto (<span class="APL">{goto}</span>),
          Goto line # (<span class="APL">{goto}N</span>)</li>
        <li>Control-Break (along with Control-C)</li>
        <li>Event Handling (<span class="APL">{quad}ALX</span>)</li>
        <li>Error Handling (<span class="APL">{quad}ELX</span>
          and <span class="APL">{quad}DM</span>)</li>
        <li>User-defined function/operator prototype entry point
          (<span class="APL">{quad}PROTOTYPE:</span>)</li>
        <li>Control chars (<span class="APL">{quad}TCBEL</span>, <span class="APL">{quad}TCBS</span>,
          <span class="APL">{quad}TCDEL</span>, <span class="APL">{quad}TCESC</span>,
          <span class="APL">{quad}TCFF</span>, <span class="APL">{quad}TCHT</span>,
          <span class="APL">{quad}TCLF</span>, <span class="APL">{quad}TCNL</span>, and
          <span class="APL">{quad}TCNUL</span>) display correctly in simple and nested output</li>
        <li><b>TBD:</b> Indexed assignment</li>
      </ul>

      <h3>Session Manager</h3>
      <ul>
        <li>Tabbed Workspaces</li>
        <li>Function Editor</li>
        <li>Character translation during Paste from APL+WIN and other contexts</li>
      </ul>

      <h3>System Functions</h3>
      <ul>
        <li>Niladic (<b>ALL DONE</b>)
          <ul>
            <li><span class="APL">{quad}AV</span></li>
            <li><span class="APL">{quad}DM</span></li>
            <li><span class="APL">{quad}EM</span></li>
            <li><span class="APL">{quad}ET</span></li>
            <li><span class="APL">{quad}LC</span></li>
            <li><span class="APL">{quad}SYSID</span></li>
            <li><span class="APL">{quad}SYSVER</span></li>
            <li><span class="APL">{quad}TC</span></li>
            <li><span class="APL">{quad}TCBEL</span></li>
            <li><span class="APL">{quad}TCBS</span></li>
            <li><span class="APL">{quad}TCDEL</span></li>
            <li><span class="APL">{quad}TCESC</span></li>
            <li><span class="APL">{quad}TCFF</span></li>
            <li><span class="APL">{quad}TCHT</span></li>
            <li><span class="APL">{quad}TCLF</span></li>
            <li><span class="APL">{quad}TCNL</span></li>
            <li><span class="APL">{quad}TCNUL</span></li>
            <li><span class="APL">{quad}TS</span></li>
          </ul>
        </li>

        <li>Monadic
          <ul>
            <li><span class="APL">{quad}CR</span></li>
            <li><span class="APL">{quad}DL</span></li>
            <li><span class="APL">{quad}DR</span></li>
            <li><span class="APL">{quad}ERROR</span></li>
            <li><span class="APL">{quad}ES</span></li>
            <li><span class="APL">{quad}NC</span></li>
            <li><span class="APL">{quad}NL</span></li>
            <li><span class="APL">{quad}SIZE</span></li>
            <li><span class="APL">{quad}TYPE</span></li>
            <li><span class="APL">{quad}UCS</span></li>
            <li><b>TBD:</b> <span class="APL">{quad}EC</span></li>
            <li><b>TBD:</b> <span class="APL">{quad}EX</span></li>
            <li><b>TBD:</b> <span class="APL">{quad}FX</span></li>
          </ul>
        </li>

        <li>Dyadic
          <ul>
            <li><span class="APL">{quad}CR</span> &mdash;
              <span class="APL">1 {quad}CR</span> for vector result,
              <span class="APL">2 {quad}CR</span> for matrix result</li>
            <li><span class="APL">{quad}DR</span> &mdash;
              <span class="APL">0 {quad}DR</span> for character message</li>
            <li><span class="APL">{quad}ES</span></li>
            <li><span class="APL">{quad}NL</span></li>
            <li><b>TBD:</b> <span class="APL">{quad}EA</span></li>
            <li><b>TBD:</b> <span class="APL">{quad}TF</span></li>
          </ul>
        </li>
      </ul>

      <h3>System Commands</h3>
      <ul>
        <li><span class="APL">)CLEAR</span></li>
        <li><span class="APL">)CLOSE</span></li>
        <li><span class="APL">)DROP</span></li>
        <li><span class="APL">)EDIT</span></li>
        <li><span class="APL">)EXIT</span></li>
        <li><span class="APL">)FNS</span></li>
        <li><span class="APL">)LIB</span></li>
        <li><span class="APL">)NEWTAB</span></li>
        <li><span class="APL">)NMS</span></li>
        <li><span class="APL">)OPS</span></li>
        <li><span class="APL">)RESET</span></li>
        <li><span class="APL">)SI</span></li>
        <li><span class="APL">)SIC</span></li>
        <li><span class="APL">)SINL</span></li>
        <li><span class="APL">)VARS</span></li>
        <li><span class="APL">)WSID</span></li>
        <li><b>TBD:</b> <span class="APL">)COPY</span></li>
        <li><b>TBD:</b> <span class="APL">)ERASE</span></li>
        <li><b>TBD:</b> <span class="APL">)LOAD</span></li>
        <li><b>TBD:</b> <span class="APL">)SAVE</span></li>
      </ul>
    </div>

    <div class="section">
      <h2 id="Platforms">Platforms</h2>

        <p>At the moment, NARS2000 is designed to run on Windows only,
          versions 2000 and XP (not tested on Vista as yet).  However,
          it is free software, so you are invited to help extend its reach.
        </p>
    </div>

    <div class="section">
      <h2 id="Documentation">Documentation</h2>

      <p>As with many free software projects, the documentation for
        this project is managed by a Wiki.  To see the current
        effort, goto
        <a class="linkleft" href="http://wiki.nars2000.org">the Wiki
        page</a>.</p>

    </div>

    <div class="section">
      <h2 id="What_It_Isnt">What It Isn't</h2>

        <ul>
          <li>Performance:  NARS2000 is not intended to be a high performance
            system, other than as a fallout of interesting algorithms.
            Any good or bad performance on your favorite benchmark is
            purely accidental.
          </li>

          <li>Commercial Use:  NARS2000 is not intended to compete with
            commercial systems.
            As such it lacks the features one expects to find in a
            commercial system, such as a Windows interface, .NET interface, COM
            server, etc., although I've not made any conscious effort to make it
            difficult to add such features.  These features may be included at some later
            time &mdash; they just aren't high priority up front.  You are, of course,
            free to use the program commercially, subject to the license agreement
            (see the next section).
          </li>
        </ul>
    </div>

    <div class="section">
      <h2 id="Get_The_Code">Get The Code</h2>

        <p>The code is released to the public under
        <a class="linkleft" href="http://www.gnu.org/licenses/gpl.html">Version 2
        of the GNU GPL (General Public License)</a> or any later version, and is
        available in several forms:</p>

        <ul>
          <li>Executable:
            <a class="linkleft" href="http://www.nars2000.org/download/">Windows only</a>.
          </li>

          <li>Source Code Under Version Control:
            <ul>
              <li>The source may be <a class="linkleft" href="http://svn.nars2000.org">viewed</a>,
                as well as downloaded, one file at a time, from your browser.
              </li>

              <li>Or, the source may be downloaded, one file at a time
                or the whole lot, by running a version control program.
                In particular, the source code is maintained on this
                site using <a class="linkleft" href="http://subversion.tigris.org/">Subversion</a>.
                There are various clients which may commmunicate with a Subversion
                server depending upon the operating system running on your computer.
                For example, if you are running Windows, you may download (for free)
                the program <a class="linkleft" href="http://tortoisesvn.tigris.org/">Tortoise SVN</a>.
                This is one means by which developers may checkout and commit changes to
                the code.
                Using a version control program, the source code may be viewed using
                the URL <code>svn://svn.nars2000.org</code>.
              </li>

              <li>The <a class="linkleft" href="http://svn.nars2000.org">browser view</a>
                also allows you to download the entire source code as a compressed file.
                Try the link at the bottom of each index page labeled "Download tarball".
              </li>
            </ul>
          </li>
        </ul>
    </div>

    <div class="section">
      <h2 id="If_You_Want_To_Help">If You Want To Help</h2>

      <p>This project was designed to be extensible by both the end
      user (via APL magic functions) as well as by developers.  This is
      your chance to add a valuable feature to NARS2000.</p>

      <p>The source code is written in a combination of APL (as internal magic
      functions) and C, so knowledge of just APL or both languages
      is all you need.</p>

      <p>Also, don't forget that documentation is an area in need of
      improvement, so if your skills are in writing, your help is needed.</p>

      <p>The best way to help is to find an area of the project in which
      you'd like to contribute, write up a short description of what you
      want to do and submit it to the project via the Discussion Forums.</p>

      <p>When you contribute content to the project, your name will be placed in
      the <a class="linkleft" href="/Contributors.ahtml">List of Contributors</a>.
      First time contributors will also need to
      <a class="linkleft" href="http://www.gnu.org/licenses/why-assign.html">assign
      copyright</a> of what you contribute to the project, in
      particular to the principal author, Bob Smith.  This is by no means
      an attempt to take
      credit for what you have contributed &mdash; instead, it provides a
      single point of reference from a legal standpoint in case the program's copyright
      (actually <a class="linkleft" href="http://www.gnu.org/copyleft/copyleft.html">copyleft</a>)
      needs to be enforced.  See the "assign copyright" link above for why this is
      necessary.</p>
    </div>

    <div class="section">
      <h2 id="Discussion_Forums">Discussion Forums</h2>

      <p>To facilitate discussion about this project, there is a
        <a class="linkleft" href="http://forums.nars2000.org">bulletin
        board</a> available for your use.  This BB is for discussion
        relative to this project, and is not meant to supplant other
        forums such as the <a class="linkleft"
        href="news:comp.lang.apl">comp.lang.apl</a> newsgroup.</p>
    </div>

    <div class="section">
      <h2 id="Author">Author</h2>

      <p>This project was started by
      <script type="text/javascript"
              src="/email.cgi?n=bsmith&amp;d=sudleyplace.com&amp;t=Bob%20Smith&amp;class=mailright"></script>
      and is &copy; 2006-2007, Sudley Place Software.</p>
    </div>
  </td>
</tr>
</table>

<hr />

<!--#include virtual="/ValidXHTML-CSS.html" -->
<!--#include virtual="/footer.html" -->
</body></html>
