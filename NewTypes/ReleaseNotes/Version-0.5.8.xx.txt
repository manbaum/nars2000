Version 0.5.8.xx consists of the following Builds:


Build #1930 -- Version 0.5.8.xx
-------------------------------

* Fix Bugs In []CR When Passed A Variable Or System Function

Directory branches/bsmith/NewTypes:

MACROS.H:
  Define macros to identify IMMTYPE_xxx functions and operators.

QF_CR.C:
  In <SysFnCR_Common_EM_YY>, return empty result if an immediate input is not a function/operator.
  In <SysFnCR_Common_EM_YY>, call separate function to copy the FCN/OPR name of the immediate input to the result.
  Define new function <CopyFcnName> to copy the name of a internal system function to the result.

SYSVARS.C:
  Define a variable containing the number of rows in <aSystemNames> so it can be used in other files.
  Fix typo in comment.
  In <DeleSysVars>, check for deleted vars before doing it again.
  In <DeleMfoSysVars>, zap the item just deleted so we don't try to delete it again.


Build #1929 -- Version 0.5.8.xx
-------------------------------

* Fix Bug When Comparing FLT NaNs And non-NaNs

Directory branches/bsmith/NewTypes:

CONVERT.C:
  In <flt_cmp_ct>, if either arg is a NaN, use the new FLT NaN comparison function.
  Define new comparison function between NaNs and non-NaNs and use it everywhere so we can produce consistent results.

PF_DELTASTILE.C:
  In <PrimFnGradeCompare>, use the new FLT NaN comparison function.


Build #1928 -- Version 0.5.8.xx
-------------------------------

* Handle NUL In Undo Buffer Insertion

Directory branches/bsmith/NewTypes:

EDITFCN.C:
  In IF/WHILE stmts always compare ptr against NULL and value against 0.
  Rename <undoInsToggle> to <undoToggleIns> so that a search for <undoIns> is unique.
  In <AppendUndo>, check for <undoIns> inserting a NULL and replace it with <UTF16_REPLACEMENT0000>.

EXTERNS.H:
  Rename <undoInsToggle> to <undoToggleIns> so that a search for <undoIns> is unique.
  Document the co-dependency of <tagUNDO_ACTS> and <UndoActToChar>.

SAVEFCN.C:
  Rename <undoInsToggle> to <undoToggleIns> so that a search for <undoIns> is unique.

SYMBOLNAMES.H:
  In <aSymbolNames>, include <{UTF16_REPLACEMENT0000, L"{nul}"}>.


Build #1927 -- Version 0.5.8.xx
-------------------------------

* Fix Memory Leak

Directory branches/bsmith/NewTypes:

PN_PROC.C:
  In <PN_MakeExpPoint>, avoid memory leak when creating a VFP Exponential.
  Delete obsolete commented out code.


Build #1926 -- Version 0.5.8.xx
-------------------------------

* Fix Bug From Last Build

Directory branches/bsmith/NewTypes:

EXECMFN.C:
SAVEFCN.C:
  Forgot to leave in code to increment the Logical Line number.
  More distinguishing between Logical and Physical lines when saving a function.

FH_PARSE.H:
  Define new field in UDFO header to hold the # physical lines.


Build #1925 -- Version 0.5.8.xx
-------------------------------

* Fix Bug When Saving An Edited Function With Line Continuations Within Certain Control Structures

Directory branches/bsmith/NewTypes:

CS_PARSE.Y:
  Distinguish between Logical and Physical lines when saving a function.

CS_PROC.C:
  Assert when loading a Token Header that it really is one.
  In IF/WHILE stmts always compare ptr against NULL and value against 0.

EDITFCN.C:
EXECDFN.C:
EXECMFN.C:
IMMEXEC.C:
PF_UTACKJOT.C:
SAVEFCN.C:
TOKENIZE.C:
  Distinguish between Logical and Physical lines when saving a function.
  This fixes a bug when saving an edited function with Line Continuations
    within certain Control Structures.


Build #1924 -- Version 0.5.8.xx
-------------------------------

* Define More )DEBUG Commands

Directory branches/bsmith/NewTypes:

SC_DEBUG.C:
  Define more )DEBUG commands such as [ON|OFF] to turn the debuger [ON|OFF],
    and )DEBUG test=[0|1] to define a global test var.
  Move <IncorrectCommand> code to the end.


Build #1923 -- Version 0.5.8.xx
-------------------------------

* Simplify 64-bit Compiles
* Allow Negative Sign In BasePoint

Directory branches/bsmith/NewTypes:

PN_PARSE.H:
  Define additional ENUMs to simplify common macros
  Fix mis-attribution comment.
  Move <uNamAcc> from bit field to its own UINT.
  Change UINT to size_t where it matters for 64-bit compiles.
  Define various common text strings as opposed to using literals in mutiple places.

PN_PARSE.Y:
  Allow negative sign in BasePoint as 16b-XXX.
  Simplify 'e' vs. 'E' into its own terminal.
  Use defined common text strings instead of literals.

PN_PROC.C:
  Fix last column (INIT) of PN_MAT.
  Change UINT to size_t where it matters for 64-bit compiles.
  Allow negative sign in BasePoint as 16b-XXX.
  Improve comments.

SC_LOAD.C:
  Use defined common text strings instead of literals.


Build #1922 -- Version 0.5.8.xx
-------------------------------

* Fix Bug In Floor Between FLT and RAT

Directory branches/bsmith/NewTypes:

PF_DSTILE.:
  Fix bug in Floor where it returns different values for the same value as a FLT vs. as a RAT.  The problem is
    that they used different comparisons, both meant to be exact, but on values that differed by a few ULPs
    because of the different ways FLT and RAT calculates distances.  Now all of those comparisons use []CT.
  Improve comments.


Build #1921 -- Version 0.5.8.xx
-------------------------------

* Fix Bug Introduced In Build #1918

Directory branches/bsmith/NewTypes:

PF_BAR.C:
  In build #1918, I overlooked a co-requisite change where the constant 2 should be <FRV_MUL> (now 3)
    in three exception handlers <NegHC[124]R_RE1>.


Build #1920 -- Version 0.5.8.xx
-------------------------------

* Fix Second Bug Introduced In Previous Build

Directory branches/bsmith/NewTypes:

PRIMSPEC:
  In the previous build, I omitted a crucial test in the exception handler for the SimpSimp function.


Build #1919 -- Version 0.5.8.xx
-------------------------------

* Fix Bug Introduced In Previous Build

Directory branches/bsmith/NewTypes:

PRIMSPEC:
  In the previous build, I deleted too much in the exception handler for the SimpSimp function.
  Use WFCN instead of the literal function name.
  Append \r\n to the end of all text that might be displayed via <OutputDebugString>.
  Delete unused variables.


Build #1918 -- Version 0.5.8.xx
-------------------------------

* Promote Large Factorials From FLT To RAT

Directory branches/bsmith/NewTypes:

ENUMS.H:
  Define new Exception Codes for HCxR.
  Move towards replacing "_FLOAT" with "_FLT".
  Fix mis-attribution in comment.

EXCEPT.C:
  Define new Exception Codes for HCxR.
  Move towards replacing "_FLOAT" with "_FLT".

PF_QDOT.C:
  Move towards replacing "_FLOAT" with "_FLT".
  Replace "DOMAIN ERROR" for large Factorials with RAT result.

PRIMSPEC:
  Move towards replacing "_FLOAT" with "_FLT".
  Handle "EXCEPTION_RESULT_RAT" and friends as a new exception.
  In <PrimFnDydSimpSimp_EM>, merge similar code in the exception handler.

TRANSLATE.C:
  Move towards replacing "_FLOAT" with "_FLT".
  Handle "EXCEPTION_RESULT_RAT" and friends as a new exception.


Build #1917 -- Version 0.5.8.xx
-------------------------------

* Fix Bug In Match And Grade When Comparing Hetero And Nested Arrays

Directory branches/bsmith/NewTypes:

CONVERT.C:
  Fix bug in Match and Grade when comparing Hetero and Nested arrays.


Build #1916 -- Version 0.5.8.xx
-------------------------------

* Prepare For Common Malloc/Free/Realloc

Directory branches/bsmith/NewTypes:

COMPRO.H:
  Delete references to "dl" Memory Management as we no longer use it as a substitute memory allocator.

DICTIONARY.C:
  Use common Memory Allocator header.

DISPDBG.C:
  Append CRLF to end of DbgMsg output in case the string goes to <OutputDebugString>
    which requires that ending.
  Delete references to "dl" Memory Management as we no longer use it as a substitute memory allocator.

DTOA.C:
  Define macros for Memory Management.

HEADERS.H:
  Use common Memory Allocator header.

INIPARSER.C:
  Use common Memory Allocator header.
  Comment out instruction which deletes leading spaces from function lines
    so as to preserve leading spaces when saving to a workspace file.

MAKEFILE.INC:
MAKEFILE.SRC:
NARS2000.VCXPROJ:
STARTADDR.H:
  Delete references to "dl" Memory Management as we no longer use it as a substitute memory allocator.

MPFNS.C:
PO_COMB.C;
RESDEBUG.C:
  Use common Memory Manager API instead of "dl" prefix versions.

NARSMALLOC.H:
  Define Memory Allocator header.


Build #1915 -- Version 0.5.8.xx
-------------------------------

* Fix Bug In Quaternion Floor With Hurwitz Integers

Directory branches/bsmith/NewTypes:

PF_DSTILE.C:
  Improve comments.
  Fix bug when coding division using APL-like code instead of C.
  Fix bug of not initializing to zero GlbNum declarations.


Build #1914 -- Version 0.5.8.xx
-------------------------------

* Fix Memory Leak In Outer Product When Type Promoting

Directory branches/bsmith/NewTypes:

PO_JOTDOT.C:
  Delete list test.
  Improve comments.
  In <PrimOpDydJotDotCommon_EM_YY>, handle result storage type of Real Only.
  In <PrimOpDydJotDotCommon_EM_YY>, fix memory leak when type promoting.


Build #1913 -- Version 0.5.8.xx
-------------------------------

* Rename Internal Functions/Macros

Directory branches/bsmith/NewTypes:

HC_PROC.C:
MACROS.H:
PF_COLONBAR.C:
PF_DOMINO.C:
PF_DTACK.C:
PF_EPSUND.C:
PF_EQUALUND.C:
PF_INDEX.C:
PF_PI.C:
PF_QUERY.C:
PF_RHO.C:
PF_ROOT.C:
PF_SLASH.C:
PF_TIMES.C:
PF_UTACK.C:
PN_PROC.C:
PO_DOT.C:
PO_MULTISET.C:
PO_SLASH.C:
PO_VARIANT.C:
PRIMSPEC.C:
QF_DR.C:
QF_FX.C:
QF_MF.C:
QF_TF.C:
SC_SAVE.C:
TYPEMOTE.C:
  Rename internal functions/macros to better reflect their usage.


Build #1912 -- Version 0.5.8.xx
-------------------------------

* Document Power Operator With Function Right Operands In Language Bar

Directory branches/bsmith/NewTypes:

REBAR.C:
  Document the Power operator on the Language Bar, this time with function right operands.


Build #1911 -- Version 0.5.8.xx
-------------------------------

* Implement Power Operator Except For Inverses

Directory branches/bsmith/NewTypes:

COMPRO.H:
  Include prototype file.

EXECFNS.C:
  Recognize the Power operator as a dyadic operator.

INITDATA.C:
  Note that the Power is not implemented (except for Inverses).

MAKEFILE.INC:
MAKEFILE.SRC:
NARS2000.VCXPROJ:
NARS2000.VCXPROJ.FILTERS:
  Include the new source file in the list of files to make.

PO_DIJOT.C:
  Fix typo.

PO_DISTAR.C:
  New source file which implements the Power operator.

REBAR.C:
  Document the Power operator on the Language Bar.

STRAND.C:
  Define helper function to create a new function array appending an operator.

YYFNS.C:
  Define helper function to allocate a new YYRes from an existing token.
  In <YYFree>, handle the case where the YYRes is not in use.


Build #1910 -- Version 0.5.8.xx
-------------------------------

* Extend )DEBUG to Other Debug Contexts

Directory branches/bsmith/NewTypes:

CS_PARSE.Y:
FH_PARSE.Y:
PN_PARSE.Y:
SC_DEBUG.C:
  Define more DEBUG contexts, this time for CS, FH, and PN tracing.


Build #1909 -- Version 0.5.8.xx
-------------------------------

* Fix Bug When Comparing Certain Nested Arrays Of Different Depth

Directory branches/bsmith/NewTypes:

CONVERT.C:
  Fix bug in <HeNe_cmp> when comparing certain Nested arrays of different depth.


Build #1908 -- Version 0.5.8.xx
-------------------------------

* Clean Up PRIMFLAGS Struc, Part II
* Rename Boolean Flags Consistent With Content-Naming Conventions

Directory branches/bsmith/NewTypes:

EXTERNS.H:
FASTBOOL.C:
GETFNS.C:
INITDATA.C:
PO_DOT.C:
PO_JOTDOT.C:
PO_SLASH.C:
PO_SLOPE.C:
PRIMSPEC.C:
  Clean up the PRIMFLAGS struc, part II.
  Rename Boolean flags to be consistent with content-naming conventions.


Build #1907 -- Version 0.5.8.xx
-------------------------------

* Clean Up PRIMFLAGS Struc

Directory branches/bsmith/NewTypes:

EXTERNS.H:
GETFNS.C:
INITDATA.C:
  Clean up the PRIMFLAGS struc.


Build #1906 -- Version 0.5.8.xx
-------------------------------

* Extend )DEBUG to Other Debug Contexts

Directory branches/bsmith/NewTypes:

IMMEXEC.C:
SC_DEBUG.C:
TOKENIZE.C:
  Define more DEBUG contexts, this time for Execution and Tokenization Trace.


Build #1905 -- Version 0.5.8.xx
-------------------------------

* Fix Bug In Residue Where Internal Calculations Near An Integer Are Not Rounded

Directory branches/bsmith/NewTypes:

PF_STILE.C:
  In <ModHCxI>, <ModHCxF>, <ModHCxR>, and <ModHCxV>, with "A=L/R", IF "A==Floor(A)" return 0 ELSE return "L*(A-Floor(A))" in case "A" and "Floor(A)" are equal within []CT.


Build #1904 -- Version 0.5.8.xx
-------------------------------

* Fix Bug In DotDot When Calculating the NELM On FP Numbers

Directory branches/bsmith/NewTypes:

PF_DOTDOT.C:
  In <PrimFnDydDotDot_EM_YY>, use SYS_CT when calculating the NELM of the result given certain Floating Point numbers such as 1.1 0.1..1.4 .


Build #1903 -- Version 0.5.8.xx
-------------------------------

* Fix Bug When Calling []SI From Within []EA Or []EC

Directory branches/bsmith/NewTypes:

EXECMFN.H:
  Define additional $QUAD_xx equates.

QF_SI.C:
SC_SI.C:
  Fix bug when calling []SI from within either []EA or []EC.


Build #1902 -- Version 0.5.8.xx
-------------------------------

* Fix Bug When Branching Inside A []ELX Statement

Directory branches/bsmith/NewTypes:

GOTO.C:
  In IF/WHILE stmts always compare ptr against NULL and value against 0.
  In <GotoLine_EM> when winding back the SI stack looking for a UDFO, skip over DFNTYPE_FCNs with a NULL hGlbDfnHdr.
  In <GotoLine_EM>, if a valid UDFO is found, mark is as no longer suspended.


Build #1901 -- Version 0.5.8.xx
-------------------------------

* Fix Bug When Parsing Named Indexed Assignment

Directory branches/bsmith/NewTypes:

PARSELINE.C:
  When cleaning up after parsing, don't free named objects on the left or right parsing stacks which can appear from named indexed assignment, etc.


Build #1900 -- Version 0.5.8.xx
-------------------------------

* Fix Bug In Nth Prime Function

Directory branches/bsmith/NewTypes:

PF_PI.C:
  In <PrimFnDydPi_EM_YY>, fix bug in Nth Prime function off by one when indexing the <Nth1e0PrimeTab> table.


Build #1899 -- Version 0.5.8.xx
-------------------------------

* Fix Bug Indexing A Rank > 1 Array With A Scalar

Directory branches/bsmith/NewTypes:

PF_INDEX.C:
  In <ArrayIndexSetSingLst_EM>, fix bug when indexing a rank > 1 array with a scalar:  it should signal a RANK ERROR.
  In <ArrayIndexSetSingLst_EM>, fix bug where the Set argument is nested.


Build #1898 -- Version 0.5.8.xx
-------------------------------

* Fix Bug When Calling Two Niladic Functions One Of Which Erases The Other

Directory branches/bsmith/NewTypes:

EXECDFN.C:
  In <ExecDfnOprGlb_EM_YY>, rename <lpYYFcnStr> to <lpYYFcnStrOpr> to avoid confusion with names with a similar prefix.

EXECFNS.C:
  Rename <ExecuteFn0> to <ExecuteFn0Glb> and add another arg so to as allow execution of HGLOBALs.

PARSELINE.C:
  In <plRedNF_NF>, handle the case where the first function executed erases the second function.
  In <plRedNF_NF>, execute the functions from right to left.
  Define <plExecuteFn0Glb> which allows execution of a function via its HGLOBAL.


Build #1897 -- Version 0.5.8.xx
-------------------------------

* Fix Bug In Last Build

Directory branches/bsmith/NewTypes:

PF_SQUAD.C:
  In <PrimFnDydSquadGlb_EM_YY>, handle the case when the Set argument is a singleton.


Build #1896 -- Version 0.5.8.xx
-------------------------------

* Fix Bug When Assigning Into An Array Which Forces Promotion To Hetero

Directory branches/bsmith/NewTypes:

PF_SQUAD.C:
  In <PrimFnDydSquadGlb_EM_YY>, handle the case when assigning into a simple non-hetero array which forces promotion to hetero.


Build #1895 -- Version 0.5.8.xx
-------------------------------

* Extend Index Coalescing To Indexed Assignment And Modified Indexed Assignment

Directory branches/bsmith/NewTypes:

FREE.C:
  In IF/WHILE stmts always compare ptr against NULL and value against 0.
  In <FreeTempResult>, call <FreeResult> as the subfunction instead of
    <FreeResultSub> so as to free curried items as well.

PARSELINE.C:
  Coalesce repeated indices for Indexed Assignment and Modified Indexed
    Assignment.

PF_INDEX.C:
  Fix bug in <ArrayIndexFcnSet>, so as to allow indexing into non-singleton set arguments.


Build #1894 -- Version 0.5.8.xx
-------------------------------

* Extend )DEBUG to Other Debug Contexts

Directory branches/bsmith/NewTypes:

EXTERNS.H:
SC_DEBUG.C:
SYMTAB.C:
YYFNS.C:
  Define more DEBUG levels.


Build #1893 -- Version 0.5.8.xx
-------------------------------

* Fix Bug In 3 []DR On Floating Point Numbers

Directory branches/bsmith/NewTypes:

QF_DR.C:
  Fix bug when returning the # bits of precision for floating point numbers -- should be 53 not 64.  Duh!


Build #1892 -- Version 0.5.8.xx
-------------------------------

* Fix Bug In The Magic Operator That Handles APL2's Inner Product
* Fix Bug In Magic Function For Dyadic Squad Not Catching LENGTH/AXIS ERROR.
* Fix Bug In Various Functions Using The Wrong Character Index
* Fix Bug In {enclose} When Enclosing An Empty Which Returns A Non-empty

Directory branches/bsmith/NewTypes:

AXISFNS.C:
  In IF/WHILE stmts always compare ptr against NULL and value against 0.
  Rename <CheckAxisGlb> to <CheckAxisGlb_EM> as it sets an Error Message.
  Move code from <CheckAxis_EM> to its own subroutine for better maintenance.
  In <CheckAxis_EM>, handle <TKT_LSTMULT> although <MakeAxis_EM> catches it first.

COMMON.C:
  Ensure <AllocateGlobalArray> returns a value with the Pointer Type Bits set.

CS_PROC.C:
PF_CSTILE.C:
PO_DOT.C:
  Rename <CopyToken_EM> to <CopyToken> as it does not set an Error Message.

DATATYPE.H:
  Include <RefCnt> entry in the <LSTARRAY_HEADER> struc so we can make copies.

DISPDBG.C:
  In <_ValidObj> test for valid ptr when in DEBUG mode.

EXECDFN.C:
  In <InitVarSTEs>, handle <TKT_LSTMULT> tokens as an empty Axis Array.

FREE.C:
  In <FreeResultGlobalLst>, handle list arrays with RefCnt.
  In <FreeResultGlobalFcn>, handle <TKT_LSTMULT> as a separate token.

GETFNS.C:
  In <GetGlbMem_LOCK>, handle <TKT_LSTARRAY> the same as <TKT_LSTMULT>.

MF_DOT.H:
  Fix bug in the Magic Operator that handles APL2's Inner Product.

MF_SQUAD.H:
  Fix bug in Magic Function for Dyadic Squad not catching a LENGTH/AXIS ERROR.

PARSELINE.C:
  Rename <MakeAxis_YY> to <MakeAxis_EM_YY> as it now sets an Error Message.
  Check for errors from <MakeAxis_EM>.
  Change calls to <MakeAxis_EM_YY> to reflect the above change.

PF_COMMA.C:
PF_CSLOPE.C:
PF_DARROW.C:
PF_RSHOE.C:
PF_SLASH.C:
PF_SLOPE.C:
PF_SQUAD.C:
PF_UARROW.C:
PO_SLOPE.C:
  Delete test for right arg as a list as <Parseline> doesn't allow it.
  Improve comments.

PO_SLASH.C:
QF_DC.C:
  Improve comments.

PF_LSHOE.C:
  Fix bug in <LftShoeGlbCom_EM> when enclosing an empty which returns a non-empty.
  Improve comments.

PRIMFNS.C:
  In <AttrsOfToken>, handle <TKT_LSTARRAY> the same as <TKT_LSTMULT>.
  In <IsTknTypeAxis>, handle <TKT_LSTMULT> the same as <TKT_AXISARRAY>.

REFCNT.C:
  In <ChangeRefCntDir_PTB>, handle <LSTARRAY_HEADER>s.

STARTADDR.H:
  Rename <MakeAxis_YY> to <MakeAxis_EM_YY> as it now sets an Error Message.
  Rename <CopyToken_EM> to <CopyToken> as it does not set an Error Message.

STRAND.C:
  Rename <CopyToken_EM> to <CopyToken> as it does not set an Error Message.
  Fix bug in various functions using the wrong character index.
  Rename <MakeAxis_YY> to <MakeAxis_EM_YY> as it now sets an Error Message.
  In <MakeAxis_EM_YY>, handle <TKT_LSTMULT> as an AXIS ERROR.
  In <MakeList_EM_YY>, set the list array RefCnt.
  Rename <CopyToken_EM> to <CopyToken> as it does not set an Error Message.
  In <CopyToken>, increment the RefCnt for list arrays.


Build #1891 -- Version 0.5.8.xx
-------------------------------

* Implement APL2's Definition Of Inner Product

Directory branches/bsmith/NewTypes:

AXISFNS.C:
PF_INDEX.C:
PF_IOTA.C:
PF_RSHOE.C:
PF_SQUAD.C:
  Use macro to reference FEATURENDX_NEGINDICES.

EXECMFN.C:
EXECMFN.H:
  Initialize new Magic Operator for APL2's definition of Inner Product.

EXTERNS.H:
  Define new []FEATURE value to control use of APL2's definition of Inner Product.

FREE.C:
STRAND.C:
  Fix bug of not handling empty axis operator as in {enclose}[].

MACROS.H:
  Define macro to reference FEATURENDX_NEGINDICES.

MAIN.RC:
  Widen Customize dialog to accommodate wider strings.

MF_DOT.H:
  Define new Magic Operator for APL2's definition of Inner Product.

PO_DOT.C:
  Implement APL2's definition of Inner Product.

VER.RC:
  Increment version # to 0.5.8.xx.
