Version 0.5.14.xx consists of the following Builds:


Build #2277 -- Version 0.5.14.xx
--------------------------------

* Fix Bug In Point Notation When Mixing RATs & VFPs

Directory branches/bsmith/NewTypes:

PN_PROC.C:
  In <PN_MakeRatPoint> when changing the result from RAT to VFP, clear the bRatSep flag.
  In <PN_MakeHc2Point>, if the incoming storage type is VFP, don't process the result as a RAT.


Build #2275 -- Version 0.5.14.xx
--------------------------------

* Fix Bug When Assigning []FEATURE With {Zilde}

Directory branches/bsmith/NewTypes:

SYSVARS.C:
  In <ValidSetFEATURE_EM> when assigning {zilde} to []FEATURE, call <SetCurrentFeature> so as to set the values in lpMemPTD->aplCurrentFEATURE.


Build #2273 -- Version 0.5.14.xx
--------------------------------

* Define FEATURE Bit To Distinguish -0 And 0

Directory branches/bsmith/NewTypes:

COMMON.C:
  Define new functions to compare FLT/VFP against +0.

CONVERT.C:
  In <flt_cmp_ct>, distinguish between -0 and 0 if requested.

EXTERNS.H:
  Define new bit in []FEATURE to distinguish between -0 and 0.

FPCHO_COM.C:
  In <fpXf_scale>, handle {inf} x 0 differently from NaN x 0.

FPCHO_COM.MAC:
  In macro <fpXf_mag_imag8> handle non-finite case.

HC_PROC.C:
PF_DOMINO.C:
  Rename <Myhcxr_clewar> and <Myhcxv_clear> to be more consistent.

MACROS.H:
  Define macreos to test for NEG0_NE0.

MPFNS.C:
  In <mpfr_get_ctsx> handle {inf}{ as FALSE in result rather than longjmp.

PF_DELTASTILE.C:
  In <mpfr_cmp_ct>, distinguish between -0 and 0 if requested.

PF_ROOT.C:
  In <SqrtHCxF_RE>, remove redundant code.
  In <SqrtHCxV_RE>, fix memory leak.

PF_STAR.C:
  In <ExpHC2F_RE> and <ExpHC2V_RE> handle missing case.

TYPEMOTE.C:
  In <TypeDemote>, distinguish between -0 and 0 if requested.


Build #2271 -- Version 0.5.14.xx
--------------------------------

* Handle More Special Cases In Complex Exponential Function

Directory branches/bsmith/NewTypes:

PF_STAR.C:
  Handle more special cases in Exponential function for HC2F and HC2V.


Build #2269 -- Version 0.5.14.xx
--------------------------------

* Fix Bug In Equal Function When DOMAIN ERROR Occurs

Directory branches/bsmith/NewTypes:

PF_EQUAL.C:
  Fix bug in <EqualHCxRvHCxR> and <EqualHCxVvHCxV> when the Distance function signals a DOMAIN ERROR.


Build #2267 -- Version 0.5.14.xx
--------------------------------

* Implement Zeta Point Notation

Directory branches/bsmith/NewTypes:

PN_PARSE.Y:
  Define parsing code for Zeta Point Notation.

PN_PROC.C:
  Implement Zeta Point Notation.
  In <PN_MakeHc2Point>, allow a result of <CR_RESULT_NEG0> from <mpq_init_set_str2>.

REBAR.C:
  Document in Zeta Point Notation Language Bar.

TOKENIZE.C:
  Include 'z' in Point Notation Syntax Coloring.

UNICODE.H:
  Define Unicode Code point for Zeta.


Directory branches/bsmith/NewTypes/MediaWiki/extensions:

RENDERAPL.PHP:
  Implement Zeta Point Notation.


Build #2265 -- Version 0.5.14.xx
--------------------------------

* Miscellaneous Changes

Directory branches/bsmith/NewTypes:

PO_COMB.C:
  In <PrimOpMonCombinatorial_EM_YY>, simplify setting of valid state of # Balls & Boxes.

QF_AT.C:
  In IF/WHILE stmts always compare ptr against NULL and value against 0.

TOKENIZE.C:
  Comment out DEBUG statements which need to be re-evaluated to improve them.  At the moment, they are just unhelpful noise.


Build #2263 -- Version 0.5.14.xx
--------------------------------

* Fix Bug When Parsing BasePoint Notation

Directory branches/bsmith/NewTypes:

PN_PARSE.H:
PN_PARSE.Y:
PN_PROC.C:
  Fix bug when parsing BasePoint Notation as it can be confused with Complex Angle Notation.


Build #2261 -- Version 0.5.14.xx
--------------------------------

* Fix Bug When Displaying An Empty Matrix Or Higher Rank Array

Directory branches/bsmith/NewTypes:

PF_DTACKJOT.C:
  In <FormatArrSimple>, check for empty matrix or higher rank array and do not display an empty line.


Build #2259 -- Version 0.5.14.xx
--------------------------------

* Allow The DotDot Function To Be Interrupted

Directory branches/bsmith/NewTypes:

PF_DOTDOT.C:
  In various places, check for Ctrl-Break.


Build #2257 -- Version 0.5.14.xx
--------------------------------

* Fix Bug In Magic Function For Pochhammer Symbol

Directory branches/bsmith/NewTypes:

MF_VARIANT.H:
  Fix bug in Magic Function for Pochhammer symbol.


Build #2255 -- Version 0.5.14.xx
--------------------------------

* Handle One Or More {del}s As A Name

Directory branches/bsmith/NewTypes:

HEADERS.H:
  Include <nameclass.h> as a global header file instead of local to just a couple of functions.

NAMECLASS.H:
  For future use, define <NAMECLASS_SYSOPR>.
  Noter dependency if this enum is changed.

QF_NC.C:
  Remove <nameclass.h> from a local #include as it is now global.
  Fix missing #if/#endif in <IsValid1stCharInName>.
  For future use, define <NAMECLASS_SYSOPR>.
  In <CalcNameClass>. handle one or more {del}s as a name and figure out the proper name class.

QF_NL.C:
  Remove <nameclass.h> from a local #include as it is now global.
  For future use, define <NAMECLASS_SYSOPR>.

TRANSLATE.C:
  Define new function <TranslateNameTypeToNameClass> to help with determining the name class of a name consisting of one or more {del}s.


Build #2253 -- Version 0.5.14.xx
--------------------------------

* Fix A RefCnt Bug When Splitting A Two-Element Global Numeric Strand

Directory branches/bsmith/NewTypes:

DISPDBG.C:
  Define helper DEBUG function <DispVarName>.

PARSELINE.C:
  When encountering a VALUE ERROR, use <DispVarName> to display the var's name for debugging purposes.
  After <PARSELINE_DONE:>, handle SOS as the next token.
  In both <SplitStrandFirst> and <SplitStrandLast>, fix a RefCnt bug when the part remaining after
    splitting is a Global Numeric singleton.


Build #2251 -- Version 0.5.14.xx
--------------------------------

* Cleanup Code In []DR

Directory branches/bsmith/NewTypes:

QF_DR.C:
  Cleanup code in []DR.


Build #2249 -- Version 0.5.14.xx
--------------------------------

* Include {deriv} in Symbol Names Table So It Appears In A Workspace That Way Instead Of As A Hex Constant

Directory branches/bsmith/NewTypes:

SYMBOLNAMES.H:
  Include <UTF16_DERIV> in the table so it appears in a workspace as {deriv} instead of {\x2202}.


Build #2247 -- Version 0.5.14.xx
--------------------------------

* Fix Random Bug With 1 & 2 []DR when A Uninitialized Stack Variable Is Mistakenly Used

Directory branches/bsmith/NewTypes:

QF_DR.C:
  In IF/WHILE stmts always compare ptr against NULL and value against 0.
  The above change actually fixes a bug where I use <lpMemRht> instead of <lpMemHdrRht>.


Build #2245 -- Version 0.5.14.xx
--------------------------------

* Cleanup Code When Displaying CR/CR/LF

Directory branches/bsmith/NewTypes:

DEFINES.H:
  Define WS_CRCR for use in <CheckTermCodes> in <display.c>.

DISPLAY.C:
  In <CheckTermCodes>, handle CR/CR/LF by inserting CR/CR and then falling through to the following WC_LF code.


Build #2243 -- Version 0.5.14.xx
--------------------------------

* Fix Bug In  1 []CR With Multiline AFOs

Directory branches/bsmith/NewTypes:

QF_CR.C:
  Fix bug in 1 []CR with multiline AFOs.  This time, handle all the lines by using the UDFO code.


Build #2241 -- Version 0.5.14.xx
--------------------------------

* Document Combinatorial Operator Internal Values

Directory branches/bsmith/NewTypes:

EXTERNS.H:
  Define ENUMs for Combinatorial operator Function Selectors and Count v. Generate values.

PO_COMB.C:
 Use ENUMs for Combinatorial operators values.

REBAR.C:
  Document Lexicographic/Gray Code/Genlex use in Combinatorial operator.

UNICODE.H:
  Define names for Dagger and DoubleDagger symbols.


Build #2239 -- Version 0.5.14.xx
--------------------------------

* Implement Matrix Inverse/Divide For Underdetermined Matrices

Directory branches/bsmith/NewTypes:

EXECMFN.C:
EXECMFN.H:
MF_DOMINO.H:
  Define and initialize magic functions for Domino on Underdetermined matrices.

PF_DOMINO.C:
  Check for Underdetermined matrices in the Monadic and Dyadic cases.

VER.RC:
  Increment version # to 0.5.14.xx.
