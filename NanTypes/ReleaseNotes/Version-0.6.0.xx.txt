Version 0.6.0.xx consists of the following Builds:


Build #2098 -- Version 0.6.0.xx
-------------------------------

* Fix Bug Of Text From Previous Line Leaking Into Current Line

Directory branches/bsmith/NanTypes:

DISPLAY.C:
  In <CheckTermCodes> set the maximum position so as to avoid text from a previous line leaking into the current line.


Build #2096 -- Version 0.6.0.xx
-------------------------------

* Handle 0 []CR In DEBUG Mode
* Fix Bug With Not Freeing Certain Instances Of {del}s

Directory branches/bsmith/NanTypes:

DISPDBG.C:
  In IF/WHILE stmts always compare ptr against NULL and value against 0.
  In <DisplayTokens>, display the name of the variable if present.
  In <DisplayFcnMem>, if the display ends with a blank, zap it.
  In <DisplayVarSub>, show {zilde} if present.
  Define function <ReturnFcnHdr> for use in 0 []CR.
  In <DisplayFcnHdr>, normalize the spacing between objects.

ENUMS.H:
  Define <ENUMORDER_xxx> for use when displaying a function header.

FREE.C:
  Define additional arg to <FreeResultCurry> to optionally free the AFO if present.
  Define <FreeAFOResult> to free the HGLOBALs in an AFO.
  Define <FreeTempAFOResult> to free a temporary AFO result for use in <parseline.c>.

MACROS.H:
  Define macro for detecting a Named Var.

PARSELINE.C:
  Define DEBUG stmts for Tracing.
  Define DEBUG stmts for Tracing Unstranding a Numeric Strand.
  Free a result iff it's a temporary AFO.
  In <pl_yylexCOM/TKT_DEL/TLT_DELDEL>, call common code to handle {del} and {del}{del}.
  Define function <AllocDel> to allocate storage for {del} and {del}{del} for use in []CR.
  Define function <FillInDel> and <FillInDelDel> to handle {del} and {del}{del} in <pl_yylexCOM>.
  Define function <SetupFcnDels> to handle {del} and {del}{del} in <FillInDel>.

QF_CR.C:
  Allow 0 []CR in DEBUG mode to return the function header.

QF_NC.C:
  Define function <IsSymDelLen> to return the # {del}s encountered in the symbol.


Build #2094 -- Version 0.6.0.xx
-------------------------------

* Handle CR,LF As Not Continuing To The Next Line
* Use CR,LF Instead Of CR In Error Messages

Directory branches/bsmith/NanTypes:

DISPLAY.C:
  Handle CR,LF as not continuing to the next line.

ERRMSG.C:
  Use CR,LF instead of CR in Error Messages.


Build #2092 -- Version 0.6.0.xx
-------------------------------

* Fix Bug When Assigning System Function To A Name

Directory branches/bsmith/NanTypes:

ASSIGN.C:
SYMTAB.C:
  Fix Bug when assigning a System Function to a name.


Build #2090 -- Version 0.6.0.xx
-------------------------------

* Use Line Continuations In Output For Wrapped Lines

Directory branches/bsmith/NanTypes:

DISPLAY.C:
PF_DTACKJOT.C:
  Use Line Continuations in output to better distinguish wrapped lines.


Build #2088 -- Version 0.6.0.xx
-------------------------------

* Preserve Visual Fidelity When Mixing CRs, LFs, And BSs In Character Output, Part 3

Directory branches/bsmith/NanTypes:

SC_LIB.C:
  Fix bug when displaying the result of )LIB.


Build #2086 -- Version 0.6.0.xx
-------------------------------

* Preserve Visual Fidelity When Mixing CRs, LFs, And BSs In Character Output, Part 2

Directory branches/bsmith/NanTypes:

SC_FNOV.C:
  Fix bug when displaying the result of )FNS, )VARS, etc.


Build #2084 -- Version 0.6.0.xx
-------------------------------

* Preserve Visual Fidelity When Mixing CRs, LFs, And BSs In Character Output

Directory branches/bsmith/NanTypes:

DISPLAY.C:
SC_FNOV.C:
SESSMAN.C:
  Preserve Visual Fidelity when mixing CRs, LFs, and BSs in character output.


Build #2082 -- Version 0.6.0.xx
-------------------------------

* Rename <FcnCurry> To <OpLCurry> To Parallel The Name <OpRCurry>

Directory branches/bsmith/NanTypes:

FREE.C:
PARSELINE.C:
PL_PARSE.H:
STRAND.C:
YYFNS.C:
  Rename <FcnCurry> to <OpLCurry> to parallel the name <OpRCurry>.


Build #2080 -- Version 0.6.0.xx
-------------------------------

* Fix Bug In )BOX ON
* Note Minimum OS Version is Win7

Directory branches/bsmith/NanTypes:

DISPLAY.C:
  Fix bug in )BOX ON when displaying an array to include check for NoDisplay flag.

MAIN.C:
MAKEFILE.INC:
  Note that the minimum OS version is Win7.


Directory branches/bsmith/NanTypes/htdocs:

INDEX-BODY.AHTML:
  Note that the minimum OS version is Win7.


Build #2078 -- Version 0.6.0.xx
-------------------------------

* Implement Workspace Features To Allow Multiple Features And Non-Downward Compatible Features To Co-exist

Directory branches/bsmith/NanTypes:

ASSIGN.C:
EXECDFN.C:
  Rename<TranslateDfnToNameType> to <TranslateDfnTypeToNameType> to be more consistent with other function names in <translate.c>.

EXTERNS.H:
  Define section on Workspace Feature Values.

HEADERS.H:
  Copy <#include "workspace.h"> from <pertab.h> to #define certain names used in <externs.h>.

MAIN.RC:
  Lengthen the "About" dialog box to accommodate the list of workspace features supported by this version.

PERTAB.H:
  Surround <#include "workspace.h"> with #define/#undef so it #defines the structures, too.

PRIMFNS.C:
  Define function <IsTknFcnOprVar> like <IsTknFcnOpr> but including Vars.
  In <RoundUpBitsInArray>, round up Bits to a byte boundary instead of DWORD.
  Take the last change into account in <CalcArraySize>.
  In <IsTknnamed>, change the status of DEL and DELDEL to FALSE.
  Define function <IsTknDel> like <IsSymDel>, but for tokens.

SC_BOX.C:
  Fix minor display bug in )BOX which mistakenly inserts an extra line after the command.

SC_COPY.C:
  Before )COPYing, check to see that the source ws doesn't have unsupported features.

SC_LOAD.C:
  Before )LOADing, check to see that the source ws doesn't have unsupported features.

SC_SAVE.C:
  While )SAVEing a workspace, check for features that old interpreters might choke on and put a notice into the saved workspace.

TRANSLATE.C:
  Rename<TranslateDfnToNameType> to <TranslateDfnTypeToNameType> to be more consistent with other function names in <translate.c>.
  In <TranslateNameTypeToImmType>, allow niladic function name type.
  In <TranslateFcnOprToStr>, ensure the result is properly terminated

VER.C:
  In the "About" dialog box, display the Workspace Features this version supports.

WORKSPACE.H:
  #define keynames and feature names for Workspace Features.


Build #2076 -- Version 0.6.0.xx
-------------------------------

* Fix Bug With UDFO Multiple Names In Result List That Are All NoValue

Directory branches/bsmith/NanTypes:

EXCEDFN.C:
  In <ExecuteFunction_EM_YY> and <CheckDfnExitError_EM> when testing the multiple names in the Result List, allow all names to be NoValue.


Build #2074 -- Version 0.6.0.xx
-------------------------------

* Fix Bug In Up/Down Arrow Prototype In Certain Cases

Directory branches/bsmith/NanTypes:

PF_DARROW.C:
PF_UARROW.C:
  Fix bug in the "Arrows" when the result is Empty Nested but the right arg is Not Empty in which case the code mistakenly returns the right arg as the prototype instead of the "Type" of the right arg.


Build #2072 -- Version 0.6.0.xx
-------------------------------

* Implement APL2 Vector Notation W.R.T. Right Operands

Directory branches/bsmith/NanTypes:

DATATYPE.H:
  Define bit field in Array Header for a Split Numeric Strand.

FREE.C:
  Define function to free curried objects only.
  In <FreeResultGlobalVarSub>, test for Split Numeric and free it again.

PARSELINE.C:
  While Parsing and just before Reducing, check for the need to split a strand as a right operand.
  When an error occurs during Parsing, ensure the curried arguments of the Current Object are freed.
  Define routines to Split Numeric Strands.


Build #2070 -- Version 0.6.0.xx
-------------------------------

* Implement )BOX

Directory branches/bsmith/NanTypes:

COMPRO.H:
  Include new file.

DISPLAY.C:
  Make sensitive to )BOX state.
  Use common exit point.

ENUMS.H:
  Define new ENUM for )BOX.

EXTERNS.H:
  Define )BOX vars.

MAKEFILE.INC:
MAKEFILE.SRC:
NARS2000.VCXPROJ:
NARS2000.VCXPROJ.FILTERS:
  Include new file.

SC_BOX.C:
  Implement )BOX.

SYSCMDS.C:
  Include )BOX in the table of system commands.


Directory branches/bsmith/NanTypes/Mediawiki/extensions:

B2A.INC.PHP:
  Define more aliases for keystrokes.


Build #2068 -- Version 0.6.0.xx
-------------------------------

* Define More )DEBUG Commands

Directory branches/bsmith/NanTypes:

EXTERNS.H:
  Define <bDebugFHLex> and <bDebugPNLex> as )DEBUG commands.

FH_PARSE.Y:
  Allow <bDebugFHlex> to control DEBUGging of FH Lexical Analysis.

PN_PARSE.Y:
  Allow <bDebugPNLex> to control DEBUGging of PN Lexical Analysis.

SC_DEBUG.C:
  Define )DEBUG PNLex=n and )DEBUG FHLex=n as new DEBUG commands.


Build #2066 -- Version 0.6.0.xx
-------------------------------

* Allow {jotdot} As A Monadic Operator Including Assignment
* Rename Various Syntax Objects For Later Consistency With Hyperators
* Rename <INDEX_OPxxx> To <UTF16_OPxxx> As They Are Not Indices Into A Table

Directory branches/bsmith/NanTypes:

ASSIGN.C:
  Allow {jotdot} as a monadic operator including assignment.

DISPDBG.C:
  Define helper function to strcpyW and skip to the end of the destination.
  Change <TranslateFcnOprToChar> to <TranslateFcnOprToStr>.

EXECFNS.C:
  Rename <INDEX_OPxxx> to <UTF16_OPxxx> as they are not indices into a table.
  In <ExecOp1_EM_YY>, handle <UTF16_JOTDOT>.

INITDATA.C:
  Rename <INDEX_OPxxx> to <UTF16_OPxxx> as they are not indices into a table.

PARSELINE.C:
PARSELINE.H:
  Rename various Syntax Objects for later consistency with Hyperators.
  Define alias for SP_JD -- {is}{jotdot}.
  Rename <INDEX_OPxxx> to <UTF16_OPxxx> as they are not indices into a table.

PO_JOTDOT.C:
  Rename <INDEX_OPxxx> to <UTF16_OPxxx> as they are not indices into a table.

PO_SLASH.C:
  Rename <INDEX_OPxxx> to <UTF16_OPxxx> as they are not indices into a table.
  Simplify test for SLASHBAR.

PO_SLOPE.C:
  Rename <INDEX_OPxxx> to <UTF16_OPxxx> as they are not indices into a table.

QF_CR.C:
  Handle []CR of a name whose value is {jotdot}.

SC_LOAD.C:
  For Immediate functions, ensure the Value bit is set.

SC_SAVE.C:
  For Immediate functions, skip TranslateXXX as the ConvertXXX function handles that.

STRAND.C:
TOKENIZE.C:
  Rename <INDEX_OPxxx> to <UTF16_OPxxx> as they are not indices into a table.

SYMBOLNAMES.H:
  Include {jotdot} in the last of translatable symbol names.

SYMTRANS.C:
  Rename <INDEX_OPxxx> to <UTF16_OPxxx> as they are not indices into a table.
  Define new translate function <varOprTrans> specifically for <varOprTab>.

SYNOBJ.H:
  Rename various Syntax Objects for later consistency with Hyperators.

TRANSLATE.C:
  Rename various Syntax Objects for later consistency with Hyperators.
  Change <TranslateFcnOprToChar> to <TranslateFcnOprToStr>.
  Rename <INDEX_OPxxx> to <UTF16_OPxxx> as they are not indices into a table.
  In <TranslateFcnOprToStr>, handle {jotdot}.

UNICODE.H:
  Separate the table index conflicts from the special functions.
  Rename <INDEX_OPxxx> to <UTF16_OPxxx> as they are not indices into a table.
  Improve comments.

YYFNS.C:
  Rename <INDEX_OPxxx> to <UTF16_OPxxx> as they are not indices into a table.


Build #2064 -- Version 0.6.0.xx
-------------------------------

* Fix Bug With ?{infinity} For Both Multiple Precision Numbers

Directory branches/bsmith/NanTypes:

PF_QUERY.C:
  In both <PrimFnMonQueryRisR> and <PrimFnMonQueryVisV>, check for {infinity} and signal a DOMAIN ERROR if found.


Build #2062 -- Version 0.6.0.xx
-------------------------------

* Fix Bug In 1 []AT on Operators As Function Arrays

Directory branches/bsmith/NanTypes:

QF_AT.C:
  In <AttributeValences>, handle Function Array Operators through a separate function.


Build #2060 -- Version 0.6.0.xx
-------------------------------

* Disallow Display Of MFO Local Names In )SINL

Directory branches/bsmith/NanTypes:

MACROS.H:
  Define macro to detect MFO Local names.

SC_SI.C:
  Allow )SINL to display a pendent MFO.
  Disallow display of MFO Local names in )SINL.


Build #2058 -- Version 0.6.0.xx
-------------------------------

* Fix Bug When Saving f{is}{quad}NL In Workspace

Directory branches/bsmith/NanTypes:

DISPDBG.C:
  Fix bug when creating f{is}'a'{jot}{quad}NL as f{is]a{jot}{quad}NL.

MACROS.H:
  Define macros to detect when a token is free-able.

PARSELINE.C:
  In <FreeStackTemps>, free the token if it is free-able even if not valid.

QF_CR.C:
  In <CopySteName>, handle Direct Functions.

SC_COPY.C:
  In IF/WHILE stmts always compare ptr against NULL and value against 0.
  In <DeleteGlobalLinks>, don't free Direct Functions.

SC_LOAD.C:
  Use WFCN instead of the literal function name.
  In <ParseSavedWsFcn_EM>, don't increment RefCnt and don't check the function signature if Direct Function.
  In <LoadWorkspaceGlobal_EM>, pass on the Direct Function flag from a Workspace Global to the actual workspace object.

SC_SAVE.C:
  In <SavedWsFormGlbFcn>, handle Direct Functions.
  In <SavedWsFormGlbVar>, check for NULL variable before referencing it.


Build #2056 -- Version 0.6.0.xx
-------------------------------

* Allow Hex Notation In )DEBUG Keywords

Directory branches/bsmith/NanTypes:

SC_DEBUG.C:
  Allow hex notation in )DEBUG keywords.


Build #2054 -- Version 0.6.0.xx
-------------------------------

* Fix Bugs In Syntax Analysis Of Trains With Variables

Directory branches/bsmith/NanTypes:

PARSELINE.C:
  Define aliases for routines to handle more Train syntax such as (F A F) A.

PARSELINE.H:
  Reformat the Binding Strengths and Reductions tables to be more readable.
  Define more Binding Strengths so as to handle more Train syntax.
  Define more pesudo-Reductions so as to handle more Train syntax.

STRAND.C:
  Back out of second parameter to <UnVarStrand>.

SYNOBJ.H:
  Reformat the Syntax Object Names table to be more readable.


Build #2052 -- Version 0.6.0.xx
-------------------------------

* Update Web Documentation

Directory branches/bsmith/NanTypes/htdocs:

CONTRIBUTORS-BODY.AHTML:
  Update year of publication for TAoCP, Vol 4A.

INDEX-BODY.AHTML:
  Update the minimum version of Windows we run on.


Build #2050 -- Version 0.6.0.xx
-------------------------------

* Fix Bug In Syntax for "(/\)A"

Directory branches/bsmith/NanTypes:

IDENTFNS.C:
  In <GetIdentityElement_EM>, pass original and prototype of right arg to the Identity Function.

INITDATA.C:
  Include in the <PrimFlags> table the Identity Function for dyadic slash function (Replicate).
  Include in the <PrimFlags> table the Identity Function for dyadic slash operator (N-wise Reduction).

PARSELINE.C:
  If <bDebugPLTrace>, display conversions from "HY" to "OP1" or "FN".
  At the end of PARSELINE_SCAN, test for "(/" and convert the "/" from "HY" to"FN".
  If <bDebugPLTrace>, at PARSELINE_VALUEERR and PARSELINE_SYNTERR display a TRACE message to mark those events.

PF_SLASH.C:
  Define the Identity Function for dyadic slash function (Replicate).

PO_SLASH.C:
  Define the Identity Function for dyadic slash operator (N-wise Reduction).

PRIMSPEC.C:
  For DEBUG purposes, distinguish between <MyGlobalLock000> and <MyGlobalLockInt>.


Build #2048 -- Version 0.6.0.xx
-------------------------------

* Sync With Version Control


Build #2046 -- Version 0.6.0.xx
-------------------------------

* Fix Bug When Pasting APL Chars

Directory branches/bsmith/NanTypes:

EDITFCN.C:
  When pasting APL chars, don't use GlobalSize as we can't rely on its value due to Windows rounding up to a 4- or 8-byte boundary.


Build #2044 -- Version 0.6.0.xx
-------------------------------

* Trap NULL Reductions As SYNTAX ERRORs

Directory branches/bsmith/NanTypes:

PARSELINE.C:
  Trap NULL reductions as SYNTAX ERRORs.


Build #2042 -- Version 0.6.0.xx
-------------------------------

* Rename MFO Locals To Avoid Conflict With User Variables

Directory branches/bsmith/NanTypes:

DEFINES.H:
MF_DIDTACK.H:
MF_DIJOT.H:
MF_DOMINO.H:
MF_DOT.H:
MF_DOTDOT.H:
MF_DSHOE.H:
MF_DYDSCAN.H:
MF_EPSUND.H:
MF_IOTA.H:
MF_IOTAUND.H:
MF_JOTDOT.H:
MF_LSHOEUND.H:
MF_MULTISET.H:
MF_QUADFMT.H:
MF_QUADJOT.H:
MF_QUADVR.H:
MF_ROS.H:
MF_SECTION.H:
MF_SHRIEK.H:
MF_SLOPE.H:
MF_SQUAD.H:
MF_USHOE.H:
MF_VARIANT.H:
PF_UTACKJOT.C:
TOKENIZE.C:
TOKENIZE.H:
  Rename MFO locals to avoid conflict with user variables.


Build #2040 -- Version 0.6.0.xx
-------------------------------

* Remove Dependency On VCOMP.LIB

Directory branches/bsmith/NanTypes:

MAKEFILE.INC:
  Remove dependency on VCOMP.LIB as we no longer require it.


Build #2038 -- Version 0.6.0.xx
-------------------------------

* DEBUG Attempt To Trap Text Cursor Problems

Directory branches/bsmith/NanTypes/WineHQ:

EDITCTRL.C:
LOCAL.H:
  DEBUG attempt to trap text cursor problems.


Build #2036 -- Version 0.6.0.xx
-------------------------------

* Fix Omission From Previous Build

Directory branches/bsmith/NanTypes:

PF_SLASH.C:
  In <PrimFnDydSlash_EM_YY/ARRAY_VFP>, accumulate in the axis length (omitted from previous build).


Build #2034 -- Version 0.6.0.xx
-------------------------------

* Handle -0 In More Cases

Directory branches/bsmith/NanTypes:

CR_PROC.C:
  When calling <mpq_QuadICValue> or <mpfr_QuadICValue>, pass the sign in case the result is FLT.

PF_COLONBAR.C:
  When calling <mpq_QuadICValue> or <mpfr_QuadICValue> , pass the sign in case the result is FLT.
  If a call to <mpq_QuadICValue> returns FALSE, convert the result to VFP.
  When dividing, if the imaginary parts are zero, treat as dividing by a single Real number.


Build #2032 -- Version 0.6.0.xx
-------------------------------

* TypeDemote Nested Scan Data

Directory branches/bsmith/NanTypes:

PO_SLOPE.C:
  TypeDemote intermediate results of nested Scans, but not so far as to an immediate.


Build #2030 -- Version 0.6.0.xx
-------------------------------

* Update Copyright Year
* Update Contributors And License Pages
* Update List Of Current Datatypes
* Move "Copy" Button In About Box

Directory branches/bsmith/NanTypes:

DEFINES.H:
  Update copyright year.

MAIN.RC:
  Update copyright year.
  Move "Copy" button in About box up so that it doesn't need to be moved again is more Verison #s are appended.
  Lengthen the About box to make room for more Version #s.

VER.C:
  Display more Version #s.


Directory branches/bsmith/NanTypes/htdocs:

CONTRIBUTORS-BODY.AHTML:
  Include more contributors.

FOOTER-MON.HTML:
FOOTER.HTML:
  Update copyright year.

INDEX-BODY.AHTML:
  Rename []DQ to []LR.
  Include Ball Arithmetic in the list of current datatypes.
  Fix error in links to Source Code.
  Update copyright year.

LICENSE-BODY.HTML:
  Indicate that the file is encoded in UTF-8.
  Update copyright year.
  Document more library license agreements.


Build #2028 -- Version 0.6.0.xx
-------------------------------

* Implement []DFT

Directory branches/bsmith/NanTypes:

COMPRO.H:
  Include prototype file.

MAKEFILE.INC:
  Include <mpfft*.*> files.
  Include <qf_dft.*> files.

MAKEFILE.SRC:
  Include <qf_dft.*> files.

NARS2000.VCXPROJ:
  Include <mpfft*.*> files.
  Include <qf_dft.*> files.

NARS2000.VCXPROJ.FILTERS:
  Include <qf_dft.*> files.

QF_DFT.C:
  New file to implement []DFT.

SYSVARS.C:
  Include []DFT in the table of System Functions.

WCOM.BAT:
  Include <mpfft*.*> files.


Build #2026 -- Version 0.6.0.xx
-------------------------------

* Allocate All Symbol Table Constants In A Single Global Hash And Symbol Table

Directory branches/bsmith/NanTypes:

DEFINES.H:
  Define GLB HshTab & SymTab constants.

EXCEPT.C:
  Change the declaration of the size parameter to <GuardAlloc> to <size_t>.

EXECMFN.C:
SAVEFCN.C:
SESSMAN.C:
  Pass the EPB value to <AllocHshTab> as they differ from GLB to others.
  Pass Boolean value to <AllocHshTab> & <AllocSymtab> to indicate whether or not to link the MEMVIRT_STR into a chain.

EXTERNS.H:
  Initialize the Boolean value that indicates whether the CSOs have been initialized.
  Define new enum for the GLB SymTab in MEMVIRTENUM.
  Change the declaration of the size parameters to <MEMVIRTSTR> to <size_t>.
  Define new table size globals which can be set via the command line.

GETFNS.C:
STARTADDR.H:
  Delete <GetSteXXXX> routines as they aren't used any more.

IDENTFNS.C:
PF_RSHOE.C:
PF_UARROW.C:
PO_SLASH.C:
PRIMFNS.C:
PRIMSPEC.C:
QF_NFNS.C:
SYSVARS.C:
TOKENIZE.C:
TYPEMOTE.C:
  Replace references to "->steXXX", for XXX in "One", "Blank", "NaN", etc. with "htsGLB.steXXX".

MAIN.C:
  In <InitInstance>, allocate the GLB HshTab and SymTab via <AllocHshTab> and <AllocSymTab>.
  In <ParseCommandLine>, allow <glbSymTabSize> and <glbHshTabSize>.
  Move all calls to <InitializeCriticalSection> to <AllocCSOs> and move the call to that routine to precede the call to <InitInstance>.
  Move all calls to <DeleteCriticalSection> to <DeleteCSOs> and call that routine from where the group of calls was.

SC_SYMB.C:
  Display the current value of the GLB HshTab & SymTab sizes from )SYMB.

SYMTAB.C:
  In <SymTabHTSLookupXXXX> use the GLB HshTab & SymTab if the caller doesn't specify.
  In <SymtabHTSAppendXXXX> ...
  Replace references to "->steXXX", for XXX in "One", "Blank", "NaN", etc. with "htsGLB.steXXX".
  Pass the EPB value to <AllocHshTab> as they differ from GLB to others.
  Pass Boolean value to <AllocHshTab> & <AllocSymtab> to indicate whether or not to link the MEMVIRT_STR into a chain.


Build #2024a -- Version 0.6.0.xx
--------------------------------

* Sync With Version Control


Build #2024 -- Version 0.6.0.xx
-------------------------------

* When calling <mpq_QuadICValue> or <mpfr_QuadICValue>, pass the sign in case the result is FLT.
* Fix Bug In Use Of <[mpfr|mpq]_QuadICValue> Where We May Double Initialize A Variable
* Define <arb_sub2> To Handle Special Case Of arb_sub (z, x, x) So That It Always Returns Zero
* Define <arb_log2> To Always Return {neg}{inf} When The Arg Is Zero.

Directory branches/bsmith/NanTypes:

PF_BAR.C:
  Fix bug in use of <[mpfr|mpq]_QuadICValue> where we may double initialize a variable.  The solution is never to return a value from these functions and always initialize the result inside the function.
  Define <arb_sub2> to handle special case of arb_sub (z, x, x) so that it always returns zero.

PF_CSTAR.C:
  Fix bug in use of <[mpfr|mpq]_QuadICValue> where we may double initialize a variable.  The solution is never to return a value from these functions and always initialize the result inside the function.
  Define <arb_log2> to always return {neg}{inf} when the arg is zero.

PF_DCARET.C:
PF_UCARET.C:
  Fix bug in the result of {floor}/{ceiling} on a Ball wider than one unit.
  Fix bug in use of <[mpfr|mpq]_QuadICValue> where we may double initialize a variable.  The solution is never to return a value from these functions and always initialize the result inside the function.

PF_PLUS.C:
PF_QDOT.C:
PF_TIMES.C:
  Fix bug in use of <[mpfr|mpq]_QuadICValue> where we may double initialize a variable.  The solution is never to return a value from these functions and always initialize the result inside the function.

PF_ROOT.C:
  Replace <arf_nan> with <arb_set_nan> so as to set both Midpoint and Radius.
  Fix bug in use of <[mpfr|mpq]_QuadICValue> where we may double initialize a variable.  The solution is never to return a value from these functions and always initialize the result inside the function.


Build #2022 -- Version 0.6.0.xx
-------------------------------

* Set []CT To Zero In Factorial Magic Function

Directory branches/bsmith/NanTypes:

MF_SHRIEK.H:
  Set []CT to zero in Factorial magic function so as to reduce the number of non-distinct cases until I can handle Jordan Canonical Form.


Build #2020 -- Version 0.6.0.xx
-------------------------------

* Swap Alt-'\' and Alt-'|' Keys To Reflect Actual Keyboard
* Define Alt-'B' as DownTackOverbar

Directory branches/bsmith/NanTypes/Extensions/aplchars:

INSTALL.RDF:
UPDATE.RDF:
  Update version #.


Directory branches/bsmith/NanTypes/Extensions/aplchars/chrome/content/aplchars:

ABOUT.XUL:
  Update version #.

EDITOROVERLAY.JS:
  Define Alt-'B' as DownTackOverbar (U+2351).
  Swap Alt-'\' and Alt-'|' to reflect the actual keyboard.


Build #2016 -- Version 0.6.0.xx
-------------------------------

* Fix Bug In MemberOf When Comparing Certain Non-Simple Items

Directory branches/bsmith/NanTypes/htdocs/download:

CONVERT.C:
  Collapse <hc[248][ifrv]_cmp> into calls to <hcX[ifrv]_cmp>.
  In <hcXf_cmp>, handle non-finite numbers specially.

PF_EPSILON.C:
  In <PrimFnDydEpsilonOther_EM> re-order the tests so as to pick up simple/global numerics first.

PF_EQUALUND.C:
  Fix bug in <PrimFnDydEqualUnderbarNested> where, under certain circumstances, only the first item is tested.

PO_DOT.C:
PO_JOTDOT.C:
PO_SLASH.C:
  Include additional argument to both <PrimFnDydSiScSiSc_EM> and <PrimFnDydSiScSiScSub_EM> so as to skip freeing the result as appropriate.

PRIMSPEC.C:
  Include additional argument to both <PrimFnDydSiScSiSc_EM> and <PrimFnDydSiScSiScSub_EM> so as to skip freeing the result as appropriate.
  In <AllocateSpaceGlbNum_LOCK>, avoid clobbering the result global memory handle if it is nested.


Build #2014 -- Version 0.6.0.xx
-------------------------------

* Update Download Page For Workspaces And Alpha Version

Directory branches/bsmith/NanTypes/htdocs/download:

DOWNLOAD-BODY.PHP:
DOWNLOAD-LEFT.HTML:
  Update download page for Alpha version now contains Ball Arithmetic, and new section on Workspaces.


Build #2012 -- Version 0.6.0.xx
-------------------------------

* Fix A Bug Where A Type Promotion Can Crash Because We're Freeing An Incomplete Var

Directory branches/bsmith/NanTypes:

PRIMSPEC.C:
  In <PrimFnDydSiScSiScSub_EM>, if a type promotion occurs, free the result as an incomplete var.


Build #2010 -- Version 0.6.0.xx
-------------------------------

* When Converting FLT to INT, Mark NaNs As Non-Integral

Directory branches/bsmith/NanTypes:

CONVERT.C:
  In <FloatToAplint_CT>, handle NaNs as non-integral.
  In <FloatTpAplint_SCT>, pass through to <FloatToAplint_CT>.


Build #2008 -- Version 0.6.0.xx
-------------------------------

* Handle -0 In More Cases

Directory branches/bsmith/NanTypes:

CR_PROC.C:
  When calling <mpq_QuadICValue> or <mpfr_QuadICValue>, pass the sign in case the result is FLT.

MPFNS.C:
  In <mpq_QuadICValue>, improve comments.
  In <mpq_QuadICValue>, return Boolean value in case the result should be -0 but MPIR doesn't support that representation.

MPIFNS.C:
  In <mpiq_div>, signal RESULT_VFP if the signs are different.

PF_COLONBAR.C:
  When calling <mpq_QuadICValue> or <mpfr_QuadICValue> , pass the sign in case the result is FLT.
  If a call to <mpq_QuadICValue> returns FALSE, convert the result to VFP.
  When dividing, if the imaginary parts are zero, treat as dividing by a single Real number.

TRANSLATE.C:
  In <TranslateQuadICValue>, handle -0 if allowed.


Build #2006 -- Version 0.6.0.xx
-------------------------------

* In <GetIdentityElement_EM>, Signal DOMAIN ERROR If No Identity Element

Directory branches/bsmith/NanTypes:

IDENTFNS.C:
  In <GetIdentityElement_EM>, change NONCE to DOMAIN error.


Build #2004 -- Version 0.6.0.xx
-------------------------------

* Implement Missing Syntax NAM F {is} NF

Directory branches/bsmith/NanTypes:

PARSELINE.C:
PARSELINE.H:
  Implement missing syntax NAM F {is} NF.
  Use WFCN instead of the literal function name.


Build #2002 -- Version 0.6.0.xx
-------------------------------

* Handle NaNs The Same as Signed Infinities As Requiring FLT Result

Directory branches/bsmith/NanTypes:

PF_USTILE.C:
  Improve comments.
  In <PrimFnMonUpStileIisF>, handle NaNs along with the signed Infinities as requiring a FLT result.

TYPEMOTE.C:
  In <TypeDemote>, handle NaNs along with the signed Infinities as requiring a FLT result.


Build #2000 -- Version 0.6.0.xx
-------------------------------

* Allow Accented Chars In []EX, )ERASE, etc.

Directory branches/bsmith/NanTypes:

DEFINES.H:
  Surround the #include "defines.h" with #ifndef NOQUADA/#endif to avoid problems with the Resource Compiler.
  Split out the accented alphabets into separate #defines.

MAIN.RC:
VER.RC:
  Surround the #include "defines.h" with #ifndef NOQUADA/#endif to avoid problems with the Resource Compiler.

QF_A.C:
  Improve comments.

QF_NC.C:
  ASlow accented chars in []EX, )ERASE, etc.

SYSVARS.C:
  Split out the accented alphabets into separate #defines.


Build #1998 -- Version 0.6.0.xx
-------------------------------

* Define Identity Elements For Left/Right Tack Functions

Directory branches/bsmith/NanTypes:

INITDATA.C:
PF_LTACK.C:
PF_RTACK.C:
  Define identity elements for Left/Right Tack functions.


Build #1996 -- Version 0.6.0.xx
-------------------------------

* Full Support For NaNs, Remove From []FEATURE

Directory branches/bsmith/NanTypes:

EXTERNS.H:
MACROS.H:
PF_CIRCLE.C:
PF_CIRCLE.MAC:
PF_DOMINO.C:
PF_STAR.C:
PRIMSPEC.C:
  Full support for NaNs, remove from []FEATURE.


Build #1994 -- Version 0.6.0.xx
-------------------------------

* Fix Bug In Epsilon On Non-Simple Datatypes

Directory branches/bsmith/NanTypes:

PF_EPSILON.C:
  Fix bug in Epsilon function on non-simple datatypes.


Build #1992 -- Version 0.6.0.xx
-------------------------------

* Implement Variant For Grade Functions To Grade All Arrays

Directory branches/bsmith/NanTypes:

PO_VARIANT.C:
PO_VARIANT.H:
  Implement a Variant of the Grade functions to grade all arrays.
  Improve comments.


Build #1990 -- Version 0.6.0.xx
-------------------------------

* In <TypeDemote> Compress Multiple Calls To <MakeGlbEntry_EM> To One

Directory branches/bsmith/NanTypes:

TYPEMOTE.C:
  In <TypeDemote> compress multiple calls to <MakeGlbEntry_EM> to one.


Build #1988 -- Version 0.6.0.xx
-------------------------------

* Fix Bug In {jot}{QuadJot} Not Handling Nested Scalars

Directory branches/bsmith/NanTypes:

DATATYPE.H:
  Improve documentation.

GETFNS.C:
  Delete unused function <GetNextVfpMem>.
  Improve comments.
  Implement function <GetNextQword>
  In <GetPrimFlagsPtr>, handle the token <TKT_FILLJOT>.

HC_PROC.H:
  Define translate table <aToSimpleAPA> just like <aToSimple> except APA -> APA.

PO_QUADJOT.C:
  Fix bug in {jot}{QuadJot} not handling nested scalars.
  Fix bug in {jot}{QuadJot} not copying HCxR and HCxV CHO numbers.
  Improve comments.


Build #1986 -- Version 0.6.0.xx
-------------------------------

* Recode Unique in C Instead Of Using A Magic Function
* Fix Bug In <IndexOf> With HC2F Values Near To Each Other, But In An Unusual Order.
* Fix Bug In <IndexOf> With HETERO/NESTED v. non-HETERO/NESTED.

Directory branches/bsmith/NanTypes:

EXECMFN.C:
EXECMFN.H:
MF_DSHOE.H:
  Remove Magic Function for Monadic DownShoe (Unique).

PF_DSHOE.C:
  In IF/WHILE stmts always compare ptr against NULL and value against 0.
  Recode Unique in C instead of using a Magic Function.

PF_IOTA.C:
  Define function <PrimFnDydIotaCom> to control whether or not <IndexOf> demotes its result.
  Fix bug in <IndexOf> with HC2F values near to each other, but in an unusual order.
  Fix bug in <IndexOf> with HETERO/NESTED v. non-HETERO/NESTED.


Build #1984 -- Version 0.6.0.xx
-------------------------------

* Fix Bug In Each/JotDot Operators Returning All NoDisplay Results

Directory branches/bsmith/NanTypes:

PO_DIERESIS.C:
PO_JOTDOT.C:
  Fix bug in Each/JotDot Operators returning all NoDisplay results but not marking its result as NoDisplay.


Build #1982 -- Version 0.6.0.xx
-------------------------------

* Fix Bug In Modulus Wth Negative Left Argument

Directory branches/bsmith/NanTypes:

PF_STILE.C:
  Fix bug in Modulus with negative left argument -- the result should be negative!

PF_STILE.MAC:
  Include file with INTERMOD_xxx macros.


Build #1980 -- Version 0.6.0.xx
-------------------------------

* Fix Bug In {floor}{NaN}

Directory branches/bsmith/NanTypes:

PF_DSTILE.C:
  Fix bug in {floor}{NaN}.


Build #1978 -- Version 0.6.0.xx
-------------------------------

* Fix DEBUG Bug When Calling <PrimFnDelStile_EM_YY>

Directory branches/bsmith/NanTypes:

PF_DELTASTILE.C:
  Fix DEBUG bug when calling <PrimFnDelStile_EM_YY>.


Build #1976 -- Version 0.6.0.xx
-------------------------------

* Fix Bug In -1 and -2 {Circle} {NaN}i0

Directory branches/bsmith/NanTypes:

FPCHO_COM.C:
MPCHO_COM.C:
  Fix bug in -1 and -2 {circle} {NaN}i0.


Build #1974 -- Version 0.6.0.xx
-------------------------------

* Fix Bug When Re-using a Global Numeric In A Loop

Directory branches/bsmith/NanTypes:

PRIMSPEC.C:
  Fix bug wen re-using a Global Numeric in a loop.  After freeing the GN, zero it so the next call to MyXXX_init won't fail.


Build #1972 -- Version 0.6.0.xx
-------------------------------

* Recode Macros As Functions

Directory branches/bsmith/NanTypes:

PF_STAR.C:
  Recode the macros from <pf_star.mac> as separate functions.

PF_STAR.MAC:
  Delete this file as its macros are recoded in <pf_star.c>.


Build #1970 -- Version 0.6.0.xx
-------------------------------

* Define DEBUG Functions To Display Common Datatypes

Directory branches/bsmith/NanTypes:

MPFNS.C:
  Define <VfpOut>, <RatOut>, and <FltOut> as helper function to display common datatypes.


Build #1968 -- Version 0.6.0.xx
-------------------------------

* Fix Bug In Axis Operator With 1+[1 1] 2 3
* Fix Bug In Axis Operator With Named Var With No Value

Directory branches/bsmith/NanTypes:

AXISFNS.C:
  Fix bug in Axis Operator with 1+[1 1] 2 3 which overwrites a memory boundary
    when calculating the axis tail starting point.

STRAND.C:
  In <MakeAxis_EM_YY>, handle the case where the named var has no value.


Build #1918 -- Version 0.6.0.xx
-------------------------------

* Implement Ball Arithmetic

Directory branches/bsmith/NanTypes:


VER.RC:
  Increment version # to 0.6.0.xx.
