Version 0.6.2.xx consists of the following Builds:


Build #2340 -- Version 0.6.2.xx
-------------------------------

* Fix Bug In Previous Build Leaving In Spurious Statement

Directory branches/bsmith/NanTypes:

DISPDBG.C:
  Fix bug in <DisplayFcnSub> where a statement meant to be replaced was left in.


Build #2338 -- Version 0.6.2.xx
-------------------------------

* Fix Bug When Displaying A Right Operand Unnamed Multi-element Numeric Vector

Directory branches/bsmith/NanTypes:

DISPDBG.C:
  When displaying a right operand which is an unnamed multi-element numeric vector,
    surround it with parens.

PRIMFNS.C:
  Define function to detect unnamed multi-element numeric vectors.


Build #2336 -- Version 0.6.2.xx
-------------------------------

* Fix Bug When Initializing An Operand As A Function Array Or UDFO
* Fix Bug When Creating a Dyadic Prototype Not Handling Global Numerics
* Fix Bug When Calling Scalar Functions On Nested Args Whose Elements Are Empty
* Fix Bug When Saving A Function In Memory Always Create The AFO Text
* Fix Bug When Saving A Function From )LOAD Pass On The Function Name

Directory branches/bsmith/NanTypes:

EXECDFN.C:
  In <InitFcnSTEs>, if the Function Count is > 1, split out Unnamed UDFOs so as to run them
    through <CopyUDFO>.

PRIMFNS.C:
  In <TokenTypeFV>, handle <TKT_SYS_NS> instead of as an error.
  In <MakeDydPrototype_EM_PTB>, if neither arg is immediate, as we loop through the
    elements of the result, test for Simple *or Global Numeric* instead of just Simple.

PRIMSPEC.C:
  In <PrimFnDydNestSiSc_EM> and <PrimFnDydSiScNest_EM> handle the case where
    the nested arg is empty so as to create the prototype.

SAVEFCN.C:
  In <SaveFunctionFE>, remove reference to Local Params as they are unused.
  Improve comments.
  In <SaveFunctionCom>, if called from <LoadWorkspace_EM>, fill in the function STE from the caller.
  In <SaveFunctionCom>, if called from <SysFnMonFX_EM_YY> and it's an AFO and the function
    name is valid, but <hGlbAfoTxt> is not filled in, do so.
  In <SaveFunctionCom>, if called from <CopyUDFO>, copy the old <hGlbAfoTxt> to the new UDFO.
  In <SaveFunctionCom>, if this is an AFO which needs surrounding braces, create and fill
    in the <hGlbAfoTxt> handle.

SAVEFCN.H:
  Rename <UDFO_LOAD> tyo <UDFO_LW> to be consistent with the other names.
  In <LW_PARAMS>, define a new member to point to the function name.

SC_LOAD.C:
  Rename <UDFO_LOAD> tyo <UDFO_LW> to be consistent with the other names.
  In <LW_PARAMS>, define a new member to point to the function name.

SC_SAVE.C:
  In <SavedWsFormGlbFcn>, if this is a UDFO, handle the case where the function name ptr is invalid.


Build #2334 -- Version 0.6.2.xx
-------------------------------

* Rename Function Editor-specific Functions To Include A Suffix Of 'FE'
* Use Local Parameter Struc For <MakeAfo> Instead Of One Shared With <LoadWorkspace>
* Remove References To <SF_NumPhyLines> As We Now Calculate That Value
* Rename Vars As Physical As Necessary For Better Documentation
* In Various Functions Make Clear The Distinction Between Physical And Logical
* Remove Vars For Physical Lines As They Are No Longer Needed
* Fix Bug In <CheckTermCodes> Where Leading Line Continuations Are Mishandled
* Fix Bug In MFO For Extended Dyadic Iota If The Left Arg Is A Scalar
* Improve The Probability Of A Result From ECM By Adjusting The Initial Conditions For Each Call
* Fix Bug in <ValidateFloat_EM> When <ValidateFloatTest> Fails
* Fix Bug When Trying To Name An Unnamed AFO

Directory branches/bsmith/NanTypes:

AFOFNS.C:
  Use local parameter struc for <MakeAfo> instead of one shared with <LoadWorkspace>.
  Remove references to <SF_NumPhyLines> as we now calculate that value.
  Duplicate the HGLOBAL string from the LeftBrace to the DFN_HEADER.
  Rename AFOLINE_STR members as Physical values and define a new member for Logical line #.

AFOFNS.H:
  Rename AFOLINE_STR members as Physical values and define a new member for Logical line #.

COMMON.C:
  Define function to duplicate a simple HGLOBAL handle.

DEFINES.H:
  Update the copyright years.
  Rename Function Editor-specific functions to include a suffix of 'FE'.

DISPDBG.C:
  When displaying tokens in DEBUG, display the function/operator character in the ouput if immediate.
  In <FillDfnName>, if the function name starts with a {del}, use the text in <hGlbAfoTxt> as the function name.

DISPLAY.C:
  Fix bug in <CheckTermCodes> where leading Line Continuations are mishandled.

EDITFCN.C:
  Rename Function Editor-specific functions to include a suffix of 'FE'.

EXECMFN.C:
  Remove vars for Physical Lines as they are no longer needed.
  Convert loop through a function's lines from Physical to Logical.

EXTERNS.H:
  Define DEBUG var for when saving a new Control Structure.

FH_PARSE.H:
  Remove vars for Physical Lines as they are no longer needed.
  Include new handle for AFO text.
  Rename Function Editor-specific functions to include a suffix of 'FE'.

FH_PARSE.Y:
  After calling <fh_yyparse>, display the resulting tokens if <bDebugFH> set.

FREE.C:
  In <FreeResultGlobalDfnStruc>, free <hGlbAfoTxt> if it was allocated.

IMMEXEC.C:
  Rename Function Editor-specific functions to include a suffix of 'FE'.

MAIN.RC:
  Update the copyright years.

MF_IOTA.H:
  Fix bug in MFO for Extended Dyadic Iota if the Left Arg is a scalar.

PARSELINE.C:
  Fix indentation to match the current level.

PF_PI.C:
  Improve the probability of a result from ECM by adjusting the initial conditions for each call.

QF_FX.C:
  Remove references to <SF_NumPhyLines> as we now calculate that value.
  Rename vars as Physical as necessary for better documentation.

QF_TF.C:
  Remove references to <SF_NumPhyLines> as we now calculate that value.

SAVEFCN.C:
  Rename Function Editor-specific functions to include a suffix of 'FE'.
  Remove references to <SF_NumPhyLines> as we now calculate that value.
  In <CopyUDFO> remove <NoCopy> flag is AFO as we now need an AFO to be copied.
  In various functions make clear the distinction between Physical and Logical.

SAVEFCN.H:
  Rename Function Editor-specific functions to include a suffix of 'FE'.
  Remove references to <SF_NumPhyLines> as we now calculate that value.

SC_DEBUG.C:
  Define DEBUG var for when saving a new Control Structure.

SC_INASCII.C:
SC_LOAD.C:
  Remove references to <SF_NumPhyLines> as we now calculate that value.

SC_SAVE.C:
  In <SavedWsFormGlbFcn>, ensure that <lpwszFcnName> is not NULL.
  Delete unused code.

SESSMAN.C:
  Rename Function Editor-specific functions to include a suffix of 'FE'.
  In various functions make clear the distinction between Physical and Logical.

STARTADDR.H:
  Rename Function Editor-specific functions to include a suffix of 'FE'.

SYSVARS.C:
  Fix bug in <ValidateFloat_EM> when <ValidateFloatTest> fails.

TABCTRL.C:
  Rename Function Editor-specific functions to include a suffix of 'FE'.

TOKENIZE.C:
  Rename Function Editor-specific functions to include a suffix of 'FE'.
  Fix bug when calculating the character index for <AppendNewToken> for <fnDirIdent> and <fnDelDone>.
  Fix bug when trying to name an unnamed AFO.
  In <fnGroupDoneSub>, if the function is an AFO (the grouping symbols are braces), save the text as an HGLOBAL in a new field in the Left Brace.
  In <Untokenize>, display the tokens we're freeing if <bDebugExecTrace> is set.
  In <Untokenize>, free the <hGlbAfoTxt> handle if it is allocated.
  In <AppendNewCSToken_EM>, display the token we're appending if <bDebugCSNew> is set.

TOKENS.H:
  In <TOKEN> define a new field to hold the HGLOBAL of the AFO text if it's a Left Brace.


Build #2332 -- Version 0.6.2.xx
-------------------------------

* Fix Bug In Wrapped Line Display

Directory branches/bsmith/NanTypes:

DISPLAY.C:
  Fix bug in wrapped line display where the first wrapped line may display part of the previous line.


Build #2330 -- Version 0.6.2.xx
-------------------------------

* Remove Vestiges Of UTF16_DELTA As UTF16_DERIV

Directory branches/bsmith/NanTypes:

AFOFNS.C:
QF_NC.C:
TOKENIZE.C:
  Remove vestiges of UTF16_DELTA as UTF16_DERIV.


Build #2328 -- Version 0.6.2.xx
-------------------------------

* Change GCD_CT Comparison Value To 1E-15
* Make RAT Comparisons Exact

Directory branches/bsmith/NanTypes:

DEFINES.H:
  Define RAT_EXACT so as to make RAT comparisons exact (not dependent on []CT).

SYSVARS.H:
  Change GCD_CT comparison value to 1E-15 so that more GCDs work as expected (still a bad idea).


Build #2326 -- Version 0.6.2.xx
-------------------------------

* Fix Bug In DEBUG Screen

Directory branches/bsmith/NanTypes:

DEBUG.C:
  When copying text from the DEBUG screen, do not append CR/LF as the line already ends with that.


Build #2324 -- Version 0.6.2.xx
-------------------------------

* Change The Default Range Limit For []CT To FALSE
* Update Contributors And License Agreement Text

Directory branches/bsmith/NanTypes:

CUSTOMIZE.C:
  Update the copyright year.

DEFINES.H:
  Change the default Range Limit for []CT to FALSE so that too large values (e.g., 1E-9) are caught.


Directory branches/bsmith/NanTypes/htdocs:

CONTRIBUTORS-BODY.AHTML:
  Include link to David M. Gay's DTOA code.
  Thank Laurent Fousse for the use of his CRQ software for integration.
  Thank Ishtaiq Rasool and Ryoji Ohba for the use of their differentiation algorithm.

LICENSE-BODY.HTML:
  Point to the license agreement of Laurent Fousse's CRQ software.


Build #2322 -- Version 0.6.2.xx
-------------------------------

* Use Separate Font For Displaying NaN in Customize Dialog
* Define New Checkbox To Control Whether Or Not The Ball Radius Controls The Precision Of The Midpoint

Directory branches/bsmith/NanTypes:

CUSTOMIZE.C:
  Use font "SImPL Medium" for displaying NaNs in []IC in customize dialog as that font has that character.
  Define new checkbox in "User Preferences" to control whether or not the Ball Radius controls the precision of the Midpoint.

DEFINES.H:
MAIN.RC:
RESOURCE.H:
  Define new checkbox in "User Preferences" to control whether or not the Ball Radius controls the precision of the Midpoint.


Build #2320 -- Version 0.6.2.xx
-------------------------------

* Implement -x In Command Line To )XLOAD The Initial Workspace

Directory branches/bsmith/NanTypes:

EXTERNS.H:
  Define global var to mark as )XLOAD of initial workspace.

MAIN.C:
  In <ParseCommandLine>, parse "-x" to )XLOAD the initial workspace.

PERTAB.H:
  Initialize <lpMemPTD->bExecLX>.

SC_LOAD.C:
SESSMAN.C:
  Pass <bExecLX> flag to <LoadWorkspace_EM>.


Build #2318 -- Version 0.6.2.xx
-------------------------------

* Move Common Typedefs To Common Header File

Directory branches/bsmith/NanTypes:

EXTERNS.H:
PO_DERIV.C:
PO_DERIV.H:
PO_DERIV_ARB.C:
PO_DERIV_FLT.C:
PO_DERIV_VFP.C:
  Move common Typedefs to common header file.


Build #2316 -- Version 0.6.2.xx
-------------------------------

* Move <math.h> From Individual Files To Global Header File

Directory branches/bsmith/NanTypes:

CONVERT.C:
DISPLAY.C:
DTOA.C:
EDITFCN.C:
FMTSPEC.C:
FPCHO_COM.C:
HC_PROC.C:
HEADERS.H:
INITDATA.C:
MPCHO_COM.C:
MPFNS.C:
MPIFNS.C:
PF_CIRCLE.C:
PF_CSTAR.C:
PF_DCARET.C:
PF_DOTDOT.C:
PF_DSTILE.C:
PF_LCARET.C:
PF_LCARETUND.C:
PF_QDOT.C:
PF_QUERY.C:
PF_RCARET.C:
PF_RCARETUND.C:
PF_RHO.C:
PF_ROOT.C:
PF_STAR.C:
PF_STILE.C:
PF_TIMES.C:
PF_UCARET.C:
PF_USTILE.C:
PF_UTACKJOT.C:
PN_PARSE.Y:
PN_PROC.C:
PRIMFNS.C:
QF_DC.C:
QF_FMT.C:
SORT.C:
STATUSBAR.C:
SYMTAB.C:
TOKENIZE.C:
TRANSLATE.C:
TYPEMOTE.C:
  Move <math.h> into <headers.h>

Directory msieve:

UTIL.H:
  Comment out #define _USE_MATH_DEFINES to avoid later conflict.


Build #2314 -- Version 0.6.2.xx
-------------------------------

* Fix Bug In Execute With Variant Operator And No Result

Directory branches/bsmith/NanTypes:

EXECMFN.C:
  Rename MFO_MonDotInit to MFO_AfoMfoInit so as to define Monadic Execute with Variant function.
  Define <InitHTS> and <DeleHTS> both extracted from <Init1MagicFunction> as separately callable.
  After calling <MFO_AfoMfoInit> set the HGLOBAL for that function info <lpMemPTD->hGlbMFO[]>.
  Remove initialization call for <MFO_MonExecute> as it is now initialized in <MFO_AfoMfoInit>.

EXECMFN.H:
  Rename MFO_MonDotInit to <MFO_AfoMfoInit> so as to define Monadic Execute with Variant function.

MF_DOT.H:
  Rename MFO_MonDotInit to <MFO_AfoMfoInit> so as to define Monadic Execute with Variant function.
  Initialize <MFO_MonExecute> from within <MFO_AfoMfoInit>.

MF_VARIANT.H:
   Delete the definition of <MFO_MonExecute> as it is now defined within <MFO_AfoMfoInit>.


Build #2312 -- Version 0.6.2.xx
-------------------------------

* Miscellaneous Changes

Directory branches/bsmith/NanTypes:

MAKEFILE.INC:
  Clean up the MAKEFILE.

PF_LSHOE.C:
  Improve comments.


Build #2310 -- Version 0.6.2.xx
-------------------------------

* Preliminary Support For Inverses, Part III

Directory branches/bsmith/NanTypes:

EXECMFN.C:
EXECMFN.H:
MF_DISTAR.H:
  Define magic functions for the inverses to -\ and {divide}\.

PO_DISTAR.C:
  Re-organize the inverse function code into a single routine.
  Call magic functions for the inverses to -\ and {divide}\.


Build #2308 -- Version 0.6.2.xx
-------------------------------

* Allow {zilde} In Axis Operator As Valid For Scalars

Directory branches/bsmith/NanTypes:

AXISFNS.C:
  In <CheckAxisGlb_EM>, allow {zilde} to mean first coordinate on scalars.


Build #2306 -- Version 0.6.2.xx
-------------------------------

* Preliminary Support For Inverses, Part II

Directory branches/bsmith/NanTypes:

PO_DISTAR.C:
  Implement more instances of Inverse Functions.


Build #2304 -- Version 0.6.2.xx
-------------------------------

* Test For Domain Error Earlier In Monadic Dot Operator

Directory branches/bsmith/NanTypes:

PO_DOT.C:
  In <PrimOpMonDotCommon_EM_YY>, test for DOMAIN eror earlier.


Build #2302 -- Version 0.6.2.xx
-------------------------------

* Reorganize PJDRed Inverse To Substitute For Left Argument Only If Absent
* Reorganize Inverse Function Code To Test For Rank Then Domain Errors
* Implement Default Left Argument Of Two To Inverse Base Value

Directory branches/bsmith/NanTypes:

MF_DISTAR.H:
  Reorganize +{jot}{divide}/ inverse to substitute for left argument only if it's absent.

PO_DISTAR.C:
  Reorganize inverse function code to test for Rank then Domain errors
  Implement default left argument of two to inverse Base Value.


Build #2300 -- Version 0.6.2.xx
-------------------------------

* Return Global Numeric Datatype From Identity Element

Directory branches/bsmith/NanTypes:

PO_SLASH.C:
  In <PrimOpMonSlashCommon_EM_YY> when calculating the Identity Element, if the right arg is Global Numeric, then so is the Identity Element.


Build #2298 -- Version 0.6.2.xx
-------------------------------

* Fix Bug In Identity Function For Compose Operator

Directory branches/bsmith/NanTypes:

MF_JOT.H:
  Fix bug in Identity Function for Compose missing Enclose/Disclose.

PO_JOT.C:
  Correct old comments copied from PO_DOT.C.


Build #2296 -- Version 0.6.2.xx
-------------------------------

* Implement Identity Function For Compose Operator

Directory branches/bsmith/NanTypes:

EXECMFN.C:
EXECMFN.H:
  Make room for a new Magic Function.

INITDATA.C:
  Include Jot in the table of Identity Functions.

MF_JOT.H:
  Define new Magic Function for Compose.

PO_JOT.C:
  Define new function to handle the Compose Identity Function.


Build #2294 -- Version 0.6.2.xx
-------------------------------

* Fix DEBUG Bug In Trains That Contain A Global Numeric

Directory branches/bsmith/NanTypes:

YYFNS.C:
  When DEBUGging, in <YYCopyFcnTrn>, fix bug in a Train with a Global Numeric.


Build #2292 -- Version 0.6.2.xx
-------------------------------

* Fix Bug In Base Value Function On Multicolumn Matrices

Directory branches/bsmith/NanTypes:

PF_UTACK.C:
  In <PrimFnDydUpTack_EM_YY>, fix bug on not re-initializing the accumulator between columns.


Build #2290 -- Version 0.6.2.xx
-------------------------------

* Fix DEBUG Bug In Maximum/Minimum On Chars

Directory branches/bsmith/NanTypes:

PF_DSTILE.C:
  When DEBUGging, fix a bug in Maximum/Minimum functions on chars.


Build #2288 -- Version 0.6.2.xx
-------------------------------

* Fix Bug In Error Caret When Splitting Strands

Directory branches/bsmith/NanTypes:

PARSELINE.C:
  In <SplitStrandLast> and <SplitStrandFirst>, ensure the error caret is specified.


Build #2286 -- Version 0.6.2.xx
-------------------------------

* Preliminary Support For Inverses

Directory branches/bsmith/NanTypes:

EXECMFN.C:
EXECMFN.H:
  Define new Magic Functions for InvPJDRed and InvBV.

MACROS.H:
  Define macros for detecting slash/slashbar.

MF_DISTAR.H:
  Define Magic Functions for InvPJDRed and InvBV.

PF_SLASH.C:
PF_SLOPE.C:
PO_JOT.C:
PO_SLASH.C:
PO_SLOPE.C:
  Use macro to detect slash/slashbar.

PO_DISTAR.C:
  Fix bug not initializing local var.
  Use macro to detect slash/slashbar.
  Call special function for inverses.

TOKENIZE.C:
  Fix bug placing the error caret.
  Use macro to detect slash/slashbar.


Build #2284 -- Version 0.6.2.xx
-------------------------------

* Fix Bug When Demoting Global Nested Array Character Scalars

Directory branches/bsmith/NanTypes:

TYPEMOTE.C:
  In <DemoteData> when demoting a Nested Array character scalar, handle both PTRTYPE_STCONST and PTRTYPE_HGLOBAL arrays.


Build #2282 -- Version 0.6.2.xx
-------------------------------

* Fix Unsigned Bug In Grade Of FLTs

Directory branches/bsmith/NanTypes:

PF_DELTASTILE.C:
  In <PrimFnGradeCompare>, fix bug of using Unsigned vars for calculations instead of signed vars.  This bug was introduced in Build #2273.


Build #2280 -- Version 0.6.2.xx
-------------------------------

* Fix Bug In AFOs Initializing SysVars Multiple Times

Directory branches/bsmith/NanTypes:

GETFNS.C:
  In <RestPrimSpecRL> if we reach an AFO stop passing []RL upwards.

SYMTAB.H:
  In <HSHTABSTR>, define a new bit to indicate whether or not SysVars have been initialized in the HshTab.

SYSVARS.C:
  In <CopySysVars>, initialize the SysVars only once.


Build #2278 -- Version 0.6.2.xx
-------------------------------

* Fix Bug In Point Notation When Mixing RATs & VFPs

Directory branches/bsmith/NanTypes:

PN_PROC.C:
  In <PN_MakeRatPoint> when changing the result from RAT to VFP, clear the bRatSep flag.
  In <PN_MakeHc2Point>, if the incoming storage type is VFP, don't process the result as a RAT.


Build #2276 -- Version 0.6.2.xx
-------------------------------

* Fix Bug When Assigning []FEATURE With {Zilde}

Directory branches/bsmith/NanTypes:

SYSVARS.C:
  In <ValidSetFEATURE_EM> when assigning {zilde} to []FEATURE, call <SetCurrentFeature> so as to set the values in lpMemPTD->aplCurrentFEATURE.


Build #2274 -- Version 0.6.2.xx
-------------------------------

* Define FEATURE Bit To Distinguish -0 And 0

Directory branches/bsmith/NanTypes:

COMMON.C:
  Define new functions to compare FLT/VFP against +0.

CONVERT.C:
  In <flt_cmp_ct>, distinguish between -0 and 0 if requested.

EXTERNS.H:
  Define new bit in []FEATURE to distinguish between -0 and 0.

FPCHO_COM.C:
  In <fpXf_scale>, handle {inf} x 0 differently from NaN x 0.

FPCHO_COM.MAC:
  In macro <fpXf_mag_imag8> handle non-finite case.

HC_PROC.C:
PF_DOMINO.C:
PN_PROC.C:
  Rename <Myhcxr_clewar> and <Myhcxv_clear> to be more consistent.

MACROS.H:
  Define macreos to test for NEG0_NE0.

MPFNS.C:
  In <mpfr_get_ctsx> handle {inf}{ as FALSE in result rather than longjmp.

PF_DELTASTILE.C:
  In <mpfr_cmp_ct>, distinguish between -0 and 0 if requested.

PF_ROOT.C:
  In <SqrtHCxF_RE>, remove redundant code.
  In <SqrtHCxV_RE>, fix memory leak.

PF_STAR.C:
  In <ExpHC2F_RE> and <ExpHC2V_RE> handle missing case.

TYPEMOTE.C:
  In <TypeDemote>, distinguish between -0 and 0 if requested.


Build #2272 -- Version 0.6.2.xx
-------------------------------

* Handle More Special Cases In Complex Exponential Function

Directory branches/bsmith/NanTypes:

PF_STAR.C:
  Handle more special cases in Exponential function for HC2F and HC2V.


Build #2270 -- Version 0.6.2.xx
-------------------------------

* Fix Bug In Equal Function When DOMAIN ERROR Occurs

Directory branches/bsmith/NanTypes:

PF_EQUAL.C:
  Fix bug in <EqualHCxRvHCxR> and <EqualHCxVvHCxV> when the Distance function signals a DOMAIN ERROR.


Build #2268 -- Version 0.6.2.xx
-------------------------------

* Implement Zeta Point Notation

Directory branches/bsmith/NanTypes:

PN_PARSE.Y:
  Define parsing code for Zeta Point Notation.

PN_PROC.C:
  Implement Zeta Point Notation.
  In <PN_MakeHc2Point>, allow a result of <CR_RESULT_NEG0> from <mpq_init_set_str2>.

REBAR.C:
  Document in Zeta Point Notation Language Bar.

TOKENIZE.C:
  Include 'z' in Point Notation Syntax Coloring.

UNICODE.H:
  Define Unicode Code point for Zeta.


Directory branches/bsmith/NanTypes/MediaWiki/extensions:

RENDERAPL.PHP:
  Implement Zeta Point Notation.


Build #2266 -- Version 0.6.2.xx
-------------------------------

* Miscellaneous Changes

Directory branches/bsmith/NanTypes:

PO_COMB.C:
  In <PrimOpMonCombinatorial_EM_YY>, simplify setting of valid state of # Balls & Boxes.

PO_DERIV.C:
  Fix erroneous comment in <PrimOpDerivNewCentral_EM_YY>.

QF_AT.C:
  In IF/WHILE stmts always compare ptr against NULL and value against 0.

TOKENIZE.C:
  Comment out DEBUG statements which need to be re-evaluated to improve them.  At the moment, they are just unhelpful noise.


Build #2264 -- Version 0.6.2.xx
-------------------------------

* Fix Bug When Parsing BasePoint Notation

Directory branches/bsmith/NanTypes:

PN_PARSE.H:
PN_PARSE.Y:
PN_PROC.C:
  Fix bug when parsing BasePoint Notation as it can be confused with Complex Angle Notation.


Build #2262 -- Version 0.6.2.xx
-------------------------------

* Fix Bug When Displaying An Empty Matrix Or Higher Rank Array

Directory branches/bsmith/NanTypes:

PF_DTACKJOT.C:
  In <FormatArrSimple>, check for empty matrix or higher rank array and do not display an empty line.


Build #2260 -- Version 0.6.2.xx
-------------------------------

* Allow The DotDot Function To Be Interrupted

Directory branches/bsmith/NanTypes:

PF_DOTDOT.C:
  In various places, check for Ctrl-Break.


Build #2258 -- Version 0.6.2.xx
-------------------------------

* Fix Bug In Magic Function For Pochhammer Symbol

Directory branches/bsmith/NanTypes:

MF_VARIANT.H:
  Fix bug in Magic Function for Pochhammer symbol.


Build #2256 -- Version 0.6.2.xx
-------------------------------

* Handle One Or More {del}s As A Name

Directory branches/bsmith/NanTypes:

HEADERS.H:
  Include <nameclass.h> as a global header file instead of local to just a couple of functions.

NAMECLASS.H:
  For future use, define <NAMECLASS_SYSOPR>.
  Noter dependency if this enum is changed.

QF_NC.C:
  Remove <nameclass.h> from a local #include as it is now global.
  Fix missing #if/#endif in <IsValid1stCharInName>.
  For future use, define <NAMECLASS_SYSOPR>.
  In <CalcNameClass>. handle one or more {del}s as a name and figure out the proper name class.

QF_NL.C:
  Remove <nameclass.h> from a local #include as it is now global.
  For future use, define <NAMECLASS_SYSOPR>.

TRANSLATE.C:
  Define new function <TranslateNameTypeToNameClass> to help with determining the name class of a name consisting of one or more {del}s.


Build #2254 -- Version 0.6.2.xx
-------------------------------

* Fix A RefCnt Bug When Splitting A Two-Element Global Numeric Strand

Directory branches/bsmith/NanTypes:

DISPDBG.C:
  Define helper DEBUG function <DispVarName>.

PARSELINE.C:
  When encountering a VALUE ERROR, use <DispVarName> to display the var's name for debugging purposes.
  After <PARSELINE_DONE:>, handle SOS as the next token.
  In both <SplitStrandFirst> and <SplitStrandLast>, fix a RefCnt bug when the part remaining after
    splitting is a Global Numeric singleton.


Build #2252 -- Version 0.6.2.xx
-------------------------------

* Fix Bug In )SAVE Of Ball Arithmetic Workspace

Directory branches/bsmith/NanTypes:

SC_SAVE.C:
  Delete extra code mistakenly not deleted in an earlier merge.


Build #2250 -- Version 0.6.2.xx
-------------------------------

* Include {deriv} in Symbol Names Table So It Appears In A Workspace That Way Instead Of As A Hex Constant

Directory branches/bsmith/NanTypes:

SYMBOLNAMES.H:
  Include <UTF16_DERIV> in the table so it appears in a workspace as {deriv} instead of {\x2202}.


Build #2248 -- Version 0.6.2.xx
-------------------------------

* Fix Random Bug With 1 & 2 []DR when A Uninitialized Stack Variable Is Mistakenly Used

Directory branches/bsmith/NanTypes:

QF_DR.C:
  In IF/WHILE stmts always compare ptr against NULL and value against 0.
  The above change actually fixes a bug where I use <lpMemRht> instead of <lpMemHdrRht>.


Build #2246 -- Version 0.6.2.xx
-------------------------------

* Cleanup Code When Displaying CR/CR/LF

Directory branches/bsmith/NanTypes:

DEFINES.H:
  Define WS_CRCR for use in <CheckTermCodes> in <display.c>.

DISPLAY.C:
  In <CheckTermCodes>, handle CR/CR/LF by inserting CR/CR and then falling through to the following WC_LF code.


Build #2244 -- Version 0.6.2.xx
-------------------------------

* Fix Bug In  1 []CR With Multiline AFOs

Directory branches/bsmith/NanTypes:

QF_CR.C:
  Fix bug in 1 []CR with multiline AFOs.  This time, handle all the lines by using the UDFO code.


Build #2242 -- Version 0.6.2.xx
-------------------------------

* Document Combinatorial Operator Internal Values

Directory branches/bsmith/NanTypes:

EXTERNS.H:
  Define ENUMs for Combinatorial operator Function Selectors and Count v. Generate values.

PO_COMB.C:
 Use ENUMs for Combinatorial operators values.

REBAR.C:
  Document Lexicographic/Gray Code/Genlex use in Combinatorial operator.

UNICODE.H:
  Define names for Dagger and DoubleDagger symbols.


Build #2240 -- Version 0.6.2.xx
-------------------------------

* Implement Matrix Inverse/Divide For Underdetermined Matrices

Directory branches/bsmith/NanTypes:

EXECMFN.C:
EXECMFN.H:
MF_DOMINO.H:
  Define and initialize magic functions for Domino on Underdetermined matrices.

PF_DOMINO.C:
  Check for Underdetermined matrices in the Monadic and Dyadic cases.

VER.RC:
  Increment version # to 0.6.2.xx.
