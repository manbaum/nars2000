TO DO:	General:  Important
---------------------------
* Move registry info into <nars2000.ini> file
* Fix display of chars in a saved ws (surround with quotes, etc.)
* Handle multiple SI levels in a saved ws
* Handle SI Damage
* Implement dyadic epsilon		(member of)
* ...	    dyadic down tack jot	(format by specification)
* ...	    dyadic iota 		(index of)
* ...	    dyadic tilde		(without)
* ...	    dyadic dot			(inner product)
* ...	    monadic grade-up		(grade on rank > 1)
* ...	    monadic grade-down		(grade on rank > 1)
* ...	    monadic down shoe		(unique)
* ...	    dyadic grade-up		(char grades)
* ...	    dyadic grade-down		(char grades)
* ...	    dyadic up arrow		(take)
* ...	    dyadic down arrow		(drop)
* ...	    dyadic down tack		(representation)
* ...	    dyadic right shoe		(pick)
* ...	    dyadic up tack		(base value)
* ...	    bracket indexing		 A[B]
* ...	    bracket indexing		 A[B][C]
* ...	    bracket indexed assignment	 A[B]{is}C
* ...	    bracket indexed assignment	(A[B]){is}C
* ...	    bracket indexed modified assignment  (A[B])+{is}C
* ...	    )LOAD
* ...	    )COPY
* ...	    )NMS
* ...	    minimum set of system functions
* ...	       []AV
* ...	       []DR R
* ...	     L []DR R
* ...	       []EM
* ...	       []ET
* ...	       []EX R
* ...	       []FX R
* ...	       []NL R
* ...	       []ES R
* ...	       []ERROR R
* ...	     L []NL R
* ...	     L []EA R
* ...	     L []ES R
* ...	     L []TF R
* ...	    ambiguous operators
* ...


TO DO:	General:  Wish List
---------------------------
* Check for stack overflow (recursion depth in parser)
* Check for bison stack overflow
* Allocate bison stack from virtual memory
* Implement Garbage Collection???
* Test implementation limits (stack, FP, Integer, etc.)
* Check on freeing intermediate variables on error
* Idiom recognition in the tokenizer
* Test ± infinity code
* Get permission to redistribute APL385 Unicode or SimPL font
* Reference count on symbol table entries??
* Strings in the symbol table??
* Test all occurrences of a list as the right arg to a primitive or system function
* Implement user/session options dialog
* ...	    selective assignment
* ...	    dynamic functions
* ...	    magic functions for primitive functions
* ...	    magic functions for primitive operators
* ...	    magic functions for primitive datatypes
* ...	    complex numbers
* ...	    array predicates
* ...	    syntax highlighting
* ...	    control structures
* ...	    expanded set of system functions
* ...	      []SI
* ...	      []SINL
* ...	      []CALL R
* ...	    L []CALL R
* ...	      []CRL R
* ...	      []CRLPC R
* ...	      []DEF R
* ...	      []DEFL R
* ...	      []ERASE R
* ...	      []FI R
* ...	    L []FMT R
* ...	      []IDLIST R
* ...	    L []IDLIST R
* ...	      []IDLOC R
* ...	      []MF R
* ...	    L []MF R
* ...	    L []SS R
* ...	      []STOP R
* ...	      []TRACE R
* ...	    L []STOP R
* ...	    L []TRACE R
* ...	      []VI R
* ...	      []VR R
* ...	    extend associativity to derived functions such as {jot}{dot}+ ??
* ...	    component file system
* ...	    dyadic down tack jot	(format by example)
* ...	    dyadic left shoe		(partitioned enclose)
* ...	    dyadic squad		(indexing)
* ...	    dyadic epsilon underbar	(find)
* ...	    dieresis-del		(dual)
* ...	    dieresis-downtack		(convolution)
* ...	    dieresis-jot		(rank)
* ...	    dieresis-star		(power)
* ...	    vector editor
* ...	    matrix editor
* ...	    []INVERSE:
* ...	    []SINGLETON:
* ...


TODO: Session Manager
---------------------
* )SAVE as ASCII plain text file
* Ensure APL font is installed
*


DONE:  General
--------------
* Demote arrays to a more compact storage type
* Is it a problem that TypeDemote doesn't demote from
  TKT_VARARRAY to TKT_VARIMMED?
* Check floating point accuracy in input and output
* Remove non-"double" code from GSL functions
* Implement scan
* ...	    fast Boolean reduction
* ...	    fast Boolean scan
* ...	    N-wise reduction
* ...	    function editing
* ...	    dyadic jot with variables (e.g. 3{jot}+)
* ...	    f{is}3{jot}+
* ...	    (+{jot}(2+3))4
* ...	    (+{jot}(2 3))4
* ...	    (+{jot} 2 3 )4
* ...	    )SAVE
* ...	    )FNS
* ...	    )OPS
* ...	    )VARS
* ...	    )SI
* ...	    )SIC
* ...	    )RESET
* ...	    function execution
* ...	    goto
* ...	    goto Line #
* ...	    monadic up arrow
* ...	    monadic up tack jot
* ...	    quad input
* ...	    quote-quad input
* ...	    error handling ([]ELX)
* ...	    event handling ([]ALX)
* ...	    Ctrl-Break
* ...	    []PROTOTYPE:
* ...	    []LC
* ...	    []DL R
* ...	    []NC R
* ...	    []UCS R
* ...	    monadic right shoe
* When adding two empty vectors whose prototypes are
  0 (0 0) and (0 0) 0, the resulting empty vector's prototype
  should be (0 0) (0 0).  Also, the sum of an empty vector
  whose prototype is 0 0 and an empty vector whose prototype
  is 0 0 0 should be a LENGTH ERROR.
* Fix display of chars wth embedded CRs, LFs, BSs, etc.
* Remove apaLen from APA definition
* Make <dtoa.c> multi-threaded
*


DONE:  Session Manager
----------------------
* Mouse selection in session manager:  line & sentence
* CUA keystrokes:  e.g. Ctrl-RightArrow, etc.
* Tabs for workspaces
*


DONE:  Bugs
-----------
* Fix error caret position
*


DONE:  Features
---------------
* Function/operator assignment
* Monadic and dyadic rho
* Monadic left shoe (enclose w/axis)
* Monadic and dyadic plus/minus/etc. (w/axis)
* Session manager
* Compose operator
* ± infinity
* Use structured exception handling to change storage
  type on the fly (such as {floor} {infinity})
* Monadic []DR
* []TS
* []TC, []TCxxx
* []TYPE
* []SYSID
* []SYSVER
*


QUESTIONS
---------
* In assignment, can a var overwrite a fn, and vice versa
  or must the original object be erased first?
* In function assignment,

  f{is}+
  g{is}f[1]

  what should <g> reference?
  what happens to <g> if we change <f>?
* Should we allow f {is} {jot}fn or {jot}{dot} ?? (right operator)
* Should we allow f {is} {jot}fn	       ?? (left operator)
* How should an empty vector display?
  On APL+WIN systems 3.6 + 5.x, '' displays by skipping one blank line
  but 0{rho}{enclose}{zilde} displays without skipping a blank line.
* If a defined function indicates in its header that a result is to be
  returned, should we allow it to exit if that var has not been set?

  What about multiple results such as {del}(Z1 Z2 ...) {is} foo R,
  where Z1 is set, but not Z2?

  What if no Zn is set -- should we allow the function to exit?
*


File Extensions
---------------

All files will end in the extension ".nars".  There will be a secondary
extension to the left of the global extension such as .ws.nars for workspaces,
(e.g. porsche.ws.nars).

Workspaces		.ws.nars
File Systems		.file.nars
Plugins 		.plugin.nars
Initialization File	.ini



Anomalous Results
-----------------
* =/'a' and =\'a' both return 'a' which isn't in the range
  of "=" -- that seems odd.
* Similarly, =\3 0{rho}'' returns its argument with a prototype
  which isn't in the range of the derived function.
* ...


MISSING On Laptop
-----------------

* Qualitas.h (SVN)
* Fix Filezilla access to BOB
* DEPSCAN.exe (SVN)
* VDIR.exe (SVN)
* Look at Zview for APL to see what controls they use
* M: MSVC152
* N: MSVC4
* $(HCDIR)HCRTF
* Axialis
* VCCORE
* MSDN
*



ToDo
----
* Unlocalize in reverse order
* Unlocalize in one pass (and clear .Value), and restore
  in another pass to handle duplicate localized names
* Resolve NAMETYPE_UNK bug
* Axis error if defined function given an axis but not accepting one
*



