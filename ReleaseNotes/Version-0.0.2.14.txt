Version 0.0.2.14 consists of the following Builds:


Build #675 -- Version 0.0.2.14
------------------------------

* Fix Bug:  Handle Workspace Internal Convention :CONSTANT In Tokenize

Directory trunk:

TOKENIZE.C:
PL_PARSE.Y:
  Handle the workspace internal convention of :CONSTANT (which represents
    a global memory object) in Tokenize instead of the parser so as to
    allow it to be used in function strands.


Build #674 -- Version 0.0.2.14
------------------------------

* Fix Bug:  Handle Missing Case of <V1 op1 op2 V2 V3>

Directory trunk:

EXECDFN.C:
  In <InitFcnSTEs>, allow a UDFO along with a function strand so
    as to allow things like 1 2 op2 (+.×) op2 3 4 (5 6).

PL_PARSE.Y:
  Handle the missing case of <V1 op1 op2 V2 V3> by defining a
    a new rule <Drv4Func: Drv1Func DydOp StrandOp2>.


Build #673 -- Version 0.0.2.14
------------------------------

* Fix Bug:  Catch The {jot} In +op2{jot}23 As FILLJOT

Directory trunk:

PL_PARSE.Y:
  In <pl_yylex> for dyadic ops (TKT_OP2IMMED or TKT_OP2NAMED), if the
    dyadic operator is a Jot, lookahead for the next token to see if
    it's also a dyadic operator so as to catch the {jot} in
    +op2{jot}23 as FILLJOT.


Build #672 -- Version 0.0.2.14
------------------------------

* Pass LPPL_YYSTYPE Instead of LPTOKEN To FreeResult

Directory trunk:

CS_PROC.C:
  Change argument to <FreeResult> and friends so as to gain access
    to more elements of the argument.
  Define <FreeResTkn> to use when there's no YYSTYPE.
  Fix Bug:  In <CS_SELECT_Stmt_EM>, free the <CASE/CASELIST> result
    after using it so as to avoid a memory leak.

EXECFNS.C:
PF_CSLOPE.C:
PF_INDEX.C:
PF_RSHOE.C:
PL_PARSE.Y:
PO_DIERESIS.C:
PO_DIJOT.C:
PO_DOT.C:
PO_JOT.C:
PO_JOTDOT.C:
PO_SLASH.C:
PO_SLOPE.C:
SC_IN.C:
  Change argument to <FreeResult> and friends so as to gain access
    to more elements of the argument.
  Define <FreeResTkn> to use when there's no YYSTYPE.

FREE.C:
  If the arg being freed has the YYCopyArray flag set, clear it.
  Change argument to <FreeResult> and friends so as to gain access
    to more elements of the argument.
  Define <FreeResTkn> to use when there's no YYSTYPE.

EXECDFN.C:
  Change argument to <FreeResult> and friends so as to gain access
    to more elements of the argument.
  Define <FreeResTkn> to use when there's no YYSTYPE.
  Fix Bug:  In <InitFcnSTEs> when passing a function strand, handle
    more cases such as vars and immediates.

STRAND.C:
  Fix Bug:  In <MakeFcnStrand_EM_YY> at the end, free YYCopyArray'ed
    items in the arg recursively.
  In <MakeNameFcnOpr_YY>, save back the result into te arg so it may
    be freed.

YYFNS.C:
  In <YYCopyFcn>, delete the test for <UUCopyArray> as that's now
    done in <YYFreeArray>.
  Change argument to <FreeResult> and friends so as to gain access
    to more elements of the argument.


Build #671 -- Version 0.0.2.14
------------------------------

* Fix Bug:  Check For NoValue in Return From ArrExpr

Directory trunk:

PL_PARSE.Y:
  Define a new terminal <ArrValu> to check for <ArrExpr> as a
    VALUE ERROR which can come from a UDFO which doesn't return
    a value and is then passed on as an argument to another function.
  When Ctrl-Break is pressed, peel back to the first UDFO which is not
    a magic (internal) function.


Build #670 -- Version 0.0.2.14
------------------------------

* Fix Bug:  Avoid Freeing A Named UDFO As Its RefCnt Is
  Not Incremented In MakeNameFcnOpr_YY

Directory trunk:

FREE.C:
PL_PARSE.Y:
  Define new function <FreeResNNU> which frees its arg if it's
    Not a Named UDFO.


Build #669 -- Version 0.0.2.14
------------------------------

* Use Temporary Section For Deletable Entries When Saving A Workspace

Directory trunk:

SC_SAVE.C:
  Use "sss" consistently as the SI level count in comments.
  Use [TempGlobals] section in saved workspace file to hold
    those entries which get deleted after the workspace is
    saved.  This means we no longer need the SymLink chain
    and all of its supporting code.
  Improve comments.
  When formatting an immediate value, use a SWITCH stmt so as
    to catch missing cases.
  When formatting the global object name (:xxxxxxxx), make room
    for all chars in 64-bit environment.
  In <SavedWsFormGlbVar>, merge the formatting of NESTED and
    HETERO objects.
  In <SavedWsFormGlbVar>, format characters the same way as
    elsewhere as "x" or "\xNNNN".

WORKSPACE.H:
  Update copyright year.
  Define new section for workspaces which holds the temporary
    entries which get deleted after the workspace is saved.


Build #668 -- Version 0.0.2.14
------------------------------

* Fix Bug:  Clear A Certain Flag To Avoid Confusion If the Array Is Copied

Directory trunk:

PRIMFNS.C:
  In <CopyArray_EM> when copying a var, be sure to clear
    the <SkipRefCntIncr> flag as it certainly doesn't apply
    to the result.

REFCNT.C:
  Fix Bug:  In <ChangeRefCntDir_PTB> when changing the RefCnt of
    a permanent var, be sure to clear the <SkipRefCntIncr> flag
    so it doesn't get copied to a copy of the var.


Build #667 -- Version 0.0.2.14
------------------------------

* Fix Bug:  Rank Operator Fails To Process The Prototype In The Result

Directory trunk:

PO_DIJOT.C:
  Fix Bug:  If the result from the Rank Operator is empty, we fail
    to process the prototype when calculating the minimum/maximum
    ranks before deciding whether or not to call the Conforming
    Disclose magic function.
  Fix Bug:  Both the monadic and dyadic magic functions failed to
    setup the rank vector arguments when called at []PRO.


Build #666 -- Version 0.0.2.14
------------------------------

* Fix Bug:  When Copying Variable In A Function Strand, Increment
  The RefCnt If Not Called At The Top Level

Directory trunk:

STRAND.C:
  Pass additional arg to <YYCopyFcn> to tell whether or not it's called
    from the top level.

YYFNS.C:
  Pass additional arg to <YYCopyFcn> to tell whether or not it's called
    from the top level.
  In <YYCopyFcn> when copying a var in a function strand, if we're
    called at the top level don't increment the RefCnt, otherwise do.


Build #665 -- Version 0.0.2.14
------------------------------

* Fix Bug:  Pass On Operand Axis Token For Certain Operators

Directory trunk:

PO_CMIDDOT.C:
PO_DITILDE.C:
  Update copyright year.
  Rename <lptkAxis>/<lptkAxis2> to operator/operand-specific names.

PO_DIERESIS.C:
  Rename <lptkAxis>/<lptkAxis2> to operator/operand-specific names.
  Pass on the operand axis token when calling <ExecFuncOnToken_EM>.
  Check for operand axis token presence before marking as
    primitive scalar dyadic.

PO_DOT.C:
PO_SLASH.C:
  Rename <lptkAxis>/<lptkAxis2> to operator/operand-specific names.
  Check for operand axis token presence before marking as
    primitive scalar dyadic.

PO_JOTDOT.C:
  Rename <lptkAxis>/<lptkAxis2> to operator/operand-specific names.
  Pass on the operand axis token when calling <ExecFuncOnToken_EM>.


Build #664 -- Version 0.0.2.14
------------------------------

* Rename Internal Variables To Reflect Non-ASCIIZ Nature

Directory trunk:

SYMTAB.C:
  In <SymTabLookupNameLength>, rename "lpwsz" prefixed-names
    to "lpw" as the names aren't zero-terminated.
  Improve comments.


Build #663 -- Version 0.0.2.14
------------------------------

* Allow :SWITCH As An Alias of :SELECT

Directory trunk:

TOKENIZE.C:
  Allow :SWITCH as an alias of :SELECT.


Build #662 -- Version 0.0.2.14
------------------------------

* Widen Syntax Color Categories To Avoid Truncation Of Names

Directory trunk:

EXTERNS.H:
  Expand the wording of Syntax Color categories.

MAIN.RC:
  Widen the Syntax Color categories so we don't truncate names.


Build #661 -- Version 0.0.2.14
------------------------------

* Fix Bug In Customize When Changing a Foreground Syntax Color

Directory trunk:

CUSTOMIZE.C:
  Fix Bug:  In <CustomizeDlgProc>, when Applying a change to a foreground
    Syntax Color, a previous optimization caused the change to be lost.


Build #660 -- Version 0.0.2.14
------------------------------

* Check for System Label Conflict

Directory trunk:

PO_SLASH.C:
  Test for simultaneous use of []ID and []PRO and signal a
    NONCE ERROR if so as we need to work on System Labels more.

VERSION.RC:
  Increment version to 0.0.2.14.
