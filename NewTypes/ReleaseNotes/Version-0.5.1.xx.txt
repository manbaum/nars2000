Version 0.5.1.xx consists of the following Builds:


Build #1661 -- Version 0.5.1.xx
--------------------------------

* Implement Debugging Aid For A Specific HGLOBAL

Directory branches/bsmith/NewTypes:

MACROS.H:
  Define macro <CheckGlbStat> to check a specific HGLOBAL for memory corruption.

RESDEBUG.C:
  Implement <_CheckGlbStat> to check a specific HGLOBAL for memory corruption.


Build #1660 -- Version 0.5.1.xx
--------------------------------

* Word Comments Consistently

Directory branches/bsmith/NewTypes:

HC_PROC.C:
PF_CSTILE.C:
PF_DCARET.C:
TYPEMOTE.C:
  Word comments consistently.


Build #1659 -- Version 0.5.1.xx
--------------------------------

* Fix Bug In Type Function With A NaN Argument

Directory branches/bsmith/NewTypes:

MF_QUADFMT.H:
  Handle a NaN result from the Type function.

PF_DTACK.C:
  In <PrimFnMonDownTack_EM_YY>, for immediate FLTs, return a NaN for a NaN.

PO_DIERESIS.C:
  After call to <PrimScalarFnDydAllocate_EM>, Assert that <hGlbRes> is valid.

PRIMFNS.C:
  In <MakeMonPrototype_EM_PTB>, the prototype of a NaN is a NaN.
  After call to <PrimScalarFnDydAllocate_EM>, Assert that <hGlbRes> is valid.

STARTADDR.H:
  Include more routines.

SYMTAB.C:
SYMTAB.H:
  Define and use a Symbol Table Entry for a NaN.


Build #1658 -- Version 0.5.1.xx
--------------------------------

* Fix Bug When Identifying A NaN

Directory branches/bsmith/NewTypes:

COMMON.C:
  In <IsArgNaN>, if the argument is Nested/Hetero, the code used to just return FALSE.  Now it looks in the item and if it's a SYMENTRY, returns its NaN status.
  In <IsArgNaN>, if the argument is FLT-, RAT-, or VFP-like, use HC Dimension as the multiplier to index the base case.


Build #1657 -- Version 0.5.1.xx
--------------------------------

* Fix Bug When Calculating The Storage Type Of Up/DownStile On Hetero/Nested Arrays

Directory branches/bsmith/NewTypes:

PF_DSTILE.C:
  Fix bug in <PrimSpecDownStileStorageTypeDyd> when presented with a Hetero or Nested array.


Build #1656 -- Version 0.5.1.xx
--------------------------------

* Implement NaNs

Directory branches/bsmith/NewTypes:

COMMON.C:
  Define routine <IsArgNaN> to test to see if an item contains a NaN as one of its coordinates.

CONVERT.C:
  Fix typos.
  In <flt_cmp_ct>, handle NaNs.
  Remove routines no longer needed.

CR_PROC.C:
CR_PROC.H:
  Handle NaNs the same as Infs.

CUSTOMIZE.C:
  Define new value for []IC to return a NaN.

DEFINES.H:
  Redefine Quiet NaN, and define Real Indefinite.
  Define text strings for NaNs, both ASCII and UCS2.

DISPLAY.C:
  Define text strings for NaNs, both ASCII and UCS2.
  In formatting routines, display NaNs.

ENUMS.H:
  Reorder EXCEPTION_CODES so that we can do artihmetic on them when raising an exception.
  Remove EXCEPTION_RESULT_RAT as it not used.

EXTERNS.H:
  Define new value for []IC to return a NaN.
  Define new index in []FEATURE to allow NaNs in arithmetic.
  Define FLT NaN.

FPCHO_COM.C:
MPCHO_COM.C:
  Number functions with Circle function left arg.
  Handle zero imaghinary part as real number.

HC_PROC.C:
  Define missing function <mphc1v_init_set>.

INITDATA.C:
  Initialize FLT NaN.

KEYBOARDS.H:
  Define NaN in the various default keyboards.

MACROS.H:
  Define macros for new & old []FEATUE values.
  Define macros for detecting FLT and VFP NaNs.

MPFNS.C:
  Define new value for []IC to return a NaN.

MPIFNS.C:
  Handle NaNs similarly to Infs.

PF_BAR.C:
PF_CIRCLE.C:
PF_CIRCLE.MAC:
PF_DOMINO.C:
PF_DOTDOT.C:
PF_DTACK.C:
PF_PLUS.C:
PF_ROOT.C:
PF_STILE.C:
PF_TIMES.C:
PN_PARSE.Y:
PRIMSPEC.C:
  Handle NaNs.

PF_COLONBAR.C:
  Fix bug in <DivHC1I_RE> detecting when to blow up to FLT.
  Handle NaNs.

PF_EPSILON.C:
  Fix Lft v. Rht typos in routines.

PF_EQUAL.C:
  Document behavior of <CmpCT_F>.
  Handle NaNs.

PF_STAR.C:
  When converting the right arg to an integer, use a []CT of zero so that the conversion is exact.

PN_PROC.C:
  In <PN_MakeHcxPoint>, use the larger HC Dimension of the rounded up value and the
    HC Dimension of the incoming HC Dimension (if not initializing).
  Define routine to set a NaN into various datatypes.

REBAR.C:
  Document NaNs in the Language Bar.

SC_LOAD.C:
  Use common routines to handle NaNs on )LOAD and )COPY.

SYMBOLNAMES.H:
  Define Alt-5 as NaN.

TOKENIZE.C:
TOKENIZE.H:
  Move Underbar into the Alpha category and rename its row as NaN.

TRANSLATE.C:
  Define new value for []IC to return a NaN.

TYPEMOTE.C:
  Fix alignment of comments.

UNICODE.H:
  Define Unicode symbol for NaN.


Directory branches/bsmith/NewTypes/htdocs:

HTDOCS/INDEX-BODY.AHTML:
  Fix typos.
  Include Gamma and Hypercomplex in Point Notation changes.
  Update copyright year.


Directory branches/bsmith/NewTypes/Extensions/aplchars:

INSTALL.RDF:
UPDATE.RDF:
  Update the version number.


Directory branches/bsmith/NewTypes/Extensions/aplchars/chrome/content/aplchars:

ABOUT.XUL:
  Update the version number.

EDITOROVERLAY.JS:
  Define key for NaN.


Directory branches/bsmith/NewTypes/MediaWiki:

MEDIAWIKI/EXTENSIONS/B2A.INC.PHP:
  Define key for NaN.


Build #1655 -- Version 0.5.1.xx
--------------------------------

* Define A Single NaN Rather Multiple NaNs

Directory branches/bsmith/NewTypes:

CONVERT.C:
  In <ConvertSpecCharsToFloat>, display a NaN as {NaN} rather than with any other adornment.

DEFINES.H:
  Define a Quiet NaN as well as a Real Indefinite.

DISPLAY.C:
  In <FormatAplFltFC>, format a NaN as {NaN} with no other adornment.

EXTERNS.H:
  Define save area for floating point NaN.

INITDATA.C:
  Initialize <fltNaN> as a Quiet NaN.

PRIMSPEC.C:
  Move the unlock code to before we test for errors.


Build #1654 -- Version 0.5.1.xx
--------------------------------

* Fix Bug In Data Demotion

Directory branches/bsmith/NewTypes:

PRIMSPEC.C:
  Fix bug in last build:  forgot to respecify a ptr after demoting the data.


Build #1653 -- Version 0.5.1.xx
--------------------------------

* Attempt To Demote HC Args To The Four Comparison PSFs ( <=   >=   > ) Not Defined On HC Data

Directory branches/bsmith/NewTypes:

DATATYPE.H:
  Define Real Only array type.

MACROS.H:
  Fix error in comment.
  Define macro for detecting Real Only array type.

PF_EPSILON.C:
  Improve comments.

PF_LCARET:
PF_LCARETUND:
PF_RCARET.C:
PF_RCARETUND.C:
  In <...StorageTypeDyd> return Real Only array type for HC args telling the caller
    to attempt to demote the args to HC dimension 1.

PRIMSPEC.C:
  After determining the result storage type, test for Real Only and handle as necessary.

QF_DC.:
  Insert proper calling sequence for <TypeDemote> even though it's commented out.

TYPEMOTE.C:
  In <DemoteData>, return a result to indicate whether or not the demotion succeeded.
  In <DemoteData>, handle demotions to the base case (BIFRV).
  Define common routine to allocate a new array and demote the incoming data to the new array.


Build #1652 -- Version 0.5.1.xx
--------------------------------

* Fix Bugs In Lookup Algorithm For PV Left Args, Part II

Directory branches/bsmith/NewTypes:

DATATYPE.H:
  Define a Permutation Vector.

GRADE.H:
  Fix typo in comment.

PF_IOTA.C:
  Fix bugs in lookup algorithm for PV left args.


Build #1651 -- Version 0.5.1.xx
--------------------------------

* Fix Bugs In Lookup Algorithm For PV Left Args

Directory branches/bsmith/NewTypes:

PF_DOTDOT.C:
  Set the PV0/PV1 flags for results as appropriate.

PF_IOTA.C:
  Fix bugs in lookup algorithm for PV left args.

VER.RC:
  Increment version # to 0.5.1.xx.
