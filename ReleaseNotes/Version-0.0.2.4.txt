Version 0.0.2.4 consists of the following Builds:


Build #548 -- Version 0.0.2.4
-----------------------------

* Fix Bug:  Enlist on an empty array of other than numbers fails

Directory trunk:

PF_EPSILON.C:
  In <PrimFnMonEpsilonGlbCopy_EM>, I forgot to process the prototype
    element of an empty nested array.


Build #547 -- Version 0.0.2.4
-----------------------------

* Fix Bug:  Double-clicking on a name spelt with an underbar fails

Directory trunk:

EDITFCN.C:
  In <IzitNameChar>, the individual tests for a valid char in a name
    missed underbar, so instead of just addding that, the new version
    uses the existing function <IsValid2ndCharInName> (which includes
    <IsValid1stCharInName>).  This means that double-clicking on a
    name that includes an underbar, now displays the function (if any)
    of that name.


Build #546 -- Version 0.0.2.4
-----------------------------

* Fix Bug:  As part of the change to the binding strength for arrays
  and indexed lists an array was freed when it shouldn't have been.

Directory trunk:

PL_PARSE.Y:
  In <IndexVarBR: IndexListBR SingVar> if an error occurs, do not
    free <SingVar> as it gets freed later.


Build #545 -- Version 0.0.2.4
-----------------------------

* Fix Bug:  Crash when catenating an empty with a non-empty
  where one is numeric and the other character.

Directory trunk:

PF_COMMA.C:
  When catenating an empty array with a non-empty array (either side)
    where one side is numeric and the other characters, the system
    crashes because of a missing array type in a switch stmt.


Build #544 -- Version 0.0.2.4
-----------------------------

* Display more data in DEBUG window

Directory trunk:

DISPDBG.C:
  Display more data in DEBUG window.


Build #543 -- Version 0.0.2.4
-----------------------------

* Change The Binding Strength of Left Brackets and Its Lefthand Token

Directory trunk:

PL_PARSE.PROTO:
  Change the return of <AmbOpSwap> from <BOOL> to <UBOOL> so we
    always use unsigned BOOLs.

PL_PARSE.Y:
  Introduce a new rule to handle A[B] as a separate token within a
    strand so it has a higher binding strength than strands, moving
    to this rule the corresponding actions from <StrandInst>.  This
    moves us closer to APL2's binding strength rules, although
    1 2 3[1] still works -- APL2 requires parens as in (1 2 3)[1].

PRIMFNS.C:
  In <TokenTypeFV>, mark <TKT_STRAND> as a Var.


Build #542 -- Version 0.0.2.4
-----------------------------

* Fix Bug:  The Identity Element For Inner Product Was Fixed At Zero

Directory trunk:

EXTERNS.H:
  Define var for constant (all zero) <PRIMFLAGS> for use when
    <GetPrimFlagsPtr> is NULL.
  Define and use struct for primitive scalar dyadic function
    identity elements.

INITDATA.C:
  Use struct for primitive scalar dyadic function identity
    elements.

PO_DOT.C:
  Return identity element when reducing an empty intermediate result.
  Limit inner product to cases where the inner dimensions are equal.
  Handle UDFO reduction of empty intermediate result by calling the UDFO
    at []IDENTITY.
  Handle catenate reduction of empty intermediate result specially.

PO_SLASH.C:
  Reorganize the code in <PrimOpMonSlashCommon_EM_YY> to match that
    of <PrimOpDydDotCommon_EM_YY>.
  Pass additional parameters to <PrimOpMonSlashScalar_EM_YY> so they
    don't need to be computed inside that function.
  Use struct for primitive scalar dyadic function identity
    elements.

PO_SLOPE.C:
  Reorganize the code in <PrimOpMonSlashCommon_EM_YY> to match that
    of <PrimOpDydDotCommon_EM_YY>.
  Pass additional parameters to <PrimOpMonSlashScalar_EM_YY> so they
    don't need to be computed inside that function.


Build #541 -- Version 0.0.2.4
-----------------------------

* Fix Display Of Strands With Ptrs

Directory trunk:

DISPDBG.C:
  Fix the display of a strand with a named ptr:  on a 32-bit system,
    the high-order dword need not be zero but it's displayed anyway.


Build #540 -- Version 0.0.2.4
-----------------------------

* Renumber Strucs Symbolically To Reduce Changes

Directory trunk:

EXECMFN.C:
  Use hGlbMFO[MFOE_xxx] instead of individual entries.

EXECMFN.H:
  Define enum to name all magic function/operators.

PERTAB.H:
  Renumber entries symbolically to reduce the # changes.

PF_DSHOE.C:
PF_IOTA.C:
PF_TILDE.C:
PO_DIJOT.C:
QF_FMT.C:
QF_VR.C:
  Use hGlbMFO[MFOE_xxx] instead of individual entries.

PF_UTACKJOT.C:
  Miscellaneous text change.


Build #539 -- Version 0.0.2.4
-----------------------------

* Restore []Z As It's Used in 2 []TF

Directory trunk:

PERTAB.H:
  Renumber entries as the size of <HSHTABSTR> changed.

SYMTAB.H:
  Renumber entries as the value of <SYSVAR_LENGTH> changed.

SYSVARS.C:
  Redefine []Z as a system var.
  Restore the validation routine for assignment into []Z.
  In <AssignDefaultSysVars>, initialize []Z.
  In <InitSystemVars>, initialize the validation routines for []Z.

SYSVARS.H:
  Restore the enum entry for []Z.


Build #538 -- Version 0.0.2.4
-----------------------------

* Display More Detail About Globals In Debug Window

Directory trunk:

DISPDBG.C:
  In <DisplayGlobals> when displaying numeric arrays, display up to the
    first three values (followed by an ellipsis if more values are present)
    and display APA arrays as Off+Mulx{iota}NELM.
  In <DisplayGlobals>, convert the sequence of if/else/if/else/... stmts
    to a single switch stmt.


Build #537 -- Version 0.0.2.4
-----------------------------

* Split Name Class For Magic Functions/Operators In Two

Directory trunk:

DATATYPE.H:
  Rename <bMFvar> to <bMFOvar> to indicate it include operators.

DISPDBG.C:
  Rename <bMFvar> to <bMFOvar> to indicate it include operators.
  Improve comments.
  Use macro <IsMFOName> instead of direct comparison.

EDITFCN.C:
  Rename <bMF> to <bMFO> to indicate it includes operators.
  Improve comments.

EXECDFN.C:
FH_PARSE.H:
FREE.C:
IMMEXEC.C:
PF_UTACKJOT.C:
PL_PARSE.Y:
REFCNT.C:
SAVEFCN.C:
SC_SI.C:
SIS.H:
  Improve comments.

EXECFNS.C:
  Rename <lpHshTabPrvMF> to <lpHshTabPrvMFO> to incidate it includes operators.

EXECMFN.C:
  Improve comments.
  Rename <MAGIC_FUNCTION> to <MAGIC_FCNOPR> to indicate it includes operators.
  Rename <hGlbMF> to <hGlbMFO> to indicate it includes operators.
  Rename <lpHshTabPrvMF> to <lpHshTabPrvMFO> to indicate it includes operators.
  Rename <LPINITMF> to <LPINITMFO> to indicate it includes operators.
  Rename <OBJNAME_MF> to <OBJNAME_MFO> to indicate it includes operators.
  Rename <MFN_xxx> to <MFON_xxx> to indicate it includes operators.
  Rename <MF_xxx> to <MFO_xxx> to indicate it includes operators.

EXECMFN.H:
  Improve comments.
  Rename <MFN_xxx> to <MFON_xxx> to indicate it includes operators.
  Rename <MAGIC_FUNCTION> to <MAGIC_FCNOPR> to indicate it includes operators.
  Rename <LPINITMF> to <LPINITMFO> to indicate it includes operators.

MACROS.H:
  Rename macro <IsMFName> to <IsMFOName> to indicate it includes operators.

MAIN.C:
  Rename <lpHshTabPrvMF> to <lpHshTabPrvMFO> to indicate it includes operators.

NAMECLASS.H:
  Improve comments.
  Split name class for magic functions/operators in two.

PERTAB.H:
  Improve comments.
  Rename <hGlbMF> to <hGlbMFO> to indicate it includes operators.

PF_DSHOE.C:
PF_IOTA.C:
PF_TILDE.C:
PO_DIJOT.C:
QF_FMT.C:
QF_VR.C:
  Rename <hGlbMF> to <hGlbMFO> to indicate it includes operators.
  Improve comments.
  Rename <MFN_xxx> to <MFON_xxx> to indicate it includes operators.
  Rename <MF_xxx> to <MFO_xxx> to indicate it includes operators.
  Rename <MAGIC_FUNCTION> to <MAGIC_FCNOPR> to indicate it includes operators.

QF_AT.C:
QF_MF.C:
SC_FNOV.C:
SC_OUT.C:
SC_SAVE.C:
TABCTRL.C:
  Improve comments.
  Rename <OBJNAME_MF> to <OBJNAME_MFO> to indicate it includes operators.

QF_NC.C:
  Improve comments.
  Split name class for magic functions/operators in two.
  Rename <OBJNAME_MF> to <OBJNAME_MFO> to indicate it includes operators.

SESSMAN.C:
  Improve comments.
  Rename <PTDMEMVIRT_MFx> to <PTDMEMVIRT_MFOx> to indicate it includes operators.

SYMTAB.C:
  Improve comments.
  Rename macro <IsMFName> to <IsMFOName> to indicate it includes operators.
  Rename <lpHshTabPrvMF> to <lpHshTabPrvMFO> to indicate it includes operators.
  Rename <OBJNAME_MF> to <OBJNAME_MFO> to indicate it includes operators.

SYMTAB.H:
  Rename <lpHshTabPrvMF> to <lpHshTabPrvMFO> to indicate it includes operators.
  Rename <OBJNAME_MF> to <OBJNAME_MFO> to indicate it includes operators.

TOKENIZE.C:
  Rename <bMFvar> to <bMFOvar> to indicate it include operators.
  Rename <bMF> to <bMFO> to indicate it includes operators.
  Improve comments.

TOKENIZE.H:
  Rename <bMF> to <bMFO> to indicate it includes operators.


Build #536 -- Version 0.0.2.4
-----------------------------

* Implement {jot} As An Operand To Monadic and Dyadic Operators

Directory trunk:

DISPDBG.C:
  Define entry for new token TKT_FILLJOT.
  In <DisplayFcnSub>, treat FILLJOT the same as FCNIMMED.

EXECDFN.C:
  In <ExecDfnOprGlb_EM_YY>, if the left or right operand is FILLJOT,
    leave the operand undefined.
  In <UninitOprSTEs>, treat FILLJOT the same as FCNIMMED.
  In <UninitOprSTEs>, check for NOVALUE before decrementing a refcnt.

FREE.C:
  In <FreeResultSub>, treat FILLJOT the same as FCNIMMED.
  In <FreeResultGlobalFcn>, treat FILLJOT the same as FCNIMMED.

MACROS.H:
  Define macro for detecting FILLJOT.

PL_PARSE.PROTO:
  In <LookaheadAdjacent>, define additional Boolean argument
    to indicate whether or not to look beyond a {jot}.
  Change the return of <LookaheadDyadicOp> and <CheckNullOp3> from
    <BOOL> to <UBOOL> so we always use unsigned BOOLs.

PL_PARSE.Y:
  Define new token FILLJOT returned from <pl_yylex>.
  In <Drv1Func>, define new rule for <FILLJOT DydOp StrandInst>.
  In <Drv1Func>, define new rule for <FILLJOT DydOp Drv1Func>.
  In <Drv2Func>, define new rule for <StrandInst DydOp FILLJOT>.
  In <Drv2Func>, define new rule for <FILLJOT DydOp AxisFunc>.
  In <LeftOper>, define new rule for <MonOp FILLJOT>.
  In <LeftOper>, define new rule for <RightOper DydOp FILLJOT>.
  In <LeftOper>, define new rule for <FILLJOT DydOp LeftOper>.
  In <LeftOper>, define new rule for <FILLJOT DydOp FILLJOT>.
  In <LookaheadAdjacent>, define additional Boolean argument
    to indicate whether or not to look beyond a {jot}.
  In <LookaheadAdjacent>, handle FILLJOT as next token type.
  Simplify calls to <LookaheadDyadicOp> as it returns TRUE
    and FALSE only.
  In <LookaheadDyadicOp>, treat FILLJOT the same as FCNIMMED.
  In <pl_yylex> when handling <TKT_VARNAMED>, be sure to return
    something if we fall through.  This isn't a bug (as yet),
    just good coding practice.

PO_CMIDDOT.C:
PO_DIERESIS.C:
PO_DIJOT.C:
PO_DITILDE.C:
PO_DOT.C:
PO_JOT.C:
PO_SLASH.C:
PO_SLOPE.C:
  Check for FILLJOT and signal a SYNTAX ERROR if present.

PO_JOTDOT.C:
  Minor text changes.
  When monadic JotDot is called, signal a VALENCE ERROR
    not a SYNTAX ERROR.
  Check for FILLJOT and signal a SYNTAX ERROR if present.

PRIMFNS.C:
  In <TokenTypeFV>, treat FILLJOT the same as FCNIMMED.

STRAND.C:
  In <FreeStrand>, treat FILLJOT the same as FCNIMMED.
  In <MakeVarStrand_EM_YY>, treat FILLJOT the same as FCNIMMED.
  Define new routine <MakeFillJot_YY> to create a <PL_YYSTYPE>
    entry for  FILLJOT.
  In <CopyToken_EM>, treat FILLJOT the same as FCNIMMED.

TOKENIZE.C:
  In <Untokenize>, treat FILLJOT the same as FCNIMMED.
  In <AppendNewToken_EM>, treat FILLJOT the same as FCNIMMED.

TOKENS.H:
  Define new token for FILLJOT.

YYFNS.C:
  In <IncrFcnMem>, treat FILLJOT the same as FCNIMMED.


Directory trunk\htdocs:

INDEX-BODY.AHTML:
  Note that []IDENTITY is implemented.
  Include additional Power Operator cases:  f{power}N and f{power}{jot}.


Build #535 -- Version 0.0.2.4
-----------------------------

* Unlocalize []IO From The []VR Magic Function

Directory trunk:

EXECMFN.C:
  After initializing the hash and symbol tables for []VR, set the
    value of []IO to zero so we don't have to do it every time in
    the magic function.

QF_VR.C:
  In the magic function for []VR, remove all references to []IO
    as it is already localized as part of the hash and symbol tables
    and initialized to zero when the hash and symbol tables are first
    created.


Build #534 -- Version 0.0.2.4
-----------------------------

* Fix Bug:  With Multiple Tabs Open, Deleting The Current Tab Hangs

Directory trunk:

TABCTRL.C:
  Optimize the code w.r.t. <bExecuting>.
  Fix Bug:  Before incrementing the index of the new tab, ensure that
    the resulting value wouldn't be out of range.


Build #533 -- Version 0.0.2.4
-----------------------------

* Move Initialization Of Constants To Common Routine

Directory trunk:

INITDATA.C:
  Update copyright year.
  Move initialization of constants to common routine.

MAIN.C:
  Move initialization of constants to common routine.


Build #532 -- Version 0.0.2.4
-----------------------------

* Append Time Of Last Modification To End Of []VR Display

Directory trunk:

QF_VR.C:
  When displaying a function, append the time of the last modification
    after the trailing del symbol.


Build #531 -- Version 0.0.2.4
-----------------------------

* Implement Preliminary Form of Namespaces

Directory trunk:

DISPDBG.C:
  Define and use namespace token.

DISPLAY.C:
GETFNS.C:
PERTAB.H:
SC_COMMON.C:
SC_SAVE.C:
SC_WSID.C:
TABCTRL.C:
  Move the <lpSymQuadXXX> entries in the PerTabData struc into
    the HshTabStr struc so as to localize them to the corresponding
    namespace.

EDITFCN.C:
  In <SyntaxColor>, if there's room, save the TKCOL_xxx value in the
    next syntax color entry.
  Move the <lpSymQuadXXX> entries in the PerTabData struc into
    the HshTabStr struc so as to localize them to the corresponding
    namespace.

EXECFNS.C:
  Define and use a separate ptr to a previous HshTabStr for
    append new/lookup old magic function name, and rename
    the old one.
  In <ExecFunc_EM_YY>, switch to a parent namespace as appropriate.

EXECMFN.C:
  Define and use a separate ptr to a previous HshTabStr for
    append new/lookup old magic function name, and rename
    the old one.
  In <ExecuteMagicFunction_EM_YY> and <ExecuteMagicOperator_EM_YY>,
    switch to a namespace if this magic function uses one.
  In <Init1MagicFunction>, if there's a separate namespace,
    initialize the system vars for the namespace.
  In <InitMagicFunctions>, initialize the magic function for []VR
    with a separate namespace.

EXTERNS.H:
  Move <SYS_VARS> enum to <sysvars.h>.
  Move <HSHTABSTR> struc to <symtab.h>.

HEADERS.H:
  Move <sysvars.h> up in the list as its contents are needed earlier.

MAIN.C:
  Define and use a separate ptr to a previous HshTabStr for
    append new/lookup old magic function name, and rename
    the old one.

PF_DSHOE.C:
PF_IOTA.C:
PF_TILDE.C:
PO_DIJOT.C:
  Pass additional HSHTABSTR parameter to <ExecuteMagicFunction_EM_YY>
    and <ExecuteMagicOperator_EM_YY> to support namespaces.

PL_PARSE.Y:
  Define and use <SYSNS> token to support namespaces for primitive
    functions, system functions, and user-defined functions/operators.

QF_CR.C:
  Define the ptr to the right arg as a ptr to a char vector so as to
    make debugging easier.

QF_FMT.C:
  Remove commented out code no longer needed.
  Pass additional HSHTABSTR parameter to <ExecuteMagicFunction_EM_YY>
    and <ExecuteMagicOperator_EM_YY> to support namespaces.

QF_VR.C:
  Pass additional HSHTABSTR parameter to <ExecuteMagicFunction_EM_YY>
    and <ExecuteMagicOperator_EM_YY> to support namespaces.
  Shift magic function system fns/vars to uppercase.

STARTADDR.H:
  Include additional files and routines.

STRAND.C:
  In <MakeFcnStrand_EM_YY>, copy system namespace level to the output.

SYMTAB.C:
  Define and use a separate ptr to a previous HshTabStr for
    append new/lookup old magic function name, and rename
    the old one.
  In <SymTabAppendNewName_EM>, if the name is that of a magic function,
    peel back to the top namespace level so the name is global to and
    available to all levels.
  In <SymTabLookupNameLength>, if the name is that of a magic function,
    peel back to the top namespace level which is where all magic
    function names are located.

SYMTAB.H:
  Move <HSHTABSTR> struc to <symtab.h>.
  Define and use a separate ptr to a previous HshTabStr for
    append new/lookup old magic function name, and rename
    the old one.

SYSVARS.C:
  Rename <SymTabAppendSysName> to <SymTabAppendOneSysName>.
  Define <SymTabAppendAllSysNames_EM> to be called from
    <execmfn.c> for magic function initializations.
  Move the <lpSymQuadXXX> entries in the PerTabData struc into
    the HshTabStr struc so as to localize them to the corresponding
    namespace.
  In <InitSystemNames>, call <SymTabAppendAllSysNames>.
  In <InitSystemVars>, split out the assignment of system vars into
    <AssignDefaultSysVars> so it can be called from <execmfn.c> to
    initialize the namespace of a magic function.

SYSVARS.H:
  Move <SYS_VARS> enum to <sysvars.h>.

TOKENIZE.C:
  Rename <bInUse> to <gbInUse> to reflect its global state.
  Use separate FSA actions to handle single and double quotes
    as opposed the confusing use of QUOTE1 and QUOTE2 to indicate
    initial quote (not single quote) and subsequent text (not
    double quote).
  Define new FSA row and column for system namespaces.
  Rename <lpStart>/<lpNext>/<lpLastEOS> to
    <lptkStart>/<lptkNext>/<lptkLastEOS> to reflect that
    they all are TOKEN ptrs.
  Define FSA actions to handle system namespaces.
  When setting a syntax color, also set the corresponding name
    type and column index.

TOKENIZE.H:
  Define new FSA row and column for system namespaces.
  Rename <lpStart>/<lpNext>/<lpLastEOS> to
    <lptkStart>/<lptkNext>/<lptkLastEOS> to reflect that
    they all are TOKEN ptrs.

TOKENS.H:
  Define new token for system namespaces.
  In <TKFLAGS>, define new field to hold the system namespace
    level for that token.


Build #530 -- Version 0.0.2.4
-----------------------------

* Fix Bug:  The primitive dyadic scalar case of singleton APA vs.
  multiple array returning a Boolean was omitted.

Directory trunk:

PRIMSPEC.C:
  Fix Bug:  The primitive dyadic scalar case of singleton APA vs.
    multiple array returning a Boolean was omitted.


Build #529 -- Version 0.0.2.4
-----------------------------

* Fix Bugs in Rank Operator

Directory trunk:

PO_DIJOT.C:
  Fix Bug:  If the result of <#MonRank> or <#DydRank> consists of
    mixed rank items, the Axis Operator to the Rank Operator was
    ignored.
  Fix Bug:  In <#MonRank>, if the right operand to the Rank Operator
    was a two-element vector, the wrong cell size was used.


Build #528 -- Version 0.0.2.4
-----------------------------

* Move Name Classes (Result Of []NC) To A Range That Doesn't Overlap
  Other Vendor's Use

Directory trunk:

EXECDFN.C:
  Fix Bug:  The OBJNAME_xxx value for System Labels was set to OBJNAME_USR
    instead of OBJNAME_SYS.

NAMECLASS.H:
  Update copyright year.
  Fix typo in comment.
  Move name classes for System Variables, System Functions, System
    Labels and Magic Functions to the 21+ range so as not to overlap
    other vendor's use.

QF_NC.C:
  Change comments about name class values.

QF_NL.C:
  Widen the bit bucket which holds the name class values to 64 bits in
    case the largest name class value increases.
  Move name classes for System Variables, System Functions, System
    Labels and Magic Functions to the 21+ range so as not to overlap
    other vendor's use.
  In <SysFnDydNL_EM_YY>, widen the nameclass bit bucket to 64 bits.
  In <SysFnDydNL_EM_YY>, check for valid range for the input.

SC_FNOV.C:
  Change <stNameType> from <UINT> to <NAME_TYPES> for a better view
    when debugging.
  In <CmdFNOV_EM>, when looping through the SYMENTRYs, omit Magic
    Functions and System Names except for System Labels.
  In <CmdFNOV_EM>, omit separate check for System and Magic Functions.
  In <CmdFNOV_EM>, allow for two digit nameclass values in the
    )NMS output.
  Optimize FOR stmt with <FillMemoryW>.


Build #527 -- Version 0.0.2.4
-----------------------------

* Minor Change to Text

Directory trunk:

EDIT.RCH:
  Update copyright year.
  Change case of text from "WIN" to "Win".

UNITRANSHDR.H:
UNITRANSTAB.H:
  Change case of text from "WIN" to "Win".

Directory trunk\MediaWiki\extensions:

APL.CSS:
  Combine .APL and code styles as they are identical.
  Change the order of fonts to "SImPL medium" and "SImPL", etc


Directory trunk\WineHQ:

EDITCTRL.C:
  Change case of text from "WIN" to "Win".


Build #526 -- Version 0.0.2.4
-----------------------------

* Fix Bug:  When saving a function array that contains a user-defined
  function/operator, copy the function name to the text rather than
  the global reference as the global reference has already been
  resolved.

Directory trunk:

SC_SAVE.C:
  In <SavedWsFormGlbVar>, widen array to handle FMTCHR_LEAD when
    using 64-bit ptrs.
  Fix Bug:  In <SavedWsFormGlbVar>, when saving a function array that
    contains a user-defined function/operator, copy the function name
    to the text rather than the global reference as the global
    reference has already been resolved.


Build #525 -- Version 0.0.2.4
-----------------------------

* Implement []AT

Directory trunk:

COMPRO.H:
  Include "qf_at.pro" in the list of prototype files.

EXECMFN.C:
  When initializing a magic function at system startup,
    save the current time in the function header so it may
    be retrieved by []AT.

MAKEFILE.INC:
MAKEFILE.SRC:
NARS2000.32.VCPROJ:
NARS2000.64.VCPROJ:
  Define entries for new files for []AT.

QF_AT.C:
  New module to implement []AT.

SYSVARS.C:
  Enable []AT as a system function.

VERSION.RC:
  Increment version to 0.0.2.4.
