Version 0.4.18.xx consists of the following Builds:


Build #1580 -- Version 0.4.18.xx
--------------------------------

* Implement []NINFO

Directory trunk:

COMMON.C:
  Fix minor bug in <AllocateGlobalArray>.

QF_NFNS.C:
  Define enum for File Types.
  Implement []NINFO.
  Include additional parameter in <SysFnCreateTie_EM_YY> to handle special cases.
  Reduce storage size of <AccessMode> and <ShareMode> to what the API requires.
  In <SysFnCreateTie_EM_YY>, handle special cases when tieing a directory or symbolic link.
  Copy index validation code out of <NfnsArgAplint> to <NfnsArgTieNum>.
  In <NfnsArgAplint>, use <ConvertToInteger_SCT> instead of special cases.
  In <SysErrMsg_EM>, remove trailing "\r\n" if present.

QF_TS.C:
  In <SysFnTS_EM_YY>, break out code to allocate the timestamp to a separate function so we can call it from []NINFO.

STARTADDR.H:
  Include more entry points.

SYSVARS.C:
  Include entry point for []NINFO.


Build #1579 -- Version 0.4.18.xx
--------------------------------

* Make Function Fix Time Sensitive To A User Preference

Directory trunk:

QF_AT.C:
  Make the Function Fix Time sensitive to the User Preference "Use local time".


Build #1578 -- Version 0.4.18.xx
--------------------------------

* Fix Bug In Output Debugging Macro

Directory trunk:

MACROS.H:
  Fix bug in Output Debugging macro.


Build #1577 -- Version 0.4.18.xx
--------------------------------

* Use Macro To Detect Chars For Output Debugging

Directory trunk:

EDITFCN.C:
MACROS.H:
  Use macro to detect chars for Output Debugging.

Directory trunk\WineHQ:

EDITCTRL.C:
LOCAL.H:
  Use macro to detect chars for Output Debugging.


Build #1576 -- Version 0.4.18.xx
--------------------------------

* Fix Bug Of Duplicate Accumulation In <CopyBlockLines>

Directory trunk:

EDITFCN.C:
SAVEFCN.C:
SESSMAN.C:
TOKENIZE.C:
  Improve comments.

IMMEXEC.C:
  In <CopyBlockLines>, delete duplicate length accumulation.
  Improve comments.


Build #1575 -- Version 0.4.18.xx
--------------------------------

* Allow []PW To Be As Large As Possible (2*31)-2

Directory trunk:

SC_LIB.C:
  In <DisplayLibNames>, now that []PW can be much larger, allocate space for the line
    dynamically as opposed to statically.

SYSVARS.H:
  Allow []PW to be as large as (2*31)-2.


Build #1574 -- Version 0.4.18.xx
--------------------------------

* Fix Bug When Editing A Logical Line In A Function Header

Directory trunk:

EDITFCN.C:
  In <LftMarginsFE>, omit the small indent of 2 as we no longer need it
  In <FEWndProc/WM_COMMAND/EN_CHANGE>, handle the case where the change is in the function header not on the first physical line.
  In <GetFunctionName?, handle the case where the function name continues to the next physical line.
  In <RespecifyNewQuadPW>, fix bug calculating the new width by taking into account the left margin in the SM.

IMMEXEC.C:
  In <CopyBlockLines>, return the number of chars copied.
  Improve comments.

SAVEFCN.C:
  Improve comments.

SESSMAN.C:
  Define new function to return the left margin of a SM window.
  In <SetMarginsSM>, use the new function.
  Improve comments.

TOKENIZE.C:
  In <IsLocalName>, use the result of <CopyBlockLines> as opposed to calling a separate function.


Build #1573 -- Version 0.4.18.xx
--------------------------------

* Fix Bug When Creating Fallback Font

Directory trunk:

EDITFCN.C:
  In <LclEditCtrlWndProc/WM_SETFONT>, I mistyped the test for the Function Editor window causing it not to be found.

MAIN.C:
  In <CreateNewFontCom>, test for failure of that function when calling itself for Fallback fonts.


Build #1572 -- Version 0.4.18.xx
--------------------------------

* Fix Bug Of Passing Too Large A Limit To UpDown Control For []PP

Directory trunk:

CUSTOMIZE.C:
  Change DEF_MAX_QUADPPxxx names so as to better reflect on their usage as well as make them more readable.
  Use UDM_SETPOS32 instead of UDM_SETPOS and UDM_SETRANGE32 instead of UDM_SETRANGE to be consistent.
  Use special value of DEF_MAX_QUADPP_UDM for UDM_SETRANGE32 for []PP to workaround a bug in the UpDown Control.

DISPLAY.C:
GETFNS.C:
INIFILE.C:
PO_VARIANT.C:
QF_TF.C:
SC_SAVE.C:
SYSVARS.C:
SYSVARS.H:
  Change DEF_MAX_QUADPPxxx names so as to better reflect on their usage as well as make them more readable.

MAIN.C:
REBAR.C:
  Use UDM_SETPOS32 instead of UDM_SETPOS and UDM_SETRANGE32 instead of UDM_SETRANGE to be consistent.


Build #1571 -- Version 0.4.18.xx
--------------------------------

* Display Function Fix Time As Local Time

Directory trunk:

QF_AT.C:
  In <AttributeFixTime>, convert the GMT time of the function to local time
    before converting it to system time.


Build #1570 -- Version 0.4.18.xx
--------------------------------

* Replace Size-Limited Windows API Functions For Writing Private Profiles
* Check For Too Short []FEATURE

Directory trunk:

DISPDBG.C:
EXECDFN.C:
PERTAB.H:
SAVEFCN.H:
SC_IN.C:
SESSMAN.C:
  Use proper size for iMaxSize var and rename from uMaxSize.

HEADERS.H:
  Include new header <sc_save.h>.

INIFILE.C:
SC_SAVE.C:
SC_SI.C:
  Define new and replace old size-limited Windows API functions for writing Private Profiles.

INIPARSER.C:
  Define matching INIPARSER.C profile writing functions.

SC_COPY.C:
  Use proper size for iMaxSize var and rename from uMaxSize.
  Pass remaining size to various functions.

SC_LOAD.C:
  Use proper size for iMaxSize var and rename from uMaxSize.
  Pass remaining size to various functions.
  Pass SYMENTRY being loaded so as to check for []FEATURE.

SC_SAVE.H:
  Define new header file for Callback functions.

WORKSPACE.H:
  Define new and replace old size-limited Windows API functions for writing Private Profiles.
  Use proper size for iMaxSize var and rename from uMaxSize.


Build #1569 -- Version 0.4.18.xx
--------------------------------

* Prepare For Move To VS2015
* Implement Output Debugging
* Remove Vector and Matrix Editing Code
* Allow Line Continuation Markers To Be Printed

Directory trunk:

COMMON.C:
  Define function needed by VS2015.

CUSTOMIZE.C:
  Implement output debugging.
  Prepare for move to VS2015.

DEFINES.H:
DISPLAY.C:
EDITCTRL.H:
EDITFCN.C:
MAKEFILE.INC:
PF_DTACKJOT.C:
QF_TC.C:
RESOURCE.H:
UNICODE.H:
UNITRANSTAB.H:
  Implement output debugging.

DISPLAY.H:
  Delete unused struc element.

EXTERNS.H:
INIFILE.C:
MAIN.C:
MAIN.RC:
  Implement output debugging.
  Remove vector and matrix editing code.

HEADERS.H:
  Delete <termcode.h> as it is no longer used.

PF_PI.C:
SC_COMMON.C:
SC_LOAD.C:
  Prepare for move to VS2015.

SESSMAN.C:
  Allow Line Continuation markers to be printed.

TERMCODE.H:
  Delete this file as it defines numeric codes for ASCII equivalents and we use Unicode only.

WORKSPACE.H:
  Delete unused key name.


Directory trunk\WineHQ:

EDITCTRL.C:
LOCAL.H:
  Implement output debugging.


Directory trunk\WineHQ\include:

BASETSD.H:
  Comment out inline statements as they conflict with VS2015.


Build #1568 -- Version 0.4.18.xx
--------------------------------

* Change Default Symbol For Alt-k From SingleQuote To DelTilde

Directory trunk:

KEYBOARDS.H:
  Change the default symbol for Alt-k from a single quotemark to Del-Tilde.


Build #1567 -- Version 0.4.18.xx
--------------------------------

* Don't Save []WSID Into The Workspace .INI File

Directory trunk:

SC_SAVE.C:
  In IF stmts always compare ptr against NULL.
  Don't save []WSID into the workspace .INI file.


Build #1566 -- Version 0.4.18.xx
--------------------------------

* []EX Now Returns A Shy Result

Directory trunk:

QF_EX.C:
  []EX now returns a shy result.


Build #1565 -- Version 0.4.18.xx
--------------------------------

* Miscellaneous Changes

Directory trunk:

EDITFCN.C:
MAIN.C:
PERFMON.H:
  New definition of PERFMONINIT and PERFMONSHOW has an argument.

EXECDFN.C:
SAVEFCN.C:
  Fix typo in comment.

QF_CR.C:
  In IF stmts always compare ptr against NULL.

SESSMAN.C:
  In IF stmts always compare ptr against NULL.
  For errors that occur during initialization, use <MBW> instead of <DbgMsg> as the latter won't display unless the Debug window is active, which it isn't during initialization.


Directory trunk\htdocs:

INDEX-BODY.AHTML:
  Change upper limit of Bitcoin donation.
  Reword Bitcoin donation text.

LICENSE-BODY.HTML:
  Update Copyright year.
  Update source code repository from GoogleCode to SourceForge.
  Include license agreement terms from MPC.


Build #1564 -- Version 0.4.18.xx
--------------------------------

* Implement Line Continuations

Directory trunk:

AFOFNS.C:
  Define an FSA to detect whether or not text represents an AFO.
  Define a function to erase $AFORESULT separated out from <AfoReturn>
  Include additional functions needed to handle LC when saving a function.

AFOFNS.H:
  Define structs to handle the above FSA.

COMMON.C:
  In <CharFromPos>, allow the output ptrs to be NULL in case the caller doesn't need them.

CRASH.C:
DEBUG.C:
  Rename AC_xx to WC_xx when it refers to a WCHAR.

CUSTOMIZE.C:
  Implement user control of the LC char similar to the code for Keyboards.
  In IF stmts always compare ptr against NULL.

DEFINES.H:
  Define new window extra to hold the global memory handle of any old UDFO.
  Define default char for LC along with related character and string constants.

DISPLAY.C:
  Display Line Continuation marker for CR/CR/LF when displaying a character vector.

EDITCTRL.H:
  Define message # for determining whether or not a line is continued.
  Define function line # indent.

EDITFCN.C:
  Define function to calculate left margins for a function editor window.
  Define functions to use in place of certain EM_REPLACESEL messages to disallow editing an AFO header.
  Tell the Edit Ctrl we want soft line-breaks.
  Draw Line Continuation markers when we draw function line numbers.
  When drawing line numbers, skip those lines continued from the previous one.

ENUMS.H:
  Move var from <fh_parse.h> to <enums.h> as they are closely related to each other.

EXECDFN.C:
  If the function is an AFO and the current line starts with a System label, return NoValue.
  Stop executing an AFO if it returns a value.

EXECMFN.C:
  Switch the function line numbers to origin-1 with 0 = header.

EXTERNS.H:
  Delete references to the Line Continuation bitmap as we now use a Unicode character.
  Allow the user to control the foreground and background of the LC char when drawn.
  Save the Unicode char used in Customize's Keyboards and User Prefs categories.

FH_PARSE.H:
  Define bit flag for System Label line.
  Move var from <fh_parse.h> to <enums.h> as they are closely related to each other.
  Comment on dependencies for <FCN_VALENCES> and define <FCN_VALENCES_LENGTH>.

FH_PARSE.Y:
  Handle Line Continuations.

GETFNS.C:
  In <GetPrototypeFcnPtr>, allow AFO fns as we now support system labels in AFOs.

HEADERS.H:
  Include afofns.h.

IMMEXEC.C:
  Define various functions to handle a block of continued lines.
  In <ImmExecLine>, handle LCs.

INIFILE.C:
  Read in on startup and write out on termination the two Unicode bases as well as the last Unicode chars.
  Read in on startup and write out on termination Syntax Coloring for Line Continuations.

KEYBOARDS.H:
  Define vars to hold the Unicode base and last char for the Keyboard category.

MAIN.C:
  Define a enum callback function to draw Line Continuations when the User Preference LC char is set.
  In <CreateNewFontCom>, pass the font enum and calculate the pixel width of the Line Continuation marker for that font.
  Delete references to the Line Continuation bitmap as we now use a Unicode character.

MAIN.RC:
  Define dialog entries for LC Syntax Coloring as well as the UI for changing the character used.
  Delete references to the Line Continuation bitmap as we now use a Unicode character.

MAKEFILE.INC:
  Include new library.
  Delete references to the Line Continuation bitmap as we now use a Unicode character.

NARS2000.VCXPROJ:
  Include new library.

PARSELINE.C:
  Handle stopping an AFO when it returns a value.
  Handle LC encountered during parsing.

PL_PARSE.H:
  Handle stopping an AFO when it returns a value.

PO_SLOPE.C:
  In IF stmts always compare ptr against NULL.

QF_CR.C:
  Include "Hdr" in name of result of <MyGlobalLock>.
  Handle Line Continuations in []CR/[]VR results.
  In IF stmts always compare ptr against NULL.

QF_EX.C:
  Allow []Z as an <EraseableName>.

QF_FX.C:
  Include "Hdr" in name of result of <MyGlobalLock>.
  Detect whether or not a text represents an AFO.
  Include additional functions needed to handle LC when saving a function.
  In IF stmts always compare ptr against NULL.

QF_TF.C:
  Include additional functions needed to handle LC when saving a function.

RESOURCE.H:
  Delete references to the Line Continuation bitmap as we now use a Unicode character.
  Define IDCs for User Prefs UI to change the default LC.
  Define IDCs for LC Syntax Coloring as well as the UI for changing the character used.

SAVEFCN.C:
  Define AFO headers to cover all cases.
  Include additional functions needed to handle LC when saving a function.
  In IF stmts always compare ptr against NULL.
  Switch the function line numbers to origin-1 with 0 = header.
  Allow System Labels in an AFO.

SAVEFCN.H:
SC_INASCII.C:
SC_LOAD.C:
  Include additional functions needed to handle LC when saving a function.

SESSMAN.C:
  In IF stmts always compare ptr against NULL.
  Define function to calculate the pixel width of a Line Continuation marker for a given font enum.
  Define function to draw all Line Continuations as well as just one.
  Tell the Edit Ctrl we want soft line-breaks.
  In <MYWM_KEYDOWN/VK_ENTER>, handle Shift-Enter as well as Ctrl-Enter.

SIS.H:
  Handle stopping an AFO when it returns a value.

SYNTAXCOLORS.H:
  Define entries for Syntax Coloring of LCs.

THREADS.H:
  Improve comments.

TOKENIZE.C:
  Allow comments inside an AFO.

VER.RC:
  Increment version # to 0.4.18.xx.


Directory trunk\WineHQ:

EDITCTRL.C:
  Delete WIN16 code.
  Comment existing code for soft line-breaks.
  Handle Shift-Enter as a soft line-break.
  Handle local message to determine if a line is continued.
